{
  "openapi": "3.0.1",
  "info": {
    "title": "Blue API reference",
    "description": "Alphaus provides an API for interacting with its services. Blue API is a RESTful API that can be accessed by an HTTP client such as `curl`, or any HTTP library which is part of most modern programming languages. This API reference is autogenerated from [protocol buffers](https://developers.google.com/protocol-buffers) defined in this [repository](https://github.com/alphauslabs/blueapi), together with our supported [client libraries](https://alphauslabs.github.io/docs/blueapi/client-sdks/). See the official [documentation](https://alphauslabs.github.io/docs/blueapi/overview/) for more information.\n\nYou may encounter the following feature maturity indicators:\n- **(WORK-IN-PROGRESS)** - Development is ongoing, don't use yet;\n- **(BETA)** - New or experimental features, subject to changes; and\n- **(DEPRECATED)** - Outdated or replaced features.\n\nSome endpoints, especially those that return lists of resources, have streaming responses; newline-separated stream of “chunks”. Each chunk is an envelope that can contain either a response message or an error. Only the last chunk will include an error, if any.",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://api.alphaus.cloud/m/blue"
    }
  ],
  "tags": [
    {
      "name": "Organization",
      "description": "(BETA) Organization API. Base URL: https://api.alphaus.cloud/m/blue",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/org/"
      }
    },
    {
      "name": "Iam",
      "description": "(BETA) IAM API. Base URL: https://api.alphaus.cloud/m/blue",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/iam/"
      }
    },
    {
      "name": "Admin",
      "description": "Admin API. Base URL: https://api.alphaus.cloud/m/blue",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/admin/"
      }
    },
    {
      "name": "Cost",
      "description": "Cost API. Base URL: https://api.alphaus.cloud/m/blue/cost",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/cost/"
      }
    },
    {
      "name": "Billing",
      "description": "(BETA) Billing API. Base URL: https://api.alphaus.cloud/m/blue/billing",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/billing/"
      }
    },
    {
      "name": "Operations",
      "description": "(BETA) Long operations API. Base URL: https://api.alphaus.cloud/m/blue",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/operations/"
      }
    },
    {
      "name": "Cover",
      "description": "(ALPHA) Cover API. Base URL: https://api.alphaus.cloud/m/blue/cover",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/cover/"
      }
    },
    {
      "name": "Pricing",
      "description": "(BETA) Pricing API. Base URL: https://api.alphaus.cloud/m/blue/pricing",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/pricing/"
      }
    },
    {
      "name": "Flow",
      "description": "(ALPHA) Flow API. Base URL: https://api.alphaus.cloud/m/blue/flow",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/flow/"
      }
    },
    {
      "name": "Prism",
      "description": "(Alpha) Prism API. Base URL: https://api.alphaus.cloud/m/blue/prism",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/prism/"
      }
    },
    {
      "name": "Preferences",
      "description": "(BETA) Preferences API. Base URL: https://api.alphaus.cloud/m/blue",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/preferences/"
      }
    }
  ],
  "paths": {
    "/admin/v1/acctgroups": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Lists all account groups.",
        "operationId": "Admin_ListAccountGroups",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1ListAccountGroupsResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1ListAccountGroupsResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/admin/v1/acctgroups/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Gets an account group.",
        "operationId": "Admin_GetAccountGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetAccountGroupResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/admin/v1/auditlogs:export": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "WORK-IN-PROGRESS: Exports audit logs for login user's organization.",
        "operationId": "Admin_ExportAuditLogs",
        "requestBody": {
          "description": "Request message for the ExportAuditLogs rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ExportAuditLogsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiAuditExport"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/admin/v1/aws/reports/proforma": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "WORK-IN-PROGRESS: Configure AWS Proforma Cost and Usage Report.",
        "operationId": "Admin_CreateProformaCur",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateProformaCurRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProformaCur"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/admin/v1/aws/xacct/cwms": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "WORK-IN-PROGRESS: Gets a CloudFormation launch URL for enabling CloudWatch metrics streaming on a target account.",
        "operationId": "Admin_GetCloudWatchMetricsStreamTemplateUrl",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCloudWatchMetricsStreamTemplateUrlResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "WORK-IN-PROGRESS: Starts validation of a CloudWatch Metrics streaming stack deployment.",
        "operationId": "Admin_CreateCloudWatchMetricsStream",
        "requestBody": {
          "description": "Request message for the Admin.CreateCloudWatchMetricsStream rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateCloudWatchMetricsStreamRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CloudWatchMetricsStream"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/admin/v1/aws/xacct/dca": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Gets a CloudFormation launch URL for enabling the default cross-account access to your account's cost information based on type. See comments on the type for more information on what each template does.",
        "operationId": "Admin_GetDefaultCostAccessTemplateUrl",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Optional. Valid values are `default`, `s3only`, and `apionly`. Defaults to `default` if empty.\n\n`default` - Template for setting up both CUR export and read-only access to cost information. If selected, you need to deploy this template to `us-east-1` region as CloudFormation only supports the `AWS::CUR::ReportDefinition` in that region at the moment. The target S3 bucket will also be created in that region. If you prefer your S3 bucket to be located in a different region, you can use the template from this API by setting the type to `s3only`. After your S3 bucket is ready, call this API again (type is `default`) and set the `CurS3BucketOption` parameter to `USE_EXISTING`, then set your bucket name and region accordingly. This is the default for Ripple, unless specified otherwise.\n\n`apionly` - Template for setting up ready-only access to cost information. Handy if you already have exported your CUR to Alphaus through other means (i.e. manual setup). This template is the same as the `default` type but without the CUR export definitions. Although not required, we recommend you to deploy this template to allow us to query your cost-related information such as Reserved Instances, Saving Plans, etc. through the AWS API. At the moment, we only rely on CUR data which is a best-effort basis and sometimes not accurate. This is the default for Wave(Pro), unless specified otherwise.\n\n`s3only` - A helper template for creating an S3 bucket to be used for CUR export.\n\n`default-2.0`- For default cur 2.0 templates. \n\n`s3only-2.0` - For s3only cur 2.0 templates.\n\nAll templates are publicly available from the reponse link (`templateUrl`) if you want to audit the included permissions.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetDefaultCostAccessTemplateUrlResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Starts validation of a default cross-account access stack deployment. If successful, the IAM role created from the CloudFormation stack will be registered to the target.",
        "operationId": "Admin_CreateDefaultCostAccess",
        "requestBody": {
          "description": "Request message for the Admin.CreateDefaultCostAccess rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateDefaultCostAccessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DefaultCostAccess"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/admin/v1/aws/xacct/dca/all:read": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Lists the default cross-account access role(s) attached to accounts under caller.",
        "operationId": "Admin_ListDefaultCostAccess",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1DefaultCostAccess",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1DefaultCostAccess"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/admin/v1/aws/xacct/dca/{target}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Gets the current default cross-account role attached to the input target.",
        "operationId": "Admin_GetDefaultCostAccess",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "description": "Required. The target AWS account to query.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DefaultCostAccess"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Starts an update to an existing default cross-account access CloudFormation stack for template changes, if any. Only call this API if the status of your default cross-account access is 'outdated'.",
        "operationId": "Admin_UpdateDefaultCostAccess",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "description": "Required. The target AWS account to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protosOperation"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Deletes the current default cross-account access role attached to this target account. This does not delete the CloudFormation deployment in your account.",
        "operationId": "Admin_DeleteDefaultCostAccess",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "description": "Required. The target AWS account to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/admin/v1/defaultmeta": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "WORK-IN-PROGRESS: Set the default meta saved per organization",
        "operationId": "Admin_UpdateMSPDefaultMeta",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateMSPDefaultMetaRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/admin/v1/defaultmeta/{mspId}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "WORK-IN-PROGRESS: Fetch the default meta saved per organization",
        "operationId": "Admin_GetMSPDefaultMeta",
        "parameters": [
          {
            "name": "mspId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetMSPDefaultMetaResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/admin/v1/notification/channels": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Lists all notification channels for login user's organization or group.",
        "operationId": "Admin_ListNotificationChannels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListNotificationChannelsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "WORK-IN-PROGRESS: Creates notification settings for login user's organization or group.",
        "operationId": "Admin_CreateNotificationChannel",
        "requestBody": {
          "description": "Request message for the Admin.CreateNotificationChannel rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateNotificationChannelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiNotificationChannel"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/admin/v1/notification/channels/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Gets notification channel for login user's organization or group.",
        "operationId": "Admin_GetNotificationChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiNotificationChannel"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "WORK-IN-PROGRESS: Updates notification settings for login user's organization or group.",
        "operationId": "Admin_UpdateNotificationChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. ID of the notification channel to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUpdateNotificationChannelBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiNotificationChannel"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Deletes notification settings for login user's organization or group.",
        "operationId": "Admin_DeleteNotificationChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. ID of the notification channel to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/admin/v1/notification/default": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Creates a default notification channel of type email based on the caller's primary email address.",
        "operationId": "Admin_CreateDefaultNotificationChannel",
        "requestBody": {
          "description": "Request message for the Admin.CreateDefaultNotificationChannel rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateDefaultNotificationChannelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiNotificationChannel"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/admin/v1/notification/settings": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get notification settings for login user's organization or group.",
        "operationId": "Admin_GetNotificationSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiNotificationSettings"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Creates or updates notification settings for login user's organization or group.",
        "operationId": "Admin_SaveNotificationSettings",
        "requestBody": {
          "description": "Request message for the Admin.SaveNotificationSettings rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1SaveNotificationSettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiNotificationSettings"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/admin/v1/notifications": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "WORK-IN-PROGRESS: List all notification for login user's organization.",
        "operationId": "Admin_ListNotifications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListNotificationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "WORK-IN-PROGRESS: Creates notification for login user's organization.",
        "operationId": "Admin_CreateNotification",
        "requestBody": {
          "description": "Request message for the Admin.CreateNotificationTypeChannels rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blueapiapiNotification"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/admin/v1/notifications/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "WORK-IN-PROGRESS: Get notifications for login user's organization.",
        "operationId": "Admin_GetNotification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notificationType",
            "in": "query",
            "description": "Required\nValid values:\n`InvoiceCalculationStarted`,\n`InvoiceCalculationFinished`,\n`CurUpdatedAfterInvoice`.\n`AccountBudgetAlert`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blueapiapiNotification"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "WORK-IN-PROGRESS: Updates notification for login user's organization.",
        "operationId": "Admin_UpdateNotification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUpdateNotificationBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blueapiapiNotification"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "WORK-IN-PROGRESS: Deletes notification for login user's organization.",
        "operationId": "Admin_DeleteNotification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notificationType",
            "in": "query",
            "description": "Required\nValid values:\n`InvoiceCalculationStarted`,\n`InvoiceCalculationFinished`,\n`CurUpdatedAfterInvoice`.\n`AccountBudgetAlert`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/admin/v1/wavefeatures": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "WORK-IN-PROGRESS: Get settings value for wave features management per organization",
        "operationId": "Admin_GetWaveFeatures",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetWaveFeaturesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "WORK-IN-PROGRESS: Updates the wave feature management default value per organization",
        "operationId": "Admin_UpdateWaveFeatureSetting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateWaveFeatureSettingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetWaveFeaturesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/billing/v1/reseller/announcements/{announcementId}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the announcement list.",
        "operationId": "Billing_GetAnnouncements",
        "parameters": [
          {
            "name": "announcementId",
            "in": "path",
            "description": "Optional. Set empty to return all",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1Announcement",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1Announcement"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/iam/v1/apiclients": {
      "get": {
        "tags": [
          "Iam"
        ],
        "summary": "Lists all API clients belonging to the caller.",
        "operationId": "Iam_ListApiClients",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of apiApiClient",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/apiApiClient"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Iam"
        ],
        "summary": "Creates an API client for the caller.",
        "operationId": "Iam_CreateApiClient",
        "requestBody": {
          "description": "Request message for the Iam.CreateApiClient rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateApiClientRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiApiClient"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/iam/v1/apiclients/{id}": {
      "delete": {
        "tags": [
          "Iam"
        ],
        "summary": "Deletes an API client belonging to the caller.",
        "operationId": "Iam_DeleteApiClient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. The client id to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/iam/v1/grouprootusers": {
      "get": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Retrieves all the existing group root users asscoiated with the organization.",
        "operationId": "Iam_ListGroupRootUsers",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of apiGroupRootUser",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/apiGroupRootUser"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Creates a new root user for a billing group or access group.",
        "operationId": "Iam_CreateGroupRootUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateGroupRootUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiGroupRootUser"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/iam/v1/grouprootusers/{id}": {
      "get": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Retrieves a group root user.",
        "operationId": "Iam_GetGroupRootUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiGroupRootUser"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Deletes an existing group root user.",
        "operationId": "Iam_DeleteGroupRootUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/iam/v1/grouprootusers/{id}/features": {
      "get": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Retrieves the features available to a user on an Alphaus product.",
        "description": "For a list of valid feature flags, see our documentation at https://labs.alphaus.cloud/docs/blueapi/apis/iam/.",
        "operationId": "Iam_GetFeatureFlags",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiFeatureFlags"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Updates the features available to a user on an Alphaus product.",
        "description": "For a list of valid feature flags, see our documentation at https://labs.alphaus.cloud/docs/blueapi/apis/iam/.",
        "operationId": "Iam_UpdateFeatureFlags",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IamUpdateFeatureFlagsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiFeatureFlags"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/iam/v1/idps": {
      "get": {
        "tags": [
          "Iam"
        ],
        "summary": "Lists all SSO Identity Providers (IdP).",
        "operationId": "Iam_ListIdentityProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListIdentityProvidersResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Iam"
        ],
        "summary": "Registers an SSO Identity Provider (IdP).",
        "operationId": "Iam_CreateIdentityProvider",
        "requestBody": {
          "description": "Request message for the Iam.CreateIdentityProvider rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateIdentityProviderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/iam/v1/idps/{id}": {
      "delete": {
        "tags": [
          "Iam"
        ],
        "summary": "Deletes an SSO Identity Provider (IdP).",
        "operationId": "Iam_DeleteIdentityProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. The IdP id to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/iam/v1/ipfilters": {
      "get": {
        "tags": [
          "Iam"
        ],
        "summary": "Lists all IP filters. At the moment, this API is only available to root users.",
        "operationId": "Iam_ListIpFilters",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1IpFilter",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1IpFilter"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Iam"
        ],
        "summary": "Creates an IP filter item for IP blacklisting or whitelisting. At the moment, this API is only available to root users.",
        "operationId": "Iam_CreateIpFilter",
        "requestBody": {
          "description": "Request message for the Iam.CreateIpFilter rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateIpFilterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1IpFilter"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/iam/v1/ipfilters/{id}": {
      "delete": {
        "tags": [
          "Iam"
        ],
        "summary": "Deletes an IP filter item. At the moment, this API is only available to root users.",
        "operationId": "Iam_DeleteIpFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The IP filter id to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/iam/v1/metadata/{id}": {
      "get": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Get Sub User Metadata for login user's organization based on user identity",
        "operationId": "Iam_GetSubUserMetadata",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. The parent ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subId",
            "in": "query",
            "description": "Optional. The sub-user ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSubUser"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/iam/v1/mfausers": {
      "get": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: List MFA users info for login user's organization based on status.",
        "operationId": "Iam_GetMFAUsers",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Optional. If non empty: list users by status. Otherwise will list all MFA users.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1MFAUsersInfoResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/iam/v1/partners/{id}/token": {
      "post": {
        "tags": [
          "Iam"
        ],
        "summary": "BETA: Creates a partner token for custom integrations. Available only to Ripple and Cover users.",
        "operationId": "Iam_CreatePartnerToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Partner id or audience for the token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IamCreatePartnerTokenBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1PartnerToken"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/iam/v1/partners/{id}/token:refresh": {
      "post": {
        "tags": [
          "Iam"
        ],
        "summary": "BETA: Refreshes an expired partner token. Only partners are expected to call this API.",
        "operationId": "Iam_RefreshPartnerToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Partner id or audience for the token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IamRefreshPartnerTokenBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1PartnerToken"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/iam/v1/password:reset": {
      "post": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Validate reset password link and proceed to update password",
        "operationId": "Iam_ValidateResetPasswordLinkAndChangePassword",
        "requestBody": {
          "description": "Request for message Iam.ValidateVerificationCode rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ValidateResetPasswordLinkAndChangePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ValidateResetPasswordLinkAndChangePasswordResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/iam/v1/permissions": {
      "get": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Lists all permissions based on the input's scope. For reference, supported permissions can be found on [https://github.com/mobingi/rbac-permissions].",
        "operationId": "Iam_ListPermissions",
        "parameters": [
          {
            "name": "subUser",
            "in": "query",
            "description": "Optional. The subuser to query. If empty (default), query all available permissions. If set to a valid subuser, query that subuser's permissions, if allowed. You can also set this field to `me` to query your own permissions.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListPermissionsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/iam/v1/ripple/password:requestresetcode": {
      "post": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Send an email reset code",
        "operationId": "Iam_SendRipplePasswordResetCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1SendRipplePasswordResetCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/iam/v1/ripple/password:reset": {
      "post": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Reset ripple password using code from email",
        "operationId": "Iam_ResetRipplePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ResetRipplePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ResetRipplePasswordResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/iam/v1/roles": {
      "get": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Lists all available roles.",
        "operationId": "Iam_ListRoles",
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "description": "Optional. If not set, all roles will be returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListRolesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Creates a role. If your `permissions` list contains an `Admin` entry, all other entries will be discarded except `Admin`. Roles are root user-level. That means all roles created by the root user, or any subuser that has permissions to create roles, are available to all subusers.",
        "operationId": "Iam_CreateRole",
        "requestBody": {
          "description": "Request message for the Iam.CreateRole rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiRole"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/iam/v1/roles/{namespace}/{name}": {
      "put": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Updates a role. If role name is different, rename mapped role name.",
        "operationId": "Iam_UpdateRole",
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "description": "Required. The new namespace.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "Required. The role name to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IamUpdateRoleBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiRole"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Deletes a role. Deleting a role will also remove all mappings.",
        "operationId": "Iam_DeleteRole",
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "description": "Required. The parent namespace.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "Required. The role name to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/iam/v1/userroles": {
      "get": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Lists roles attached to the caller or the input.",
        "operationId": "Iam_ListUserRoleMappings",
        "parameters": [
          {
            "name": "subUser",
            "in": "query",
            "description": "Optional. The subuser to query. Defaults to caller if not set.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListUserRoleMappingsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Updates user-to-role mappings. You can only map (or attach) up to 5 roles to a user per namespace. There is no limit for filtering rules per user.",
        "operationId": "Iam_UpdateUserRoleMapping",
        "requestBody": {
          "description": "Request message for the Iam.UpdateUserRoleMapping rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateUserRoleMappingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateUserRoleMappingResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Maps roles to a subuser. You can only map (or attach) up to 5 roles to a user per namespace. There is no limit for filtering rules per user.",
        "operationId": "Iam_CreateUserRoleMapping",
        "requestBody": {
          "description": "Request message for the Iam.CreateUserRoleMapping rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateUserRoleMappingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateUserRoleMappingResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/iam/v1/users": {
      "get": {
        "tags": [
          "Iam"
        ],
        "summary": "Lists all subusers.",
        "operationId": "Iam_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of apiUser",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/apiUser"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Iam"
        ],
        "summary": "Creates a subuser.",
        "operationId": "Iam_CreateUser",
        "requestBody": {
          "description": "Request message for the Iam.CreateUser rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiUser"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/iam/v1/users/{id}": {
      "get": {
        "tags": [
          "Iam"
        ],
        "summary": "Gets subuser information. This call includes all of the subuser metadata. See\n[https://alphauslabs.github.io/blueapi/] for the list of supported attributes.\nIf the `{name}` parameter is `me` or `-`, returns the caller information, which\nis equivalent to `WhoAmI()` or `GET:/iam/v*/whoami`.",
        "operationId": "Iam_GetUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiUser"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Iam"
        ],
        "summary": "Deletes a subuser.",
        "operationId": "Iam_DeleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. The subuser name to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/iam/v1/whoami": {
      "get": {
        "tags": [
          "Iam"
        ],
        "summary": "Gets user information about the caller. This call includes all of the user metadata.\nSee [https://alphauslabs.github.io/blueapi/] for the list of supported attributes.",
        "operationId": "Iam_WhoAmI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiUser"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/iam/v1/{user}/password:verify": {
      "post": {
        "tags": [
          "Iam"
        ],
        "summary": "WORK-IN-PROGRESS: Verify User Input For Reset Password",
        "operationId": "Iam_VerifyUserForResetPassword",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1VerifyUserForResetPasswordResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/ops/v1": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Lists long-running operations.",
        "operationId": "Operations_ListOperations",
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "description": "Optional. The name of the operation's parent resource. Not used at the moment.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asOf",
            "in": "query",
            "description": "Optional. List operations on and after this date. Format is yyyymmdd. For example,\nif you want to list all operations starting from June 01, 2021, set to `20210601`.\nIf not set, defaults to the first day of the current UTC month.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDone",
            "in": "query",
            "description": "Optional. If true, include all operations that are marked as done. Exclude by\ndefault.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of protosOperation",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/protosOperation"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/ops/v1/{name}": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Gets the latest state of a long-running operation. You can use this method to\npoll the operation result at intervals.",
        "operationId": "Operations_GetOperation",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the operation resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protosOperation"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Operations"
        ],
        "summary": "Deletes a long-running operation. This method indicates that the client is no\nlonger interested in the operation result. It does not cancel the operation.",
        "operationId": "Operations_DeleteOperation",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the operation resource to be deleted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/ops/v1/{name}:cancel": {
      "post": {
        "tags": [
          "Operations"
        ],
        "summary": "Starts asynchronous cancellation on a long-running operation. The server makes\na best effort to cancel the operation, but success is not guaranteed. On successful\ncancellation, the operation is not deleted; instead, it becomes an operation with\na value of [google.rpc.Status.code][google.rpc.Status.code] 1, corresponding\nto `Code.CANCELLED`.",
        "operationId": "Operations_CancelOperation",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the operation resource to be cancelled.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperationsCancelOperationBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/org/v1": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Gets information about the caller's organization.",
        "operationId": "Organization_GetOrg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rippleOrg"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Creates the organization account.",
        "operationId": "Organization_CreateOrg",
        "requestBody": {
          "description": "Request message for the Organization.CreateOrg rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateOrgRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateOrgResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Organization"
        ],
        "summary": "WORK-IN-PROGRESS: Deletes the organization.",
        "operationId": "Organization_DeleteOrg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/org/v1/metadata": {
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "WORK-IN-PROGRESS: Updates organization metadata. See [https://alphauslabs.github.io/blueapi/]\nfor the list of supported attributes.",
        "operationId": "Organization_UpdateMetadata",
        "requestBody": {
          "description": "Request message for the Organization.UpdateMetadata rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateMetadataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/org/v1/passwd": {
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "Updates the organization password.",
        "operationId": "Organization_UpdatePassword",
        "requestBody": {
          "description": "Request message for the Organization.UpdatePassword rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdatePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/org/v1:sendVerification": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "WORK-IN-PROGRESS: Sends (or resends) the verification email. Only valid for unverified\norganizations. The verification key will be valid for a day.",
        "operationId": "Organization_SendVerification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/org/v1:verify": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "WORK-IN-PROGRESS: Verifies an organization using the key received from the verification email.\nThe verification key is only valid for a day.",
        "operationId": "Organization_VerifyOrg",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/prefs/v1": {
      "get": {
        "tags": [
          "Preferences"
        ],
        "summary": "WORK-IN-PROGRESS: Gets current preferences.",
        "operationId": "Preferences_GetPreferences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1Preference"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v0/info": {
      "get": {
        "tags": [
          "Pricing"
        ],
        "summary": "Test endpoint only.",
        "operationId": "Pricing_GetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blueapipricingv1GetInfoResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v0/{vendor}/pricing": {
      "post": {
        "tags": [
          "Pricing"
        ],
        "summary": "WORK-IN-PROGRESS: Get cloud pricing information",
        "operationId": "Pricing_GetPricing",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. Cloud vendor, only `aws` and `azure` are currently supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricingGetPricingBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetPricingResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v0/{vendor}/services": {
      "get": {
        "tags": [
          "Pricing"
        ],
        "summary": "WORK-IN-PROGRESS: Get list of supported services, regions, attributes, and columns for filtering",
        "operationId": "Pricing_GetSupportedServices",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. Cloud vendor, only `aws` and `azure` are currently supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetSupportedServicesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/accessgroups": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Lists access group. Only available in Ripple.",
        "operationId": "Billing_ListAccessGroups",
        "parameters": [
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of apirippleAccessGroup",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/apirippleAccessGroup"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Registers the access group. Only available in Ripple.",
        "operationId": "Billing_CreateAccessGroup",
        "requestBody": {
          "description": "Request message for the CreateAccessGroup rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateAccessGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apirippleAccessGroup"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/accessgroups/{accessGroupId}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Gets an access group.",
        "operationId": "Billing_GetAccessGroup",
        "parameters": [
          {
            "name": "accessGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetAccessGroupResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/accessgroups/{id}": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "Updates the access group. Only available in Ripple.",
        "operationId": "Billing_UpdateAccessGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. access group id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateAccessGroupBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apirippleAccessGroup"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Billing"
        ],
        "summary": "Deletes the access group. Only available in Ripple.",
        "operationId": "Billing_DeleteAccessGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. access group id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/account": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Registers GCP/Azure account.",
        "operationId": "Cover_RegisterDataAccess",
        "requestBody": {
          "description": "Request message for Register Data Access. For azure and gcp.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1RegisterDataAccessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/account/all:read": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Lists Azure and GCP accounts.",
        "operationId": "Cover_ListDataAccess",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1DataAccess",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1DataAccess"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/account/unregistered:read": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Lists unregistered linked accounts",
        "operationId": "Cover_ListUnregisteredAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListUnregisteredAccountsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/account/{target}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Gets the current account. For GCP and Azure.",
        "operationId": "Cover_GetDataAccess",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "description": "Required. (Billing ID for GCP / Account ID for Azure)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendor",
            "in": "query",
            "description": "Vendor (GCP/Azure)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountType",
            "in": "query",
            "description": "In the context of fetching account details, specifying the account type is necessary. This is because the target alone might not uniquely identify an account and could result in multiple data points.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DataAccess"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update GCP/Azure account info",
        "operationId": "Cover_UpdateDataAccess",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "description": "Billing Id for GCP, Account Id for Azure",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateDataAccessBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cover"
        ],
        "summary": "Deletes GCP or Azure accounts based on the provided request.",
        "operationId": "Cover_DeleteDataAccess",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "description": "Required. (Billing ID for GCP / Account ID for Azure)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendor",
            "in": "query",
            "description": "Vendor (GCP/Azure)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountType",
            "in": "query",
            "description": "In the context of fetching account details, specifying the account type is necessary. This is because the target alone might not uniquely identify an account and could result in multiple data points.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/acctaccess/{target}": {
      "delete": {
        "tags": [
          "Cover"
        ],
        "summary": "Deletes the current account access role attached to this target account. This does not delete the CloudFormation deployment in your account.",
        "operationId": "Cover_DeleteAccountAccess",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "description": "Required. The target AWS account to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DeleteAccountAccessResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/activity/all:read": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_ListActivities",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListActivitiesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1Activity",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1Activity"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/adjustmentconfig/{vendor}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets adjustment config",
        "operationId": "Billing_GetAdjustmentConfig",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiAdjustmentConfig"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "Updates adjustment config",
        "operationId": "Billing_UpdateAdjustmentConfig",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateAdjustmentConfigBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiAdjustmentConfig"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Creates adjustment config",
        "description": "[ERRORS] \n- InvalidArgument:\n - the AdjustmentConfig is already exists.\n- NotFound:\n - the AdjustmentConfig is not found.",
        "operationId": "Billing_CreateAdjustmentConfig",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCreateAdjustmentConfigBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiAdjustmentConfig"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Billing"
        ],
        "summary": "Deletes adjustment config",
        "operationId": "Billing_DeleteAdjustmentConfig",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ai/costusage": {
      "post": {
        "tags": [
          "Cover"
        ],
        "operationId": "Cover_GetAICostAndUsage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1GetAICostAndUsageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetAICostAndUsageResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/alerts": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "CreateBudgetAlerts",
        "description": "Create the budget alerts.\nOnly available in Wave(Pro).",
        "operationId": "Cost_CreateBudgetAlerts",
        "requestBody": {
          "description": "Request message for the CreateBudgetAlerts rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateBudgetAlertsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1BudgetAlerts"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/alerts/anomaly": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Create Anomaly Alert",
        "operationId": "Cover_CreateAnomalyAlert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateAnomalyAlertRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/alerts/anomaly/all:read": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "List all the Anomaly Alert Data",
        "operationId": "Cover_ListAnomalyAlert",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1AnomalyAlertData",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1AnomalyAlertData"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/alerts/anomaly/{id}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get Anomaly Alert Data",
        "operationId": "Cover_GetAnomalyAlert",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "required. Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AnomalyAlertData"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update Anomaly Alert",
        "operationId": "Cover_UpdateAnomalyAlert",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "required. Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateAnomalyAlertBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cover"
        ],
        "summary": "Delete Anomaly Alert",
        "operationId": "Cover_DeleteAnomalyAlert",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "required. Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/alerts/cost": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get Alerts under organization",
        "operationId": "Cover_GetAlerts",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1GetAlertsResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1GetAlertsResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Create Alerts under organization",
        "operationId": "Cover_CreateAlert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateAlertRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateAlertResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/alerts/cost/{id}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get Specific Alert under organization",
        "operationId": "Cover_GetAlertDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Alert ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetAlertDetailsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update Specific Alert under organization",
        "operationId": "Cover_UpdateAlertDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Alert ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateAlertDetailsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateAlertDetailsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cover"
        ],
        "summary": "Delete Specific Alert under organization",
        "operationId": "Cover_DeleteAlert",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Alert ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DeleteAlertResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/alerts/expire/discount": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Create discount Expiration Alert.",
        "operationId": "Cover_CreateDiscountExpirationAlert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateDiscountExpirationAlertRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/alerts/expire/discount/all:read": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "List all discount Expiration Alert Data",
        "operationId": "Cover_ListDiscountExpirationAlert",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1DiscountExpiryAlertData",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1DiscountExpiryAlertData"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/alerts/expire/discount/{id}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get discount Expiration Alert Data",
        "operationId": "Cover_GetDiscountExpirationAlert",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "required. Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DiscountExpiryAlertData"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update discount Expiration Alert",
        "operationId": "Cover_UpdateDiscountExpirationAlert",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "required. Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateDiscountExpirationAlertBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cover"
        ],
        "summary": "Delete selected discount Expiration Alert Data",
        "operationId": "Cover_DeleteDiscountExpirationAlert",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "required. Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/alerts/{id}": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "GetBudgetAlerts",
        "description": "Gets the budget alerts.\nOnly available in Wave(Pro).",
        "operationId": "Cost_GetBudgetAlerts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. budget alert id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1BudgetAlerts"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cost"
        ],
        "summary": "UpdateBudgetAlerts",
        "description": "Updates the budget alerts.\nOnly available in Wave(Pro).",
        "operationId": "Cost_UpdateBudgetAlerts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. budget alert id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostUpdateBudgetAlertsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1BudgetAlerts"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cost"
        ],
        "summary": "DeleteBudgetAlerts",
        "description": "Deletes the budget alerts.\nOnly available in Wave(Pro).",
        "operationId": "Cost_DeleteBudgetAlerts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. budget alert id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/alerts:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "ReadBudgetAlerts",
        "description": "Reads the budget alerts.\nOnly available in Wave(Pro).\n[ERRORS] \n- Unimplemented:\n  - not implemented\n- InvalidArgument:\n  - parse error",
        "operationId": "Cost_ReadBudgetAlerts",
        "requestBody": {
          "description": "Request message for the ReadBudgetAlerts rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ReadBudgetAlertsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1BudgetAlerts",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1BudgetAlerts"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/allocations/accountusage/all:read": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Lists the allocated account usages",
        "operationId": "Cover_ListAccountUsage",
        "requestBody": {
          "description": "Request message for the RestoreAccountUsage rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListAccountUsageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1AccountUsageDetails",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1AccountUsageDetails"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/allocations/accountusage/restore": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Restore the allocated account usages",
        "operationId": "Cover_RestoreAccountUsage",
        "requestBody": {
          "description": "Request message for the RestoreAccountUsage rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1RestoreAccountUsageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1AccountUsageDetails",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1AccountUsageDetails"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/allocations/accountusage/simulate": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Simulate the output of the account usage allocation",
        "operationId": "Cover_SimulateAccountUsage",
        "requestBody": {
          "description": "Request message for the CreateAllocator rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateAllocatorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1AccountUsageDetails",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1AccountUsageDetails"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/allocations/fees/all:read": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Lists the fees",
        "operationId": "Cover_ListFees",
        "requestBody": {
          "description": "Request message for the ListFees rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListFeesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of coverv1FeeDetails",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/coverv1FeeDetails"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/allocations/fees/restore": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Restore distributed fees",
        "operationId": "Cover_RestoreFee",
        "requestBody": {
          "description": "Request message for the RestoreFee rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1RestoreFeeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of coverv1FeeDetails",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/coverv1FeeDetails"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/allocations/fees/simulate": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Simulate fee allocator",
        "operationId": "Cover_SimulateFeeAllocator",
        "requestBody": {
          "description": "Request message for the CreateAllocator rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateAllocatorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of coverv1FeeDetails",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/coverv1FeeDetails"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/allocations/fees:read": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Get all available fees for the specified cost group",
        "operationId": "Cover_GetCostGroupFee",
        "requestBody": {
          "description": "Request message for the GetCostGroupFee rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1GetCostGroupFeeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1FeeItem",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1FeeItem"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/allocations/savings/all:read": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Lists the allocated ri and sp savings",
        "operationId": "Cover_ListSavings",
        "requestBody": {
          "description": "Request message for the ListFees rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListFeesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1SavingsDetails",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1SavingsDetails"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/allocations/savings/restore": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Restore the allocated ri and sp savings",
        "operationId": "Cover_RestoreSavings",
        "requestBody": {
          "description": "Request message for the RestoreSavings rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1RestoreSavingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1SavingsDetails",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1SavingsDetails"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/allocations/savings/simulate": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Simulate the output of the ri and sp savings allocation",
        "operationId": "Cover_SimulateSavings",
        "requestBody": {
          "description": "Request message for the CreateAllocator rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateAllocatorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1SavingsDetails",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1SavingsDetails"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/allocations:read": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Get all available allocation items for the specified cost group",
        "operationId": "Cover_GetCostGroupAllocation",
        "requestBody": {
          "description": "Request message for the GetCostGroupAllocation rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1GetCostGroupAllocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1AllocationItem",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1AllocationItem"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/allocators": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Lists all the allocators",
        "operationId": "Cover_ListAllocators",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1CostAllocatorDetails",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1CostAllocatorDetails"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Creates cost allocator item",
        "operationId": "Cover_CreateAllocator",
        "requestBody": {
          "description": "Request message for the CreateAllocator rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateAllocatorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CostAllocatorDetails"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/allocators/attribute": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get all available attributes for the charges",
        "operationId": "Cover_GetAllocationAttributes",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetAllocationAttributesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/allocators/{id}": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Updates a cost allocator item",
        "operationId": "Cover_UpdateAllocator",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateAllocatorBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CostAllocatorDetails"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Deletes a cost allocator",
        "operationId": "Cover_DeleteAllocator",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. The id of the allocator to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/anomaly": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Get the data of a cost group containing anomaly values",
        "operationId": "Cover_GetAnomalyinCostGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1GetAnomalyinCostGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1AnomalyData",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1AnomalyData"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/apiaccess/verify": {
      "get": {
        "tags": [
          "Cover"
        ],
        "operationId": "Cover_VerifyAPIAccess",
        "parameters": [
          {
            "name": "vendor",
            "in": "query",
            "description": "Required: gcp",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Required: projectId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1VerifyAPIAccessResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/assets/summary/{costGroupId}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Assets summary for costgroup",
        "operationId": "Cover_GetAssetsSummary",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startMonth",
            "in": "query",
            "description": "Optional. If not set, current month will be used. Format: `yyyymm`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endMonth",
            "in": "query",
            "description": "Optional. If not set, current month will be used. Format: `yyyymm`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combineDates",
            "in": "query",
            "description": "Optional. If true, return the assets summary for the requested period. Else, summary per month is returned.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetAssetsSummaryResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/assets:read": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Lists assets for costgroup",
        "operationId": "Cover_ListAssets",
        "requestBody": {
          "description": "Request message for the Asset.ListResources rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListAssetsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1Resource",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1Resource"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/attributes": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Get Cost Group by Attribute Type",
        "operationId": "Cover_GetCostGroupAttribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1GetCostGroupAttributeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCostGroupAttributeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/aws/acctaccess": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Gets a CloudFormation launch URL for enabling the account access.",
        "operationId": "Cover_GetAccountAccessTemplateUrl",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "All templates are publicly available from the reponse link (`templateUrl`) if you want to audit the included permissions.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetAccountAccessTemplateUrlResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Starts validation of the account access stack deployment. If successful, the IAM role created from the CloudFormation stack will be registered to the target.",
        "operationId": "Cover_CreateAccountAccess",
        "requestBody": {
          "description": "Request message for the CreateAccountAccess rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateAccountAccessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AccountAccess"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/aws/acctaccess/all:read": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Lists the account access role(s) attached to accounts under caller.",
        "operationId": "Cover_ListAccountAccess",
        "requestBody": {
          "description": "Request message for the ListAccountAccess rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListAccountAccessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1AccountAccess",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1AccountAccess"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/aws/acctaccess/cur": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Starts validation of the account access cur stack deployment. If successful, the IAM role created from the CloudFormation stack will be registered to the target.",
        "operationId": "Cover_CreateAccountAccessCur",
        "requestBody": {
          "description": "Request message for the CreateAccountAccess rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateAccountAccessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AccountAccess"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/aws/acctaccess/stackset": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Starts validation of the account access stackset deployment. If successful, the IAM role created from the CloudFormation stackset will be registered to the linked accounts.",
        "operationId": "Cover_CreateAccountAccessStackset",
        "requestBody": {
          "description": "Request message for the CreateAccountAccessStackset rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateAccountAccessStacksetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AccountAccess"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/aws/acctaccess/{target}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Gets the current account role attached to the input target.",
        "operationId": "Cover_GetAccountAccess",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "description": "Required. The target AWS account to query.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AccountAccess"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Starts an update to an existing account access CloudFormation stack for template changes, if any. Only call this API if the status of your account access is 'outdated'.",
        "operationId": "Cover_UpdateAccountAccess",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "description": "Required. The target AWS account to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protosOperation"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/aws/cur:import": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Initiates an ondemand import of all registered CUR files.",
        "description": "See https://help.alphaus.cloud/en/articles/3612555-ripple-aws-things-you-need-to-prepare-before-starting for more information.",
        "operationId": "Cost_ImportCurFiles",
        "requestBody": {
          "description": "Request message for the Cost.ImportCurFiles rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ImportCurFilesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protosOperation"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/aws/dailyrunhistory:read": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Reads the daily calculation history of all accounts in your billing groups. Only available in Ripple.",
        "operationId": "Billing_ListAwsDailyRunHistory",
        "requestBody": {
          "description": "Request message for the Billing.ListAwsCalculationHistory rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListAwsDailyRunHistoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1AwsDailyRunHistory",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1AwsDailyRunHistory"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/aws/xacct/cea": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Gets a CloudFormation launch URL for enabling read-only cross-account access to cost explorer information (API only).",
        "operationId": "Flow_GetCostExplorerAccessTemplateUrl",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCostExplorerAccessTemplateUrlResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "Creates a default cross-account access role for cost explorer (API only).",
        "operationId": "Flow_CreateCostExplorerAccess",
        "requestBody": {
          "description": "Request message for the Flow.CreateCostExplorerAccess rpc.\nThis endpoint only supports the 'apionly' template type.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateCostExplorerAccessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateCostExplorerAccessResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/azure/credentials/mpn": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Adding MpnSetting for Azure",
        "operationId": "Cover_AddMpnSetting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1AddMpnSettingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/azure/credentials/partnercenter": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: PartnerCenterCredentials for Azure",
        "operationId": "Cover_AddPartnerCenterCredentials",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1AddPartnerCenterCredentialsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billing/status": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get the Customer Subscription status from marketplace",
        "operationId": "Cover_GetCustomerSubscriptionStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCustomerSubscriptionStatusResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/billingacct": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Add Billing Account ID for GCP.",
        "operationId": "Cover_AddBillingAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1BillingAccountRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroup/account": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Add a vendor account to a billing group.",
        "operationId": "Billing_AddAccountToBillingGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1AddAccountToBillingGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroup/customfield": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Add  a custom field into a billing group",
        "operationId": "Billing_AddBillingGroupCustomField",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1AddBillingGroupCustomFieldRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroup/customfield/{groupId}/{customFieldId}": {
      "delete": {
        "tags": [
          "Billing"
        ],
        "summary": "Remove a custom field from a billing group",
        "operationId": "Billing_DeleteBillingGroupCustomField",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Required. Billing group internal Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customFieldId",
            "in": "path",
            "description": "Required. The id of customfield from get customfield",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/billinggroup/customfield:read": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Show all the billing groups custom fields",
        "operationId": "Billing_ListBillingGroupCustomField",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListBillingGroupCustomFieldRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1ListBillingGroupCustomFieldResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1ListBillingGroupCustomFieldResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroup/reseller/announcements/{groupId}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the announcement list for billing group",
        "operationId": "Billing_GetBillingGroupAnnouncements",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Optional. Set empty to return all",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1GetBillingGroupAnnouncementsResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1GetBillingGroupAnnouncementsResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/billinggroup/tags": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Add Tags to the billing group",
        "operationId": "Billing_AddTagsToBillingGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1AddTagsToBillingGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroup/{id}": {
      "delete": {
        "tags": [
          "Billing"
        ],
        "summary": "Delete a billing group.",
        "operationId": "Billing_DeleteBillinGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/billinggroup/{id}/{vendor}/supportplan": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Gets the account support plan in billing group. Only available in Ripple.",
        "operationId": "Billing_GetBillingGroupAccountSupportPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. The billing internal id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetBillingGroupAccountSupportPlanResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Updates the account support plan in billing group. Only available in Ripple.",
        "operationId": "Billing_UpdateBillingGroupAccountSupportPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. The billing internal id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateBillingGroupAccountSupportPlanBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroup/{id}/{vendor}/untaggedgroups": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Sets non-tag group settings for a billing group.",
        "operationId": "Billing_UpdateNonTagGroupToBillingGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. The billing group's internal id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. The vendor (aws, azure, etc)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateNonTagGroupToBillingGroupBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroup/{id}:additionalCharges": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Update  additonal charges for a billing group",
        "operationId": "Billing_UpdateBillingGroupAdditionalCharges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateBillingGroupAdditionalChargesBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroup/{id}:basicInfo": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "Update billing group basic information",
        "operationId": "Billing_UpdateBillingGroupBasicInformation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateBillingGroupBasicInformationBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroup/{id}:customFields": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Update billing group custom fields information",
        "operationId": "Billing_UpdateBillingGroupCustomFields",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateBillingGroupCustomFieldsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroup/{id}:freeFormat": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Update billing group custom fields information",
        "operationId": "Billing_UpdateBillingGroupFreeFormat",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateBillingGroupFreeFormatBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroup/{id}:invoiceSettings": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Update invoice settings for a billing group",
        "operationId": "Billing_UpdateBillingGroupInvoiceSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateBillingGroupInvoiceSettingsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroup/{id}:resellerCharges": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Update reseller charges for a billing group",
        "operationId": "Billing_UpdateBillingGroupResellerCharges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateBillingGroupResellerChargesBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroup/{id}:resources": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Update linked resources for a billing group",
        "operationId": "Billing_UpdateBillingGroupLinkedResources",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateBillingGroupLinkedResourcesBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroups": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Lists all billing groups.",
        "operationId": "Billing_ListBillingGroups",
        "parameters": [
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendors",
            "in": "query",
            "description": "Optional. Filter vendor accounts included in BillingGroup. Format: vendors=vendor1,vendor2,vendor3.\nFor example, When Aws and Gcp to be filtered vendors=aws,gcp\nIf you want to get all vendors, not set parameter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calcType",
            "in": "query",
            "description": "Optional. Filter by calcType. Format: calType=account\nValid values: account, tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayCost",
            "in": "query",
            "description": "Optional. Filter by displayCost. Format: displayCost=unblended_cost\nvalid values: unblended_cost, true_unblended_cost",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bgType",
            "in": "query",
            "description": "Optional. For aws only, filter will be ignored for other vendors.\nValid values: default, imported",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1BillingGroup",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1BillingGroup"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Registers a billing group.",
        "operationId": "Billing_CreateBillingGroup",
        "requestBody": {
          "description": "Request message for the Billing.CreateBillingGroup rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateBillingGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1BillingGroup"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroups/billingconductor/{id}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Gets all Billing Groups in AWS Billing Conductor(ABC) for specific payer id.",
        "operationId": "Billing_ListAbcBillingGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Payer Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1AbcBillingGroup",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1AbcBillingGroup"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/billinggroups/billingconductor/{payerId}/accounts": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Gets all accounts associated to AWS Billing Conductor(ABC) Billing group",
        "operationId": "Billing_ListAbcBillingGroupAccounts",
        "parameters": [
          {
            "name": "payerId",
            "in": "path",
            "description": "Required. Payer Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingGroupArn",
            "in": "query",
            "description": "Required. BillingGroup Id.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1AbcAccount",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1AbcAccount"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/billinggroups/merged": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Registers a billing group with Merged Endpoints. Only available in Ripple. WORK IN PROGRESS",
        "operationId": "Billing_CreateBillingGroupMerged",
        "requestBody": {
          "description": "Request message for the CreateBillingGroupMerged rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateBillingGroupMergedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1BillingGroup"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/billinggroups/{billingInternalId}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets a billing group.",
        "operationId": "Billing_GetBillingGroup",
        "parameters": [
          {
            "name": "billingInternalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetBillingGroupResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/billinggroups/{id}/invoicetemplate": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Creates/Updates a billing group's invoice template. Only available in Ripple.",
        "operationId": "Billing_UpdateBillingGroupInvoiceTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. The billing internal ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateBillingGroupInvoiceTemplateBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/budget": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Create Budget for specific cost group in an organization",
        "operationId": "Cover_CreateBudget",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateBudgetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateBudgetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/budget/{id}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Get specific Budget data for a cost group in an organization",
        "operationId": "Cover_GetBudget",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Budget ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetBudgetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Update Budget for specific cost group in an organization",
        "operationId": "Cover_UpdateBudget",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Budget ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateBudgetBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateBudgetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Delete Budget for specific cost group in an organization",
        "operationId": "Cover_DeleteBudget",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Budget ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DeleteBudgetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/budget:read": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: List all Budgets in an organization or Budgets under specific cost group",
        "operationId": "Cover_ListBudgets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListBudgetsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1ListBudgetsResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1ListBudgetsResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/categories": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Retrieve the categories to be utilized in the creation of the cost group.",
        "operationId": "Cover_GetCategories",
        "parameters": [
          {
            "name": "vendor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCategoriesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/channels": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Create Channel under organization",
        "operationId": "Cover_CreateChannel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateChannelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateChannelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/channels/{id}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Get Specific Channel under organization",
        "operationId": "Cover_GetChannelDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Channel ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetChannelDetailsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Update Specific Channel under organization",
        "operationId": "Cover_UpdateChannelDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Channel ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateChannelDetailsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateChannelDetailsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Delete Specific Channel under organization",
        "operationId": "Cover_DeleteChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Channel ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DeleteChannelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/channels:read": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Get Channels under organization",
        "operationId": "Cover_GetChannels",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1GetChannelsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1GetChannelsResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1GetChannelsResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/chargecode/upload": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Upload charge code",
        "operationId": "Cover_UploadChargeCode",
        "requestBody": {
          "description": " (streaming inputs)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UploadChargeCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UploadChargeCodeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/containers/costusage": {
      "post": {
        "tags": [
          "Cover"
        ],
        "operationId": "Cover_GetContainerCostUsage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ContainerCostUsageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ContainerCostUsageResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/costgroups": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get all the cost groups",
        "operationId": "Cover_GetCostGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCostGroupsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Create a cost group",
        "operationId": "Cover_CreateCostGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateCostGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateCostGroupResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/costgroups/resolve/{costGroupId}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "operationId": "Cover_ResolveCostGroupCombinations",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ResolveCostGroupCombinationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/costgroups/{costGroupId}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get the details of the cost group",
        "operationId": "Cover_GetCostGroupDetails",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCostGroupDetailsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cover"
        ],
        "summary": "Deletes a cost group",
        "operationId": "Cover_DeleteCostGroup",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DeleteCostGroupResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/costgroups/{costGroupId}/anomaly": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Sets Cost group's anomaly options",
        "operationId": "Cover_SetCostGroupAnomalyOptions",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverSetCostGroupAnomalyOptionsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1SetCostGroupAnomalyOptionsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/costgroups/{costGroupId}/colortheme": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update cost group's color theme",
        "operationId": "Cover_UpdateCostGroupColorTheme",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateCostGroupColorThemeBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateCostGroupColorThemeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/costgroups/{costGroupId}/combinations": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update cost group's combinations",
        "operationId": "Cover_UpdateCostGroupCombinations",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateCostGroupCombinationsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateCostGroupCombinationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/costgroups/{costGroupId}/description": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update cost group's description",
        "operationId": "Cover_UpdateCostGroupDescription",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateCostGroupDescriptionBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateCostGroupDescriptionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/costgroups/{costGroupId}/eventIndicator": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Sets Cost group's event indicator",
        "operationId": "Cover_SetCostGroupEventIndicator",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverSetCostGroupEventIndicatorBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1SetCostGroupEventIndicatorResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/costgroups/{costGroupId}/icon": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update cost group's icon",
        "operationId": "Cover_UpdateCostGroupIcon",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateCostGroupIconBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateCostGroupIconResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/costgroups/{costGroupId}/image": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update cost group's image",
        "operationId": "Cover_UpdateCostGroupImage",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateCostGroupImageBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateCostGroupImageResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/costgroups/{costGroupId}/member/add": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Assign a member to a cost group",
        "operationId": "Cover_AssignCostGroupMember",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverAssignCostGroupMemberBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AssignCostGroupMemberResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/costgroups/{costGroupId}/member/remove": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Remove a member from a cost group",
        "operationId": "Cover_RemoveCostGroupMember",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverRemoveCostGroupMemberBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1RemoveCostGroupMemberResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/costgroups/{costGroupId}/name": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update cost group's name",
        "operationId": "Cover_UpdateCostGroupName",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateCostGroupNameBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateCostGroupNameResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/costusage:read": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Get usage and usage-based costs for the specified costgroup",
        "operationId": "Cover_GetCostUsage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1GetCostUsageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of blueapicoverv1CostItem",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/blueapicoverv1CostItem"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/credits": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the credits",
        "operationId": "Billing_GetCredits",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1Credit",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1Credit"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/csvsettings": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the csv column settings",
        "operationId": "Billing_GetCsvSettings",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1CsvSetting",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1CsvSetting"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customfield": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Creates new customfield",
        "operationId": "Billing_CreateCustomField",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateCustomFieldRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CustomField"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/customfield/{id}": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "Update the `customField` specified id, modifying its key and description",
        "operationId": "Billing_UpdateCustomField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateCustomFieldBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CustomField"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Billing"
        ],
        "summary": "Deletes the customfield",
        "operationId": "Billing_DeleteCustomField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customfield:read": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Returns all registered customfields",
        "operationId": "Billing_ListCustomField",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListCustomFieldRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1CustomField",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1CustomField"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/customizedbillingservices": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Creates the customized billing service. Only available in Ripple.",
        "operationId": "Billing_CreateCustomizedBillingService",
        "requestBody": {
          "description": "Request message for the Billing.CreateCustomizedBillingService rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateCustomizedBillingServiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rippleCustomizedBillingService"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/customizedbillingservices/billinggroup/{groupId}/{vendor}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customized billing service in billing group. Only available in Ripple.",
        "operationId": "Billing_GetCustomizedBillingServiceBillingGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Required. billing internal id in billing group.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, `aws`,`azure`,`gcp` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1GetCustomizedBillingServiceBillingGroupResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1GetCustomizedBillingServiceBillingGroupResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Sets the customized billing service in billing group. Only available in Ripple.",
        "operationId": "Billing_SetCustomizedBillingServiceBillingGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Required. billing internal id in billing group.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, `aws`,`azure`,`gcp` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingSetCustomizedBillingServiceBillingGroupBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Billing"
        ],
        "summary": "Deletes the customized billing service in billing group. Only available in Ripple.",
        "operationId": "Billing_DeleteCustomizedBillingServiceBillingGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Required. billing internal id in billing group.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, `aws`,`azure`,`gcp` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customizedbillingservices/{id}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customized billing service. Only available in Ripple.",
        "operationId": "Billing_GetCustomizedBillingService",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. [blueapi.api.ripple.CustomizedBillingService.id]",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rippleCustomizedBillingService"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "Updates the customized billing service by updating the fields specified in the update mask. Only available in Ripple.",
        "operationId": "Billing_UpdateCustomizedBillingService",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. [blueapi.api.ripple.CustomizedBillingService.id]",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateCustomizedBillingServiceBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rippleCustomizedBillingService"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Billing"
        ],
        "summary": "Deletes the customized billing service. Only available in Ripple.",
        "operationId": "Billing_DeleteCustomizedBillingService",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. [blueapi.api.ripple.CustomizedBillingService.id]",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customizedbillingservices:read": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Reads the customized billing service. Only available in Ripple.",
        "operationId": "Billing_ReadCustomizedBillingServices",
        "requestBody": {
          "description": "Request message for the Billing.ReadCustomizedBillingServices rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ReadCustomizedBillingServicesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of rippleCustomizedBillingService",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/rippleCustomizedBillingService"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/discount": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Get the discount recommendations for every account in a cost group",
        "operationId": "Cover_GetDiscountRecommendations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1GetDiscountRecommendationsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetDiscountRecommendationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/exchangerate/billinggroup/{month}": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Set billing group exchangerate. Only available in Ripple.",
        "operationId": "Billing_SetBillingGroupExchangeRate",
        "parameters": [
          {
            "name": "month",
            "in": "path",
            "description": "Required. month. Format: `yyyymm`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingSetBillingGroupExchangeRateBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/exchangerate/global/{vendor}/{month}": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Set global exchangerate. Only available in Ripple.",
        "operationId": "Billing_SetGlobalExchangeRate",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Required. month. Format: `yyyymm`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingSetGlobalExchangeRateBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/exchangerate/payer/{month}": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Set payer exchangerate. Only available in Ripple.",
        "operationId": "Billing_SetPayerExchangeRate",
        "parameters": [
          {
            "name": "month",
            "in": "path",
            "description": "Required. month. Format: `yyyymm`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingSetPayerExchangeRateBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/exportcsv/billing-group": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Export the billing groups into csv format",
        "operationId": "Billing_ExportBillingGroupCsv",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "Usually the language of the user information is used, \nbut it may be a different language due to cahce.\nIn that case, you can use this option to change the language of CSV.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ExportBillingGroupCsvResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/exportcsv/invoice-setting": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Exports the invoice settings into csv format",
        "operationId": "Billing_ExportInvoiceSettingCsv",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "Usually the language of the user information is used, \nbut it may be a different language due to cahce.\nIn that case, you can use this option to change the language of CSV.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ExportInvoiceSettingCsvResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/exportcsv/payers:export": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Exports RI and SP for all payers.",
        "operationId": "Cost_GetExportRISP",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1GetExportRISPRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetExportRISPResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/freeformat": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Creates new billing group free format item (miscellaneous)",
        "operationId": "Billing_CreateFreeFormat",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateFreeFormatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/freeformat/{groupId}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get billing group free format item (miscellaneous)",
        "operationId": "Billing_GetFreeFormat",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "set empty to get all the freeformat of the MSP",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAssociated",
            "in": "query",
            "description": "this setting is ignored if groupId is not empty\nset true to return only the free format associated to a BG",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1GetFreeFormatResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1GetFreeFormatResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Billing"
        ],
        "summary": "Delete billing group free format item (miscellaneous)",
        "operationId": "Billing_DeleteFreeFormat",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/info": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "For Testing Purposes Only.",
        "operationId": "Flow_GetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blueapiflowv1GetInfoResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/integration/status": {
      "get": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_GetIntegrationStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetIntegrationStatusResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/integration/status/all:read": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_ListIntegrationStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListIntegrationStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1IntegrationStatus",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1IntegrationStatus"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/invoice/displaysettings": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Gets the invoice display settings for invoice-ui",
        "operationId": "Billing_GetInvoiceDisplaySettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetInvoiceDisplaySettingsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Creates/Updates an invoice display settings. Only available in Ripple.",
        "operationId": "Billing_UpdateInvoiceDisplaySettings",
        "requestBody": {
          "description": "Request message for UpdateInvoiceDisplaySettings rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateInvoiceDisplaySettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/invoice/exchangerate/{month}": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "Update invoice exchangerate for the month",
        "operationId": "Billing_UpdateInvoiceExchangeRate",
        "parameters": [
          {
            "name": "month",
            "in": "path",
            "description": "Required. Format: yyyymm.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateInvoiceExchangeRateBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/invoice/status/{date}:read": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Reads an invoice status. Only available in Ripple.",
        "operationId": "Billing_ListInvoiceStatus",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Required. Month to get invoice status. Format: `yyyymm`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingListInvoiceStatusBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of apiInvoiceMessage",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/apiInvoiceMessage"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/invoice/status/{id}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets an invoice. Only available in Ripple.",
        "operationId": "Billing_GetInvoiceStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. invoice generate request id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiInvoiceMessage"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invoice/template": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Lists Invoice Template. Only available in Ripple.",
        "operationId": "Billing_ListInvoiceTemplate",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1ListInvoiceTemplateResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1ListInvoiceTemplateResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invoice/{date}:converttopdf": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Convert invoice to pdf",
        "operationId": "Billing_ConvertInvoiceToPdf",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Required. Format: yyyymm.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingConvertInvoiceToPdfBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ConvertInvoiceToPdfResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/invoice/{date}:create": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Creates an invoice. Only available in Ripple.",
        "operationId": "Billing_CreateInvoice",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Required. Month to get invoice. Format: `yyyymm`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCreateInvoiceBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiInvoiceMessage"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/invoice/{date}:create&savesettings": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Creates an invoice and add settings. Only available in Ripple.",
        "operationId": "Billing_CreateInvoiceWithSettings",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Required. Invoice month. Format: `yyyymm`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCreateInvoiceWithSettingsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiInvoiceMessage"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/invoice/{date}:export": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Exports an invoice.",
        "operationId": "Billing_ExportInvoiceFile",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Required. Month to get invoice. Format: `yyyymm`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingExportInvoiceFileBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ExportInvoiceFileResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/invoice/{date}:preview": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "Updates an invoice preview. Only available in Ripple.",
        "operationId": "Billing_UpdateInvoicePreviews",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Required. Month to get invoice. Format: `yyyymm`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateInvoicePreviewsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/invoice/{date}:read": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets an invoice.",
        "operationId": "Billing_GetInvoice",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Required. Month to get invoice. Format: `yyyymm`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingGetInvoiceBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiInvoice"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/invoice/{date}:savesettings": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Save invoice settings for the month",
        "operationId": "Billing_SaveInvoiceSettings",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Required. Invoice month. Format: `yyyymm`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingSaveInvoiceSettingsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/invoice:read": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Reads list of the invoice.",
        "operationId": "Billing_ListInvoice",
        "requestBody": {
          "description": "Request message for the ListInvoice rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListInvoiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1ListInvoiceResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1ListInvoiceResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/invoicecosts:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "WORK-IN-PROGRESS: Read the invoice costs. Only available in Ripple.",
        "operationId": "Cost_ReadInvoiceCosts",
        "requestBody": {
          "description": "Request message for the ReadInvoiceCosts rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ReadInvoiceCostsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1TotalSection",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1TotalSection"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/invoicegroupcosts:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "WORK-IN-PROGRESS: Read the invoice group costs. Only available in Ripple.",
        "operationId": "Cost_ReadInvoiceGroupCosts",
        "requestBody": {
          "description": "Request message for the ReadInvoiceGroupCosts rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ReadInvoiceGroupCostsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1BillingGroupSection",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1BillingGroupSection"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/invoiceoverviews:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "WORK-IN-PROGRESS: Read the invoice overviews. Only available in Ripple.",
        "operationId": "Cost_ReadInvoiceOverViews",
        "requestBody": {
          "description": "Request message for the ReadInvoiceOverviews rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ReadInvoiceOverviewsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1OverViewSection",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1OverViewSection"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/marketplace/info": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Adding orgId to marketplace customers",
        "operationId": "Cover_AddInfotoMarketplace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1AddInfotoMarketplaceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AddInfotoMarketplaceResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/me": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get the details of the logged-in user",
        "operationId": "Cover_GetUserDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetUserDetailsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/me/apptheme": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Modify user's app theme",
        "operationId": "Cover_UpdateUserAppTheme",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateUserAppThemeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateUserAppThemeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/me/attributes": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Modify attributes",
        "operationId": "Cover_UpdateUserAttributes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateUserAttributesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateUserAttributesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/me/avatar": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Modify user's avatar",
        "operationId": "Cover_UpdateUserAvatar",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateUserAvatarRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateUserAvatarResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/me/colortheme": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Modify user's color theme",
        "operationId": "Cover_UpdateUserColorTheme",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateUserColorThemeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateUserColorThemeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/me/costgroupcreation": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Set user preference in cost group creation UI",
        "operationId": "Cover_UpdateCostGroupCreationUI",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateCostGroupCreationUIRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateCostGroupCreationUIResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/me/email": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Modify user's email",
        "operationId": "Cover_UpdateUserEmail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateUserEmailRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateUserEmailResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/me/icon": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Modify user's icon",
        "operationId": "Cover_UpdateUserIcon",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateUserIconRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateUserIconResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/me/locale": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Modify user's locale",
        "operationId": "Cover_UpdateUserLocale",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateUserLocaleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateUserLocaleResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/me/mainview": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Modify user's main view",
        "operationId": "Cover_UpdateUserMainView",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateUserMainViewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateUserMainViewResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/me/name": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Modify user's name",
        "operationId": "Cover_UpdateUserName",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateUserNameRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateUserNameResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/me/password": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Reset user's password",
        "operationId": "Cover_ResetUserPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ResetUserPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ResetUserPasswordResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/me/timezone": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Modify user's timezone",
        "operationId": "Cover_UpdateUserTimezone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateUserTimezoneRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateUserTimezoneResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/member/all:read": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_ListTeamMembers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListTeamMembersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1Member",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1Member"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/members": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get all the members/subusers of the company",
        "operationId": "Cover_GetMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetMembersResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Create a member",
        "operationId": "Cover_CreateMember",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateMemberRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateMemberResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/members/activate": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Activate the added user",
        "operationId": "Cover_ActivateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ActivateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ActivateUserResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/members/auth0": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Add or read user from Auth0",
        "operationId": "Cover_ProcessAuth0User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ProcessAuth0UserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProcessAuth0UserResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/members/aws/subscription": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS:Resolve user for aws marketplace subscription integration",
        "operationId": "Cover_ResolveAWSMarketplaceTokenForOnboarding",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ResolveAWSMarketplaceTokenForOnboardingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ResolveAWSMarketplaceTokenForOnboardingResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/members/invite": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Invite members to the system",
        "operationId": "Cover_InviteMember",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1InviteMemberRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1InviteMemberResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/members/onboard": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Onboard an organization with an admin account and default cost group",
        "operationId": "Cover_OnboardOrg",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1OnboardOrgRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1OnboardOrgResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/members/profile": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Profiling for new users.",
        "operationId": "Cover_CreateProfiling",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateProfilingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateProfilingResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/members/profile/{email}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Octo getting user profile",
        "operationId": "Cover_GetUserProfile",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "required email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetUserProfileResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update user profile",
        "operationId": "Cover_UpdateUserProfile",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "required email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateUserProfileBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateUserProfileResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/members/register": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Octo new user registration",
        "operationId": "Cover_RegisterNewUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1RegisterNewUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1RegisterNewUserResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/members/resetpassword": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Reset member's password",
        "operationId": "Cover_ResetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ResetPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ResetPasswordResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/members/{userId}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get the details of the user",
        "operationId": "Cover_GetMemberDetails",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Required. UserId.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetMemberDetailsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cover"
        ],
        "summary": "Deletes a user",
        "operationId": "Cover_DeleteMember",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Required. UserId.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DeleteMemberResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/members/{userId}/costgroup": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get the cost group to which the member is attached",
        "operationId": "Cover_GetMemberCostGroup",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Required. UserId.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetMemberCostGroupResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/members/{userId}/isadmin": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Modify member's permission",
        "operationId": "Cover_UpdateMemberPermission",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Required. UserId.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateMemberPermissionBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateMemberPermissionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/org": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_CreateOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateOrganizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/org/code": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_GenerateOrganizationCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1GenerateOrganizationCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GenerateOrganizationCodeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/org/join": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_JoinOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1JoinOrganizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/org/{id}": {
      "get": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_GetOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required organization ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetOrganizationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_UpdateOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required organization ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrismUpdateOrganizationBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_DeleteOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required organization ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/org/{id}/timezone": {
      "put": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_UpdateOrgTimezone",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required organization ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrismUpdateOrgTimezoneBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/organizations/currency": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get Org's reference of currency exchange rate",
        "operationId": "Cover_GetOrgUpdateCurrency",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetOrgUpdateCurrencyResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Sets Org's reference of currency exchange rate",
        "operationId": "Cover_SetOrgUpdateCurrency",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1SetOrgUpdateCurrencyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1SetOrgUpdateCurrencyResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/organizations/rates": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get list of exchange rates for a fixed report",
        "operationId": "Cover_ListExchangeRates",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Required. Start date Format: \"YYYYMMDD\"",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Required. End date Format: \"YYYYMMDD\"",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blueapicoverv1ListExchangeRatesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/transfer/{target}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Transfer the account from the original organization to Alphaus payer account",
        "operationId": "Cover_TransferOrganization",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "description": "Required. The target account to be transferred.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Required. The region of the target account.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payer",
            "in": "query",
            "description": "Optional. Alphaus payer account to be used for the transfer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgId",
            "in": "query",
            "description": "Optional. The org id of the payer account.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1TransferOrganizationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_CreateProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateProductRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/product/all:read": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_ListProducts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListProductsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1Product",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1Product"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/product/{id}": {
      "delete": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_DeleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required product ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/project": {
      "post": {
        "tags": [
          "Prism"
        ],
        "summary": "WIP: Creates a new project.",
        "operationId": "Prism_CreateProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateProjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/project/all:read": {
      "post": {
        "tags": [
          "Prism"
        ],
        "summary": "WIP: Lists all projects",
        "operationId": "Prism_ListProjects",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListProjectsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1Project",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1Project"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/project/{id}": {
      "get": {
        "tags": [
          "Prism"
        ],
        "summary": "WIP: Gets information about a project by ID.",
        "operationId": "Prism_GetProject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetProjectResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Prism"
        ],
        "summary": "WIP: Deletes a project by ID.",
        "operationId": "Prism_DeleteProject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projecttoteam/all:read": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_ListProjectToTeam",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListProjectToTeamRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1ListProjectToTeamResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1ListProjectToTeamResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/projecttoteam/assign": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_AssignProjectToTeam",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1AssignProjectToTeamRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AssignProjectToTeamResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/recommendations/all:read": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Lists recommendations based on specified criteria.",
        "operationId": "Cover_ListRecommendationsV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListRecommendationV2Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1ListRecommendationResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1ListRecommendationResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/recommendations/details/{id}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Retrieves a specific recommendation by its ID. (Version 2)",
        "operationId": "Cover_GetRecommendationV2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costGroupId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodOption",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetRecommendationV2Response"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/recommendations/execute": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Executes optimization based on a recommendation.",
        "operationId": "Cover_ExecuteOptimization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ExecuteOptimizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ExecuteOptimizationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/recommendations/execute/status": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get Execution status of a recommendation.",
        "operationId": "Cover_GetExecutionStatus",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1GetExecutionStatusResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1GetExecutionStatusResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/recommendations/optimization": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Lists recommendations based on specified criteria.",
        "operationId": "Cover_ListRecommendations",
        "parameters": [
          {
            "name": "costgroupId",
            "in": "query",
            "description": "Required. Cost Group Id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRangeStart",
            "in": "query",
            "description": "Required. Start date of retrieved data. If not set, the default would be today.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRangeEnd",
            "in": "query",
            "description": "Required. End date of retrieved data. If not set, the default would be today.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendor",
            "in": "query",
            "description": "Valid inputs are: \"all\", \"aws\", \"gcp\", and  \"azure\". Default is \"all\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Valid inputs are: \"all\", \"trustedadvisor\", \"costexplorer\", and  \"costoptimizationhub\". Default is \"all\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optimizationStatus",
            "in": "query",
            "description": "Valid inputs are: \"in-progress\", \"error\", \"open\",\"done\" and \"all\"",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Valid inputs are: \"rate\", \"usage\", and \"all\". If not set, default is \"all\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rateModel",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentOption",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offeringClass",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Optional. If not set, default value is `USD`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1ListRecommendationResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1ListRecommendationResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/recommendations/optimization/executed": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Mark a recommendation executed.",
        "operationId": "Cover_MarkAsExecuted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1MarkAsExecutedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1MarkAsExecutedResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/recommendations/optimization/history": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Lists recommendations based on specified criteria.",
        "operationId": "Cover_OptimizationHistory",
        "parameters": [
          {
            "name": "costgroupId",
            "in": "query",
            "description": "Required. Cost Group Id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRangeStart",
            "in": "query",
            "description": "Required. Start date of retrieved data. If not set, default is three months past.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRangeEnd",
            "in": "query",
            "description": "Required. End date of retrieved data.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendor",
            "in": "query",
            "description": "Required. Valid inputs are: \"all\", \"aws\", \"gcp\", and  \"azure\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Valid inputs are: \"all\", \"trusted-advisor\", \"cost-explorer\", and  \"cost-optimization-hub\". Default is \"All\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodOption",
            "in": "query",
            "description": "Valid inputs are: \"daily\", \"monthly\". and \"yearly\". Default is \"monthly\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Optional. If not set, default value is `USD`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1OptimizationHistoryResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/recommendations/optimization/undo": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Undo a executed recommendation (For recommendation).",
        "operationId": "Cover_UndoExecutedRecommendation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UndoExecutedRecommendationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UndoExecutedRecommendationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/recommendations/optimization/{id}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Retrieves a specific recommendation by its ID.",
        "operationId": "Cover_GetRecommendation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costGroupId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodOption",
            "in": "query",
            "description": "Valid inputs are: \"30days\", \"60days\". and \"90days\". Default is \"30days\".",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetRecommendationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reports/fiscalmonth": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get Org's starting month/ fiscal month",
        "operationId": "Cover_GetOrgFiscalMonth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetOrgFiscalMonthResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Sets Org's starting month/ fiscal month",
        "operationId": "Cover_SetOrgFiscalMonth",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1SetOrgFiscalMonthRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1SetOrgFiscalMonthResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/reports/insight/summary/{costGroupId}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get data for insights reports summary",
        "operationId": "Cover_GetReportSummary",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Required. Start date Format: \"YYYYMMDD\"",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Required. End date Format: \"YYYYMMDD\"",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportType",
            "in": "query",
            "description": "Required. Report Type. Valid inputs are: \"quarterly\", \"yearly\"",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Optional. If not set, default value is `USD`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetReportSummaryResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reportschedule": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_CreateReportSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ReportSchedule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/reportschedule/all:read": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_ListReportSchedules",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListReportSchedulesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1ReportSchedule",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1ReportSchedule"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/reportschedule/{id}": {
      "put": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_UpdateReportSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrismUpdateReportScheduleBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/reseller/announcement": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Creates new announcement for wave users",
        "operationId": "Billing_CreateAnnouncement",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateAnnouncementRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/reseller/announcement/{announcementId}": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "Full update existing announcement",
        "operationId": "Billing_UpdateAnnouncement",
        "parameters": [
          {
            "name": "announcementId",
            "in": "path",
            "description": "Required",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateAnnouncementBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Billing"
        ],
        "operationId": "Billing_DeleteAnnouncement",
        "parameters": [
          {
            "name": "announcementId",
            "in": "path",
            "description": "Required",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reseller/announcements/bulk/status": {
      "patch": {
        "tags": [
          "Billing"
        ],
        "summary": "Update multiple announcements status",
        "operationId": "Billing_UpdateAnnouncementsStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateAnnouncementsStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/reseller/announcements/{announcementId}/date": {
      "patch": {
        "tags": [
          "Billing"
        ],
        "summary": "Update announcement date",
        "operationId": "Billing_UpdateAnnouncementDate",
        "parameters": [
          {
            "name": "announcementId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minItems": 1,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateAnnouncementDateBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/resellers": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "ListResellers",
        "description": "**Lists all the reseller accounts.**\n> **Only available in Ripple.**",
        "operationId": "Billing_ListResellers",
        "parameters": [
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of rippleReseller",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/rippleReseller"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Registers the reseller account. Only available in Ripple.",
        "operationId": "Billing_CreateReseller",
        "requestBody": {
          "description": "Request message for the CreateReseller rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateResellerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rippleReseller"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/resellers/{id}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the reseller account. Only available in Ripple.",
        "operationId": "Billing_GetReseller",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. reseller id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rippleReseller"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "Updates the reseller account. Only available in Ripple.",
        "operationId": "Billing_UpdateReseller",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. reseller id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateResellerBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rippleReseller"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Billing"
        ],
        "summary": "Deletes the reseller account. Only available in Ripple.",
        "operationId": "Billing_DeleteReseller",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. reseller id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/resources/accounts/{vendor}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Returns all registered accounts that are not associated to any billing groups and accounts found in CUR for the specified month. For Ripple only",
        "operationId": "Billing_ListAccountResources",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws`,`azure`,`gcp` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "Optional. The UTC month to query. If empty, defaults to current month. Format is `yyyymm`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1ResourceAccount",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1ResourceAccount"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/rightsizingrecommendation/{costGroupId}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Gets the right sizing recommendation of all the accounts in the costgroup",
        "operationId": "Cover_GetRightSizingRecommendation",
        "parameters": [
          {
            "name": "costGroupId",
            "in": "path",
            "description": "Required. Cost Group Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetRightSizingRecommendationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/servicediscounts": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Creates the invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_CreateInvoiceServiceDiscounts",
        "requestBody": {
          "description": "Request message for the Billing.CreateInvoiceServiceDiscounts rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateInvoiceServiceDiscountsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiripplev1InvoiceServiceDiscounts"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/servicediscounts/account:export": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Exports service discounts for account in billing group. Only available in Ripple.",
        "operationId": "Billing_ExportAccountInvoiceServiceDiscounts",
        "requestBody": {
          "description": "Request message for the ExportAccountInvoiceServiceDiscounts rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ExportAccountInvoiceServiceDiscountsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AccountServiceDiscountsExport"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/servicediscounts/billinggroup:export": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Exports service discounts for billing group. Only available in Ripple.",
        "operationId": "Billing_ExportBillingGroupInvoiceServiceDiscounts",
        "requestBody": {
          "description": "Request message for the ExportBillingGroupInvoiceServiceDiscounts rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ExportBillingGroupInvoiceServiceDiscountsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GroupServiceDiscountsExport"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/servicediscounts/{groupId}/account": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "Updates the account invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_UpdateAccountInvoiceServiceDiscounts",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Required.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group\n\nImplied as the parent billing group for Wave(Pro) users.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateAccountInvoiceServiceDiscountsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateAccountInvoiceServiceDiscountsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Registers the account invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_CreateAccountInvoiceServiceDiscounts",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Required.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group\n\nImplied as the parent billing group for Wave(Pro) users.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCreateAccountInvoiceServiceDiscountsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateAccountInvoiceServiceDiscountsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Billing"
        ],
        "summary": "Deletes the account invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_DeleteAccountInvoiceServiceDiscounts",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Required.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group\n\nImplied as the parent billing group for Wave(Pro) users.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/servicediscounts/{groupId}/account:read": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Reads the account invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_ListAccountInvoiceServiceDiscounts",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Required.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group\n\nImplied as the parent billing group for Wave(Pro) users.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingListAccountInvoiceServiceDiscountsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1AccountInvoiceServiceDiscounts",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1AccountInvoiceServiceDiscounts"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/servicediscounts/{groupId}/account:remove": {
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "Removes the account invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_RemoveAccountInvoiceServiceDiscounts",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Required.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group\n\nImplied as the parent billing group for Wave(Pro) users.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingRemoveAccountInvoiceServiceDiscountsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/servicediscounts/{groupId}/billinggroup": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Returns the service discount associated with the billing group id",
        "operationId": "Billing_GetBillingGroupInvoiceServiceDiscounts",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetBillingGroupInvoiceServiceDiscountsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "Updates the billing group invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_UpdateBillingGroupInvoiceServiceDiscounts",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Required.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group\n\nImplied as the parent billing group for Wave(Pro) users.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateBillingGroupInvoiceServiceDiscountsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateBillingGroupInvoiceServiceDiscountsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Registers the billing group invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_CreateBillingGroupInvoiceServiceDiscounts",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Required.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group\n\nImplied as the parent billing group for Wave(Pro) users.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCreateBillingGroupInvoiceServiceDiscountsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateBillingGroupInvoiceServiceDiscountsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Billing"
        ],
        "summary": "Deletes the billing group invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_DeleteBillingGroupInvoiceServiceDiscounts",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Required.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group\n\nImplied as the parent billing group for Wave(Pro) users.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/servicediscounts/{id}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_GetInvoiceServiceDiscounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. [blueapi.api.ripple.v1.InvoiceServiceDiscounts.id].",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiripplev1InvoiceServiceDiscounts"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Billing"
        ],
        "summary": "Updates the invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_UpdateInvoiceServiceDiscounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. [blueapi.api.ripple.v1.InvoiceServiceDiscounts.id]",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateInvoiceServiceDiscountsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiripplev1InvoiceServiceDiscounts"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Billing"
        ],
        "summary": "Deletes the invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_DeleteInvoiceServiceDiscounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. [blueapi.api.ripple.v1.InvoiceServiceDiscounts.id]",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/servicediscounts/{vendor}/services:read": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Reads the service relate to the service discounts. Only available in Ripple.",
        "operationId": "Billing_ReadServiceDiscountsServices",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws`,`azure`,`gcp` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingReadServiceDiscountsServicesBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1Service",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1Service"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/servicediscounts:export": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Exports service discounts. Only available in Ripple.",
        "operationId": "Billing_ExportServiceDiscounts",
        "requestBody": {
          "description": "Request message for the ExportServiceDiscounts rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ExportServiceDiscountsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ServiceDiscountsExport"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/servicediscounts:read": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Reads the invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_ListInvoiceServiceDiscounts",
        "requestBody": {
          "description": "Request message for the ListInvoiceServiceDiscounts rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListInvoiceServiceDiscountsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of blueapibillingv1InvoiceServiceDiscounts",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/blueapibillingv1InvoiceServiceDiscounts"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/settings": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "WORK-IN-PROGRESS: Gets all billing settings.",
        "operationId": "Billing_GetBillingSetting",
        "parameters": [
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetBillingSettingResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "Creates a new settings configuration for the user.",
        "operationId": "Flow_CreateSettings",
        "requestBody": {
          "description": "Request message for the Flow.CreateSettings rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateSettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateSettingsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/settings/history/{id}": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Gets the settings configuration history for a user.",
        "operationId": "Flow_GetSettingsHistory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. The id of the payer to fetch settings history for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetSettingsHistoryResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/settings/recommendations/{id}": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Fetch user savings plan details",
        "operationId": "Flow_GetRecommendationDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. The id of the payer to fetch recommendation details for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetRecommendationDetailsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/settings/{id}": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Fetch previous settings for a user",
        "operationId": "Flow_GetSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. The id of the payer to fetch settings for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetSettingsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Flow"
        ],
        "summary": "Update the settings configuration for a user.",
        "operationId": "Flow_UpdateSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. The id of the payer to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowUpdateSettingsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateSettingsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/tags": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Returns the customer details and its tags. \nPort for: m/ripple/tags/vendor/{vendor}?type={type}",
        "operationId": "Billing_GetTags",
        "parameters": [
          {
            "name": "vendor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of billingv1TagData",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/billingv1TagData"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/team": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_CreateTeam",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateTeamRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/team/all:read": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_ListTeams",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListTeamsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1Team",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1Team"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/team/{id}": {
      "get": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_GetTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required team ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetTeamResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_DeleteTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required team ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/test": {
      "get": {
        "tags": [
          "Prism"
        ],
        "summary": "Test endpoint only.",
        "operationId": "Prism_Test",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1TestResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/unitcost": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Lists Unit Types",
        "operationId": "Cover_ListUnitTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListUnitTypesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Create Unit Type",
        "operationId": "Cover_CreateUnitType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateUnitTypeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateUnitTypeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/unitcost/autosuggest": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "List Suggested Unit Types",
        "operationId": "Cover_ListSuggestedUnits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListSuggestedUnitsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/unitcost/autosuggest/create": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Create Unit from Suggested Units",
        "operationId": "Cover_CreateUnitFromSuggested",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateUnitFromSuggestedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateUnitFromSuggestedResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/unitcost/autosuggest/merge": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Merge Suggested Units",
        "operationId": "Cover_MergeSuggestedUnits",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1MergeSuggestedUnitsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1MergeSuggestedUnitsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/unitcost/merge": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Merge Existing Unit Types",
        "operationId": "Cover_MergeUnits",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1MergeUnitsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1MergeUnitsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/unitcost/metrics": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "List all Unit Metrics",
        "operationId": "Cover_ListUnitMetrics",
        "parameters": [
          {
            "name": "aggregationMethod",
            "in": "query",
            "description": "Optional. Filter by aggregation method.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataSource",
            "in": "query",
            "description": "Optional. Filter by data source.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Optional. Filter by status.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListUnitMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Create Unit Metric",
        "operationId": "Cover_CreateUnitMetric",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateUnitMetricRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateUnitMetricResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/unitcost/metrics/cloudwatch/metadata": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get Cloudwatch Metadata",
        "operationId": "Cover_GetCloudwatchMetadata",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "Required. The AWS account ID to assume when querying CloudWatch.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Required. The AWS region where the metrics should be queried (e.g., \"us-east-1\").",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Required. The type of metadata to retrieve.\nValid values: \"namespace\", \"metric\", or \"dimension\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Conditionally required.\nMust be provided when `type` is \"metric\" or \"dimension\".\nExample: \"AWS/EC2\", \"AWS/Lambda\", or a custom namespace like \"MyApp/BusinessMetrics\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricName",
            "in": "query",
            "description": "Conditionally required.\nMust be provided when `type` is \"dimension\".\nExample: \"CPUUtilization\", \"Invocations\", etc.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCloudwatchMetadataResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/unitcost/metrics/googlesheet/confirm": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Confirm Google Sheet Access",
        "operationId": "Cover_ConfirmGoogleSheetAccess",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ConfirmGoogleSheetAccessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ConfirmGoogleSheetAccessResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/unitcost/metrics/googlesheet/preview": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Preview Google Sheet Data",
        "operationId": "Cover_PreviewGoogleSheet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1PreviewGoogleSheetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1PreviewGoogleSheetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/unitcost/metrics/{id}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get Specific Unit Metric",
        "operationId": "Cover_GetUnitMetric",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Unit Metric Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetUnitMetricResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update Specific Unit Metric",
        "operationId": "Cover_UpdateUnitMetric",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Unit Metric Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateUnitMetricBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateUnitMetricResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cover"
        ],
        "summary": "Delete Specific Unit Metric",
        "operationId": "Cover_DeleteUnitMetric",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Unit Metric Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DeleteUnitMetricResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/unitcost/sharedresources": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "List all Shared Resources",
        "operationId": "Cover_ListSharedResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListSharedResourcesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Create Shared Resource",
        "operationId": "Cover_CreateSharedResource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateSharedResourcesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateSharedResourcesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/unitcost/sharedresources/{id}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get Specific Shared Resource",
        "operationId": "Cover_GetSharedResource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Shared Resource Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetSharedResourcesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update Specific Shared Resource",
        "operationId": "Cover_UpdateSharedResource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Shared Resource Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateSharedResourceBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateSharedResourcesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cover"
        ],
        "summary": "Delete Specific Shared Resource",
        "operationId": "Cover_DeleteSharedResource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Shared Resource Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DeleteSharedResourcesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/unitcost/{id}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get Specific Unit Type",
        "operationId": "Cover_GetUnitType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Unit Type Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetUnitTypeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update Specific Unit Type",
        "operationId": "Cover_UpdateUnitType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Unit Type Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateUnitTypeBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateUnitTypeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cover"
        ],
        "summary": "Delete Specific Unit Type",
        "operationId": "Cover_DeleteUnitType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Required. Unit Type Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DeleteUnitTypeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/usagecost": {
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "Gets the daily cost and usage details.",
        "operationId": "Flow_GetDailyUsageCostDetails",
        "requestBody": {
          "description": "Request message for the Flow.GetDailyUsageCostDetailsRequest rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1GetDailyUsageCostDetailsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetDailyUsageCostDetailsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/verify": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_VerifyUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1VerifyUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1VerifyUserResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/views": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get all the views",
        "operationId": "Cover_GetViews",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetViewsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Create a view",
        "operationId": "Cover_CreateView",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateViewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateViewResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/views/favorite/add": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Add to favorites",
        "operationId": "Cover_AddFavorite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1AddFavoriteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AddFavoriteResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/views/favorite/remove": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Remove from favorites",
        "operationId": "Cover_RemoveFavorite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1RemoveFavoriteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1RemoveFavoriteResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/views/favorites": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get favorite views",
        "operationId": "Cover_GetFavoriteViews",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetFavoriteViewsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/views/layout/{viewId}": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Updates the view's layout",
        "operationId": "Cover_UpdateViewLayout",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "Required. View Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateViewLayoutBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateViewLayoutResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/views/layout/{viewId}/{widgetId}": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Updates the view's widget",
        "operationId": "Cover_UpdateViewWidget",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "Required. View Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "widgetId",
            "in": "path",
            "description": "Required. Widget Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateViewWidgetBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateViewWidgetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/views/publish": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Publish current view",
        "operationId": "Cover_PublishView",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1PublishViewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1PublishViewResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/views/{viewId}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get the details of the current view",
        "operationId": "Cover_GetCurrentView",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "Required. View Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCurrentViewResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Updates the view details",
        "operationId": "Cover_UpdateView",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "Required. View Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateViewBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateViewResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cover"
        ],
        "summary": "Deletes a view",
        "operationId": "Cover_DeleteView",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "Required. View Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DeleteViewResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/views/{viewId}/colortheme": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update view's color theme",
        "operationId": "Cover_UpdateViewColorTheme",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateViewColorThemeBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateViewColorThemeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/views/{viewId}/currency": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Update report's currency settings",
        "operationId": "Cover_UpdateViewCurrency",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateViewCurrencyBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateViewCurrencyResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/views/{viewId}/sidemenufavorite": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Add as side menu favorite",
        "operationId": "Cover_AddSideMenuFavorite",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "Required. View Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverAddSideMenuFavoriteBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AddSideMenuFavoriteResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/views/{viewId}/sidemenustate": {
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Updates the side menu state",
        "operationId": "Cover_UpdateSideMenuState",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "Required. View Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverUpdateSideMenuStateBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateSideMenuStateResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/views/{viewId}/sidemenuunfavorite": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Remove from side menu favorite",
        "operationId": "Cover_RemoveSideMenuFavorite",
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "description": "Required. View Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverRemoveSideMenuFavoriteBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1RemoveSideMenuFavoriteResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/workflow/all:read": {
      "post": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_ListWorkflows",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ListWorkflowsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1Workflow",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1Workflow"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/workflow/{name}": {
      "put": {
        "tags": [
          "Prism"
        ],
        "operationId": "Prism_UpdateWorkflow",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Required workflow name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrismUpdateWorkflowBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/x/pcc": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "WORK-IN-PROGRESS: Do not use.",
        "operationId": "Cover_ProxyCreateCompletion",
        "requestBody": {
          "description": "Request message for the ProxyCreateCompletion rpc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ProxyCreateCompletionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1ProxyCreateCompletionResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1ProxyCreateCompletionResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor_1}/payers": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get list of all payers",
        "operationId": "Cover_GetPayers",
        "parameters": [
          {
            "name": "vendor_1",
            "in": "path",
            "description": "Required. Cloud vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetPayersResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Assign payer to a linked account",
        "operationId": "Cover_AssignPayer",
        "parameters": [
          {
            "name": "vendor_1",
            "in": "path",
            "description": "Required. Cloud vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverAssignPayerBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AssignPayerResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/account": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Registers an account",
        "operationId": "Cover_RegisterAccount",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. Cloud vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverRegisterAccountBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/accounts": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Lists all vendor accounts.",
        "operationId": "Cost_ListAccounts",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, `aws` and `gcp` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Optional. The billing group internal id. Only valid for Ripple users.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of blueapiapiAccount",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/blueapiapiAccount"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Registers a vendor account.",
        "operationId": "Cost_CreateAccount",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCreateAccountBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blueapiapiAccount"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/accounts/customers/accounts:check": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "WORK-IN-PROGRESS: Check inputed accountIds belong to current MSP or not",
        "operationId": "Cost_CheckAccountsBelongToMsp",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCheckAccountsBelongToMspBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CheckAccountsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/accounts/groups/{groupId}": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Lists all vendor accounts.",
        "operationId": "Cost_ListAccounts2",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, `aws` and `gcp` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Optional. The billing group internal id. Only valid for Ripple users.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of blueapiapiAccount",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/blueapiapiAccount"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/accounts/{costGroupId}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get list of registered accounts",
        "operationId": "Cover_GetAccounts",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. Cloud vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetAccountsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/accounts/{id}": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Gets a vendor account. This API includes all of the account's metadata. See https://alphauslabs.github.io/blueapi/ for the list of supported attributes.",
        "operationId": "Cost_GetAccount",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, `aws` and `gcp` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. The account id to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blueapiapiAccount"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cost"
        ],
        "summary": "WORK-IN-PROGRESS: Updates a vendor account. Only available in Ripple.",
        "operationId": "Cost_UpdateAccount",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostUpdateAccountBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blueapiapiAccount"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cost"
        ],
        "summary": "WORK-IN-PROGRESS: Deletes a vendor account.",
        "operationId": "Cost_DeleteAccount",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. The account id to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/adjustmententries/{id}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the adjustment entry. Only available in Ripple.",
        "operationId": "Billing_GetAdjustmentEntry",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws`,`azure`,`gcp` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. The adjustment entry id. [blueapi.api.ripple.v1.AdjustmentEntry.id]",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AdjustmentEntry"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/adjustmententries/{id}/allocate": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Allocates the adjustment entry item. Only available in Ripple.",
        "operationId": "Billing_AllocateAdjustmentEntry",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. AdjustmentEntry ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingAllocateAdjustmentEntryBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/adjustmententries/{id}/allocate:restore": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Restores the allocate adjustment entry item. Only available in Ripple.",
        "operationId": "Billing_RestoreAllocateAdjustmentEntry",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. AdjustmentEntry ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingRestoreAllocateAdjustmentEntryBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/adjustmententries/{id}/split": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Splits the adjustment entry item. Only available in Ripple.",
        "operationId": "Billing_SplitAdjustmentEntry",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. AdjustmentEntry ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingSplitAdjustmentEntryBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/adjustmententries/{id}/split:restore": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Restores the splitted adjustment entry item. Only available in Ripple.",
        "operationId": "Billing_RestoreSplitAdjustmentEntry",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. AdjustmentEntry ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingRestoreSplitAdjustmentEntryBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/adjustmententries:apply": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Applies the adjustment entry item. Only available in Ripple.",
        "operationId": "Billing_ApplyAdjustmentEntry",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws`,`azure`,`gcp` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingApplyAdjustmentEntryBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/adjustmententries:read": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Reads the adjustment entries. Only available in Ripple.",
        "operationId": "Billing_ReadAdjustmentEntries",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws`,`azure`,`gcp` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingReadAdjustmentEntriesBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1AdjustmentEntry",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1AdjustmentEntry"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/adjustmententries:restore": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Restores the adjustment entry item. Only available in Ripple.",
        "operationId": "Billing_RestoreAdjustmentEntry",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws`,`azure`,`gcp` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingRestoreAdjustmentEntryBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/adjustments:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Reads the non-usage-based details of an organization (Ripple) or billing group (Wave[Pro]).",
        "description": "This API covers non-usage-based adjustments, such as Fees, Credits, Discounts, Tax, Upfront Fees, etc. At the moment, the supported `{vendor}` is `aws` or `azure`. If datetime range parameters are not set, month-to-date (current month) will be returned.",
        "operationId": "Cost_ReadAdjustments",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` or `azure` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostReadAdjustmentsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of blueapicostv1CostItem",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/blueapicostv1CostItem"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/alerts/{id}": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Get the budget alerts for the account id. Only available in Wave(Pro).",
        "operationId": "Cost_GetAccountBudgetAlerts",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiwaveBudgetAlert"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cost"
        ],
        "summary": "Update the budget alerts for the account id. Only available in Wave(Pro).",
        "operationId": "Cost_UpdateAccountBudgetAlerts",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostUpdateAccountBudgetAlertsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiwaveBudgetAlert"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Create the budget alerts for the account id. Only available in Wave(Pro).",
        "operationId": "Cost_CreateAccountBudgetAlerts",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCreateAccountBudgetAlertsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiwaveBudgetAlert"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cost"
        ],
        "summary": "Delete the budget alerts for the account id. Only available in Wave(Pro).",
        "operationId": "Cost_DeleteAccountBudgetAlerts",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/aors:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Reads all vendor account-original-resources.\nAccount that have not been used for one month will no longer be retrieved.",
        "operationId": "Cost_ReadAccountOriginalResources",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws`.`gcp`,`azure` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostReadAccountOriginalResourcesBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of apiAccountOriginalResource",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/apiAccountOriginalResource"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/bep/{orgId}": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Get the breakeven point details for the RI or SP.",
        "operationId": "Cost_GetBreakevenPoint",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgId",
            "in": "path",
            "description": "Required. Organization Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Required. For AWS, \"ri\" or \"sp\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arn",
            "in": "query",
            "description": "Required. RI/SP Arn.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetBreakevenPointResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/budget/{budgetId}": {
      "put": {
        "tags": [
          "Cost"
        ],
        "summary": "Updates monthly budget for the account/acctgroup id.",
        "operationId": "Cost_UpdateAccountBudget",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "budgetId",
            "in": "path",
            "description": "Required. Budget Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostUpdateAccountBudgetBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cost"
        ],
        "summary": "Removes monthly budget for the account/acctgroup id from database.",
        "operationId": "Cost_DeleteAccountBudget",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "budgetId",
            "in": "path",
            "description": "Required. Budget Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/budget/{level}/{id}": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Fetches monthly budget for the account/acctgroup id.",
        "operationId": "Cost_GetAccountBudget",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "level",
            "in": "path",
            "description": "Required. 'account' or 'acctgroup'",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. Account or AccountGroup Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "Optional. Default is current year. Format: `yyyy`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetAccountBudgetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Creates monthly budget for the account/acctgroup id.",
        "operationId": "Cost_CreateAccountBudget",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "level",
            "in": "path",
            "description": "Required. 'account' or 'acctgroup'",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. Account or AccountGroup Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCreateAccountBudgetBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateAccountBudgetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/calculation/prerequisites/{month}": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "WORK-IN-PROGRESS: List the prerequisites for cost calculations.",
        "operationId": "Cost_ListCalculationPrerequisites",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Required. Month in format yyyy-mm.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListCalculationPrerequisitesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/calculations/history": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Lists vendor costs calculations history and statuses.",
        "operationId": "Cost_ListCalculationsHistory",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asOf",
            "in": "query",
            "description": "Optional. List operations on and after this date. Format is yyyymmdd. For example, if you want to list all operations starting from June 01, 2021, set to `20210601`. If not set, defaults to the first day of the current UTC month.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeDone",
            "in": "query",
            "description": "Optional. If true, exclude all operations that are marked as done. Include by default.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListCalculationsHistoryResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/calculations/schedules": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Lists the schedules of your monthly calculations. Only available in Ripple.",
        "operationId": "Cost_ListCalculationsSchedules",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListCalculationsSchedulesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Creates a schedule to trigger your monthly calculations. At the moment, only one schedule is allowed per account. Only available in Ripple.",
        "operationId": "Cost_CreateCalculationsSchedule",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCreateCalculationsScheduleBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CalculationsSchedule"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/calculations/schedules/{id}": {
      "delete": {
        "tags": [
          "Cost"
        ],
        "summary": "Deletes the schedule of your monthly calculations. Only available in Ripple.",
        "operationId": "Cost_DeleteCalculationsSchedule",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. The id to delete. Can be set to either `-` or `*`, which means all.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/calculator/config": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "WORK-IN-PROGRESS: Gets the vendor cost calculator's current configuration.",
        "operationId": "Cost_GetCalculatorConfig",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCalculatorConfigResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/calculator/config/costmods": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Lists the cost calculator's cost modifiers. At the moment, the supported {vendor} is 'aws'. Only available in Ripple.",
        "operationId": "Cost_ListCalculatorCostModifiers",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` and `azure` are supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1CalculatorCostModifier",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1CalculatorCostModifier"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Creates a cost modifier.",
        "description": "A cost modifier allows you to modify the cost per lineitem. At the moment, the supported `{vendor}` is `aws` and only applies to items not affected by trueunblended calculations. Items not covered include some usages under `AmazonEC2`, `AmazonRDS`, `AmazonElastiCache`, `AmazonES`, and `AmazonRedShift`, that are covered by their respective RIs and/or SPs. Non-usage items such as discounts, refunds, fees, etc. are also not covered. Only available in Ripple.",
        "operationId": "Cost_CreateCalculatorCostModifier",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCreateCalculatorCostModifierBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateCalculatorCostModifierResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/calculator/config/costmods/{id}": {
      "delete": {
        "tags": [
          "Cost"
        ],
        "summary": "Deletes a cost modifier. At the moment, the supported {vendor} is 'aws'. Only available in Ripple.",
        "operationId": "Cost_DeleteCalculatorCostModifier",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` and `azure` are supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. The id of the modifier to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/calculator/running:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Lists the vendor calculator's queued accounts for calculation.",
        "description": "If result is non-empty, it means calculation is still in progress for the returned accounts. Only available in Ripple.",
        "operationId": "Cost_ListCalculatorRunningAccounts",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostListCalculatorRunningAccountsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1ListCalculatorRunningAccountsResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1ListCalculatorRunningAccountsResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/costattrs": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "WORK-IN-PROGRESS: Reads the available cost attributes of an organization (Ripple) or billing group (Wave).",
        "operationId": "Cost_GetCostAttributes",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "Required. Format: `yyyy-mm`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Optional. If set, reads the cost attributes of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountId",
            "in": "query",
            "description": "Optional. You can set it to a single account or a comma-separated list of accounts. If set, overrides `groupId`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Optional. A comma-separated list of dimensions to query. Valid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, `resourceId` and `tags`. Sequence doesn't matter. An empty value implies all attributes will be returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCostAttributesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/costattrs:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Reads the available cost attributes of an organization (Ripple) or billing group (Wave).",
        "description": "Similar to the `ReadCosts` API but without the aggregated usages and costs. At the moment, the supported `{vendor}` is `aws`. If datetime range parameters are not set, month-to-date (current month) will be returned.",
        "operationId": "Cost_ReadCostAttributes",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostReadCostAttributesBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1CostAttributeItem",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1CostAttributeItem"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/costfilters": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Lists the usage-based cost filter condition. Only available in Wave(Pro).",
        "operationId": "Cost_ListCostFilters",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListCostFiltersResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Creates the usage-based cost filter condition.",
        "description": "You can consider cost filters as predefined/prefiltered queries using the `v1/{vendor}/costs:read` or `ReadCosts` API. Only available in Wave(Pro).",
        "operationId": "Cost_CreateCostFilters",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCreateCostFiltersBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateCostFiltersResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/costfilters/{filterId}": {
      "put": {
        "tags": [
          "Cost"
        ],
        "summary": "Updates the usage-based cost filter condition. Only available in Wave(Pro).",
        "operationId": "Cost_UpdateCostFilters",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterId",
            "in": "path",
            "description": "Required. Filter Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostUpdateCostFiltersBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateCostFiltersResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cost"
        ],
        "summary": "Deletes the usage-based cost filter condition. Only available in Wave(Pro).",
        "operationId": "Cost_DeleteCostFilters",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterId",
            "in": "path",
            "description": "Required. Filter Id to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/costfilters/{filterId}:export": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Exports the usage-based cost filter condition. Only available in Wave(Pro).",
        "operationId": "Cost_ExportCostFiltersFile",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterId",
            "in": "path",
            "description": "Required. Filter Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostExportCostFiltersFileBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ExportCostFiltersFileResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/costs:calculate": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Triggers monthly calculations for costs and invoices at either organization or billing group level.",
        "description": "For the AWS calculator, aggregation is done at daily and monthly level. Also, all occurrences of the character `|` (pipe) in the CUR descriptions and tag key/values are replaced with the `/` (forward-slash) character. This is due to the `|` character having a special designation in the data processing workflows.",
        "operationId": "Cost_CalculateCosts",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCalculateCostsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protosOperation"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/costs:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Reads the usage-based cost details of an organization (Ripple) or billing group (Wave).",
        "description": "You can refer to this [guide](https://labs.alphaus.cloud/docs/guides/aws-query-costs/) for more examples on how to use this API. Although the guide uses `bluectl`, the parameters are the same.",
        "operationId": "Cost_ReadCosts",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. Supported vendors are `aws`,`azure` and `gcp`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostReadCostsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of blueapicostv1CostItem",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/blueapicostv1CostItem"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/coverage/ondemand/{orgId}:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Get ondemand cost details for an organization (or MSP).",
        "operationId": "Cost_GetCoverageOndemand",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgId",
            "in": "path",
            "description": "Required. Organization Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostGetCoverageOndemandBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCoverageOndemandResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/coverage/options/{orgId}:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Get coverage options details for an organization (or MSP).",
        "operationId": "Cost_GetCoverageOptions",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgId",
            "in": "path",
            "description": "Required. Organization Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostGetCoverageOptionsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCoverageOptionsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/exchangerate/{month}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "ListExchangeRates",
        "description": "Lists all exchange rate.\n> Only available in Ripple.",
        "operationId": "Billing_ListExchangeRates",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Required. month. Format: `yyyymm`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blueapibillingv1ListExchangeRatesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/forecasts": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Fetches cost forecasts for the specified billing group. Includes historical cost (up to previous month) and forecasted cost (up to three months for now).",
        "operationId": "Cost_GetForecasts",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingInternalId",
            "in": "query",
            "description": "Optional. Company Id of Billing Group to retrieve. Default value is user's Company Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frequency",
            "in": "query",
            "description": "Optional. Forecast frequency. Valid values are `daily` and `monthly`. \nDefault value is `daily`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "level",
            "in": "query",
            "description": "Optional. Forecast granularity. Valid values are `account`, `category` and `product`. Default value is `account`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Optional. Start date to get cost forecast. If from_date is less than current date, historical costs are included. If from_date is greater than current date, only forecasted costs are returned. Format: `yyyy-mm-dd`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Optional. End date to get cost forecast. Currently, we only support 90 days forecasting from the first day of current month. Format: `yyyy-mm-dd`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetForecastsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/forecasts/month-on-month/{level}/{id}": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Fetches previous month cost vs current month forecast vs current accumulated cost per category for id.",
        "operationId": "Cost_GetMonthOnMonthCostForecast",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "level",
            "in": "path",
            "description": "Required. 'account' or 'acctgroup'",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. Account or AccountGroup Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Optional. Default is current month. Format: `yyyymm`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetMonthOnMonthCostForecastResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/forecasts/month-to-date/{level}/{id}": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Fetches current month daily forecast vs current accumulated daily cost for id.",
        "operationId": "Cost_GetMonthToDateCostForecast",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "level",
            "in": "path",
            "description": "Required. 'account' or 'acctgroup'",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. Account or AccountGroup Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Optional. Default is current month. Format: `yyyymm`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetMonthToDateCostForecastResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/forecasts/monthly/{level}/{id}": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Fetches monthly accumulated costs vs forecasted cost vs budget for the id.",
        "operationId": "Cost_GetMonthlyCostForecast",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "level",
            "in": "path",
            "description": "Required. 'account' or 'acctgroup'",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. Account or AccountGroup Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Optional. Start month to get cost forecast. Format: `yyyymm`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Optional. Last month to get cost forecast. Format: `yyyymm`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetMonthlyCostForecastResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/invoiceadjustments:read": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Reads the adjustment details involved in invoicing of an organization billing group (Wave).",
        "operationId": "Billing_ReadInvoiceAdjustments",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws`,`azure`,`gcp` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingReadInvoiceAdjustmentsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of waveAdjustment",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/waveAdjustment"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/invoiceids:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Read the invoice ids. Only available in Ripple.",
        "operationId": "Cost_ReadInvoiceIds",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostReadInvoiceIdsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1ReadInvoiceIdsResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1ReadInvoiceIdsResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/nontagcosts:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Reads the usage-based non tag costs of a billing group.",
        "description": "At the moment, the supported `{vendor}` is `aws`. If datetime range parameters are not set, month-to-date (current month) will be returned.",
        "operationId": "Cost_ReadNonTagCosts",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostReadNonTagCostsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of blueapicostv1CostItem",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/blueapicostv1CostItem"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/payers": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Lists vendor payer accounts.",
        "description": "For AWS, these are management accounts (formerly known as master or payer accounts); for Azure, these are subscriptions, for GCP, these are projects.",
        "operationId": "Cost_ListPayerAccounts",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of blueapiapiAccount",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/blueapiapiAccount"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "DEPRECATED: Registers a vendor payer account. This is now deprecated for AWS payer accounts. To register an AWS payer account, check out the 'CreateDefaultCostAccess' API.",
        "operationId": "Cost_CreatePayerAccount",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCreatePayerAccountBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blueapiapiAccount"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/payers/basicdetails": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "WORK-IN-PROGRES: Registers a vendor payer account with their basics details such as accountId and accountName.",
        "operationId": "Cost_RegisterPayerAccount",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostRegisterPayerAccountBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/payers/{id}": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Gets a vendor payer account.",
        "description": "This API includes all of the account's metadata. See (https://alphauslabs.github.io/blueapi/)[https://alphauslabs.github.io/blueapi/] for the list of supported attributes. For AWS, this means a management account (formerly known as master or payer account); for Azure, this means a subscription, for GCP, this means a project.",
        "operationId": "Cost_GetPayerAccount",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. The id of the account to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ripplePayer"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cost"
        ],
        "summary": "Deletes a vendor payer account.",
        "operationId": "Cost_DeletePayerAccount",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. The id of the account.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/payers/{id}/importhistory": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Gets a payer account's import history.",
        "description": "Import history is a list of timestamps our system tracks when the account's data are imported to our system, which in turn, triggers processing. At the moment, this only supports AWS (CUR files). You can also set `{id}` to `*` to return all payers' information under the organization.",
        "operationId": "Cost_GetPayerAccountImportHistory",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. The account id to query. Could be `*`, which implies all payers.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "Optional. The UTC month to query. If empty, defaults to current month. Format is `yyyymm`. For example, June 2021 will be `202106`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1GetPayerAccountImportHistoryResponse",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1GetPayerAccountImportHistoryResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/payers/{id}/proforma": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Gets a payer account's proforma reports. Applicable for AWS payer accounts only.",
        "operationId": "Cost_GetPayerProformaReports",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required. The account id to query.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetPayerProformaReportsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/recommendations/{orgId}:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "WORK-IN-PROGRESS: Get cost opmtimization recommendations for an organization (or MSP).",
        "operationId": "Cost_GetRecommendations",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgId",
            "in": "path",
            "description": "Required. Organization Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostGetRecommendationsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetRecommendationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/reduction/{orgId}:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Get cost reduction details for an organization (or MSP).",
        "operationId": "Cost_GetCostReduction",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgId",
            "in": "path",
            "description": "Required. Organization Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostGetCostReductionBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCostReductionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/regions/{costGroupId}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get list of available regions",
        "operationId": "Cover_GetRegions",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. Cloud vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetRegionsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/resource/modify": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Modify resource type from right sizing recommendation",
        "operationId": "Cover_ModifyResourceType",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. Cloud vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverModifyResourceTypeBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ModifyResourceTypeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/resource/terminate": {
      "post": {
        "tags": [
          "Cover"
        ],
        "summary": "Terminate a resource from right sizing recommendation",
        "operationId": "Cover_TerminateResource",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. Cloud vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverTerminateResourceBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1TerminateResourceResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/services/{costGroupId}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get list of supported services",
        "operationId": "Cover_GetServices",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. Cloud vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetServicesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/tagcosts:read": {
      "post": {
        "tags": [
          "Cost"
        ],
        "summary": "Reads the usage-based tag costs of a billing group.",
        "description": "At the moment, the supported `{vendor}` is `aws`. If datetime range parameters are not set, month-to-date (current month) will be returned.",
        "operationId": "Cost_ReadTagCosts",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostReadTagCostsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of blueapicostv1CostItem",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/blueapicostv1CostItem"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/tags": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Lists all vendor tags.",
        "operationId": "Cost_ListTags",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Optional. The billing group internal id. Only valid for Ripple users.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of apiCostTag",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/apiCostTag"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/tags/groups/{groupId}": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Lists all vendor tags.",
        "operationId": "Cost_ListTags2",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Optional. The billing group internal id. Only valid for Ripple users.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of apiCostTag",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/apiCostTag"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/tags/{costGroupId}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Get list of available tags",
        "operationId": "Cover_GetTags",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. Cloud vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetTagsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{vendor}/tagsaddingsetting/{groupId}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "operationId": "Billing_GetTagsAddingSetting",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1TagsAddingSetting",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1TagsAddingSetting"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Billing"
        ],
        "operationId": "Billing_UpdateTagsAddingSetting",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingUpdateTagsAddingSettingBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/untaggedgroups:read": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Reads the untagged group. Only available in Ripple.",
        "operationId": "Billing_ReadUntaggedGroups",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingReadUntaggedGroupsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of rippleUntaggedGroup",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/rippleUntaggedGroup"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/usagecostsdrift:read": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Returns a list of accounts that have been updated after invoice along with the differences in costs, if any. Only available in Ripple.",
        "operationId": "Billing_ListUsageCostsDrift",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingListUsageCostsDriftBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Stream result of v1UsageCostsDrift",
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1UsageCostsDrift"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{vendor}/utilization/{orgId}": {
      "get": {
        "tags": [
          "Cost"
        ],
        "summary": "Get the utilization details for an organization (or MSP).",
        "operationId": "Cost_GetUtilization",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "Required. At the moment, only `aws` is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgId",
            "in": "path",
            "description": "Required. Organization Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Required. For AWS, \"ri\" or \"sp\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Optional. The start date of the displayed data. If not set, the first day of the current month will be used. Format: yyyy-mm-dd.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Optional. The end date of the displayed data. If not set, current date will be used. Format: yyyy-mm-dd.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payerId",
            "in": "query",
            "description": "Optional. Payer Id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingInternalId",
            "in": "query",
            "description": "Optional. Billing group Id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Optional. Account group Id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costGroupId",
            "in": "query",
            "description": "Optional. Cost Group Id used in octo.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetUtilizationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AWSResourceDetailsComprehendDetailsEndpoint": {
        "type": "object",
        "properties": {
          "arn": {
            "type": "string"
          },
          "provisionedInferenceUnit": {
            "type": "number",
            "format": "double"
          },
          "autoScalingStatus": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "AWSResourceDetailsEC2AutoScalingGroupDetails": {
        "type": "object",
        "properties": {
          "instanceConfigurationDetails": {
            "$ref": "#/components/schemas/EC2AutoScalingGroupDetailsInstanceConfigurationDetails"
          }
        }
      },
      "AWSResourceDetailsEC2DetailsInstanceDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "architecture": {
            "type": "string"
          },
          "tenancy": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "family": {
            "type": "string"
          },
          "metrics": {
            "$ref": "#/components/schemas/InstanceDetailsEC2Metrics"
          },
          "name": {
            "type": "string"
          },
          "eip": {
            "$ref": "#/components/schemas/InstanceDetailsEIPDetails"
          },
          "status": {
            "type": "string"
          },
          "vCpu": {
            "type": "string"
          },
          "natGateway": {
            "$ref": "#/components/schemas/InstanceDetailsNatGatewayDetails"
          }
        }
      },
      "AWSResourceDetailsECSDetails": {
        "type": "object",
        "properties": {
          "service": {
            "$ref": "#/components/schemas/ECSDetailsServiceDetails"
          }
        }
      },
      "AWSResourceDetailsELBDetails": {
        "type": "object",
        "properties": {
          "loadBalancer": {
            "$ref": "#/components/schemas/ELBDetailsLoadBalancer"
          }
        }
      },
      "AWSResourceDetailsElastiCacheDetails": {
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/AWSResourceDetailsElastiCacheDetailsNodeDetails"
          }
        }
      },
      "AWSResourceDetailsElastiCacheDetailsNodeDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "family": {
            "type": "string"
          }
        }
      },
      "AWSResourceDetailsLambdaDetails": {
        "type": "object",
        "properties": {
          "function": {
            "$ref": "#/components/schemas/LambdaDetailsFunctionDetails"
          }
        }
      },
      "AWSResourceDetailsMemoryDBDetailsNodeDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "family": {
            "type": "string"
          }
        }
      },
      "AWSResourceDetailsNetworkFirewallDetails": {
        "type": "object",
        "properties": {
          "endpoint": {
            "$ref": "#/components/schemas/AWSResourceDetailsNetworkFirewallDetailsEndpoint"
          },
          "arn": {
            "type": "string"
          },
          "vpcId": {
            "type": "string"
          },
          "subnets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AWSResourceDetailsNetworkFirewallDetailsEndpoint": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "subnet": {
            "type": "string"
          },
          "az": {
            "type": "string"
          }
        }
      },
      "AWSResourceDetailsOpensearchDetails": {
        "type": "object",
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/AWSResourceDetailsOpensearchDetailsInstanceDetails"
          }
        }
      },
      "AWSResourceDetailsOpensearchDetailsInstanceDetails": {
        "type": "object",
        "properties": {
          "instanceClass": {
            "type": "string"
          },
          "instanceSize": {
            "type": "string"
          }
        }
      },
      "AWSResourceDetailsRedshiftDetailsNodeDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "family": {
            "type": "string"
          }
        }
      },
      "AWSResourceDetailsReservedInstance": {
        "type": "object",
        "properties": {
          "expirationDate": {
            "type": "string"
          },
          "instanceCount": {
            "type": "number",
            "format": "double"
          },
          "instanceType": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "metrics": {
            "$ref": "#/components/schemas/ReservedInstanceRIMetrics"
          }
        }
      },
      "AWSResourceDetailsRoute53Details": {
        "type": "object",
        "properties": {
          "hostedZoneName": {
            "type": "string"
          },
          "hostedZoneId": {
            "type": "string"
          },
          "resourceRecordSetName": {
            "type": "string"
          },
          "resourceRecordSetType": {
            "type": "string"
          }
        }
      },
      "AWSResourceDetailsS3Details": {
        "type": "object",
        "properties": {
          "bucket": {
            "$ref": "#/components/schemas/S3DetailsBucketDetails"
          }
        }
      },
      "AccountHistory": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "Calculation timestamp in UTC, RFC3339."
          },
          "trigger": {
            "type": "string",
            "description": "Calculation trigger. Either `invoice` or `cur`."
          }
        }
      },
      "AdminUpdateNotificationBody": {
        "type": "object",
        "properties": {
          "channels": {
            "title": "Required",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabled": {
            "title": "Required",
            "type": "boolean"
          },
          "notificationType": {
            "type": "string",
            "description": "Required\nValid values:\n`InvoiceCalculationStarted`,\n`InvoiceCalculationFinished`,\n`CurUpdatedAfterInvoice`.\n`AccountBudgetAlert`."
          },
          "account": {
            "$ref": "#/components/schemas/adminv1NotificationAccount"
          }
        },
        "description": "Request message for the Admin.UpdateNotificationTypeChannels rpc."
      },
      "AdminUpdateNotificationChannelBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Required. Name of the notification channel."
          },
          "type": {
            "type": "string",
            "description": "Required. Valid values: `email`, `slack`, `msteams`."
          },
          "email": {
            "$ref": "#/components/schemas/apiEmailChannel"
          },
          "slack": {
            "$ref": "#/components/schemas/apiSlackChannel"
          },
          "msteams": {
            "$ref": "#/components/schemas/apiMSTeamsChannel"
          },
          "product": {
            "type": "string",
            "description": "Optional. For Octo use only: `octo`."
          }
        },
        "description": "Request message for the Admin.UpdateNotificationChannel rpc."
      },
      "AllocateAdjustmentEntryRequestAccountConfig": {
        "title": "AccountConfig",
        "required": [
          "amount",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Required. accountId",
            "type": "string"
          },
          "amount": {
            "type": "number",
            "description": "Required.",
            "format": "double"
          }
        }
      },
      "ApplyAdjustmentEntryRequestApplySetting": {
        "title": "AdjustmentSetting",
        "type": "object",
        "properties": {
          "month": {
            "type": "string",
            "description": "Optional. apply to month. The UTC month to query. If empty, defaults to current month. Format is `yyyymm`. For example, June 2021 will be `202106`."
          },
          "taxFree": {
            "type": "boolean",
            "description": "Optional. tax free setting."
          },
          "exchangeRate": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "description": "Optional. exchange rate. \n\nAt the moment, only `jpy`,`idr`,`myr`,`sgd`,`inr` is supported.\nIt will be configured according to the currency type of the billing group associated with the account.\nFor example: {\"jpy\":150.01, \"idr\":16580,\"myr\":4.4,\"sgd\":1.33,\"inr\":85.3}"
          },
          "billingInternalId": {
            "type": "string",
            "description": "Optional. apply to billing internal ID.\nWhen you specify billing internal ID, the invoicing will be applied to the target Billing Group.\nAt the moment, only `aws` is supported."
          }
        }
      },
      "BillingAllocateAdjustmentEntryBody": {
        "required": [
          "accountForRemaining",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "type": "array",
            "description": "Required.",
            "items": {
              "$ref": "#/components/schemas/AllocateAdjustmentEntryRequestAccountConfig"
            }
          },
          "accountForRemaining": {
            "title": "Required. accountId",
            "type": "string"
          }
        },
        "description": "Request message for the Billing.AllocateAdjustmentEntry rpc."
      },
      "BillingApplyAdjustmentEntryBody": {
        "required": [
          "entries",
          "setting"
        ],
        "type": "object",
        "properties": {
          "setting": {
            "$ref": "#/components/schemas/ApplyAdjustmentEntryRequestApplySetting"
          },
          "entries": {
            "type": "array",
            "description": "Required. List of id.\n\nRegarding entries that can be included.\n- Regular entry\n- Splitted entry\n- Allocated entry\nRegarding entries that cannot be included.\n- Original entry before being split\n- Original entry before being allocate",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Request message for the Billing.ApplyAdjustmentEntry rpc."
      },
      "BillingConvertInvoiceToPdfBody": {
        "type": "object",
        "properties": {
          "billinggroups": {
            "title": "billingInternalId of invoice to download\nignored if allBillingGroups is set to true",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allBillingGroups": {
            "title": "If true, download all created invoice",
            "type": "boolean"
          }
        }
      },
      "BillingCreateAccountInvoiceServiceDiscountsBody": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "description": "Required.",
            "items": {
              "$ref": "#/components/schemas/v1AccountServiceDiscounts"
            }
          }
        },
        "description": "Request message for the CreateAccountInvoiceServiceDiscounts rpc."
      },
      "BillingCreateAdjustmentConfigBody": {
        "type": "object",
        "properties": {
          "config": {
            "type": "array",
            "description": "Required. \nA list of filtering options. See [api.ConfigFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.",
            "items": {
              "$ref": "#/components/schemas/apiConfigFilters"
            }
          },
          "accounts": {
            "type": "array",
            "description": "Optional.",
            "items": {
              "$ref": "#/components/schemas/apiManagementAccount"
            }
          }
        },
        "description": "Request message for the Billing.CreateAdjustmentConfig rpc."
      },
      "BillingCreateBillingGroupInvoiceServiceDiscountsBody": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Required.\n\nService discount id."
          }
        },
        "description": "Request message for the CreateBillingGroupInvoiceServiceDiscounts rpc."
      },
      "BillingCreateInvoiceBody": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string",
            "description": "Required. At the moment, only `aws` is supported."
          },
          "allGroups": {
            "type": "boolean",
            "description": "Optional. You can set all billing groups.\n\nIf this parameter is not set, The list set to `groups` is used."
          },
          "groups": {
            "title": "Optional. You can set it to a list of billing internal group id",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Request message for the CreateInvoice rpc."
      },
      "BillingCreateInvoiceWithSettingsBody": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string",
            "description": "Required. At the moment, only `aws` is supported."
          },
          "allGroups": {
            "type": "boolean",
            "description": "Optional. You can set all billing groups.\n\nIf true the setting would be apply to all group."
          },
          "groups": {
            "type": "array",
            "description": "Optional. groups to apply the invoices setting\nthis is ignored if allGroups is true.",
            "items": {
              "type": "string"
            }
          },
          "invoiceSetting": {
            "$ref": "#/components/schemas/billingv1InvoiceSettings"
          }
        }
      },
      "BillingExportInvoiceFileBody": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Optional.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group or a comma-separated list of groups. ex) `group1,group2`. if want to set all group, set `*`. \n\nImplied as the parent billing group for Wave(Pro) users."
          }
        },
        "description": "Request message for the ExportCostFiltersFile rpc."
      },
      "BillingGetInvoiceBody": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Required.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group\n\nImplied as the parent billing group for Wave(Pro) users."
          }
        },
        "description": "Request message for the Cost.GetInvoiceRequest rpc."
      },
      "BillingListAccountInvoiceServiceDiscountsBody": {
        "type": "object",
        "description": "Request message for the ListAccountInvoiceServiceDiscounts rpc."
      },
      "BillingListInvoiceStatusBody": {
        "type": "object",
        "description": "Request message for the ListInvoiceStatus rpc."
      },
      "BillingListUsageCostsDriftBody": {
        "type": "object",
        "properties": {
          "billingInternalId": {
            "type": "string",
            "description": "Optional. If empty, returns all billing groups."
          },
          "month": {
            "type": "string",
            "description": "Optional. If empty, defaults to current UTC month. Format: yyyymm."
          }
        },
        "description": "Request message for the Billing.ListUsageCostsDrift rpc."
      },
      "BillingReadAdjustmentEntriesBody": {
        "type": "object",
        "properties": {
          "month": {
            "type": "string",
            "description": "Optional. The UTC month to query. If empty, defaults to current month. Format is `yyyymm`. For example, June 2021 will be `202106`."
          }
        },
        "description": "Request message for the Billing.ReadAdjustmentEntries rpc."
      },
      "BillingReadInvoiceAdjustmentsBody": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Required."
          },
          "month": {
            "type": "string",
            "description": "Optional. The UTC month to query. If empty, defaults to current month. Format is `yyyymm`. For example, June 2021 will be `202106`."
          },
          "feeType": {
            "type": "string",
            "description": "Optional. If empty, defaults to all fee type. At the moment, only `Fee`,`Refund`,`Credit`,`SppDiscount`,`EdpDiscount`,`BundledDiscount` is supported."
          }
        },
        "description": "Request message for the Billing.ReadInvoiceAdjustments rpc."
      },
      "BillingReadServiceDiscountsServicesBody": {
        "type": "object",
        "description": "Request message for the ReadServiceDiscountsServices rpc."
      },
      "BillingReadUntaggedGroupsBody": {
        "type": "object",
        "properties": {
          "fieldMask": {
            "type": "string",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto"
          }
        },
        "description": "Request message for the Billing.ReadUntaggedGroups rpc."
      },
      "BillingRemoveAccountInvoiceServiceDiscountsBody": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "description": "Required.",
            "items": {
              "$ref": "#/components/schemas/v1AccountServiceDiscounts"
            }
          }
        }
      },
      "BillingRestoreAdjustmentEntryBody": {
        "required": [
          "entries"
        ],
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "description": "Required. List of AdjustmentEntry IDs.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Request message for the Billing.RestoreAdjustmentEntry rpc."
      },
      "BillingRestoreAllocateAdjustmentEntryBody": {
        "type": "object",
        "description": "Request message for the Billing.RestoreAllocateAdjustmentEntry rpc."
      },
      "BillingRestoreSplitAdjustmentEntryBody": {
        "type": "object",
        "description": "Request message for the Billing.RestoreSplitAdjustmentEntry rpc."
      },
      "BillingSaveInvoiceSettingsBody": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string",
            "description": "Required. At the moment, only `aws` is supported."
          },
          "allGroups": {
            "type": "boolean",
            "description": "Optional. You can set all billing groups.\n\nIf true the setting would be apply to all group."
          },
          "groups": {
            "type": "array",
            "description": "Optional. groups to apply the invoices setting\nthis is ignored if allGroups is true.",
            "items": {
              "type": "string"
            }
          },
          "invoiceSetting": {
            "$ref": "#/components/schemas/billingv1InvoiceSettings"
          }
        }
      },
      "BillingSetBillingGroupExchangeRateBody": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Required. account(payer) id."
          },
          "currency": {
            "title": "Required. currency. (e.g. usd, jpy, myr, idr)",
            "type": "string"
          },
          "exchangeRate": {
            "title": "Required. exchangerate. the value of 1 usd per currency above\nExample: If the invoice currency is \"jpy\" and 1 USD = 150 jpy, exchangeRate = 150",
            "type": "number",
            "format": "double"
          }
        },
        "description": "Request message for SetBillingGroupExchangeRate rpc."
      },
      "BillingSetCustomizedBillingServiceBillingGroupBody": {
        "required": [
          "setting"
        ],
        "type": "object",
        "properties": {
          "setting": {
            "type": "array",
            "description": "Required. customized billing service setting.",
            "items": {
              "$ref": "#/components/schemas/v1SetCustomizedBillingServiceBillingGroupRequestCustomizedBillingServiceBillingSetting"
            }
          }
        },
        "description": "Request message for the Billing.SetCustomizedBillingServiceBillingGroup rpc."
      },
      "BillingSetGlobalExchangeRateBody": {
        "type": "object",
        "properties": {
          "currency": {
            "title": "Required. currency. (e.g. usd, jpy, myr, idr)",
            "type": "string"
          },
          "exchangeRate": {
            "title": "Required. exchangerate. the value of 1 usd per currency above\nExample: If the invoice currency is \"jpy\" and 1 USD = 150 jpy, exchangeRate = 150",
            "type": "number",
            "format": "double"
          }
        },
        "description": "Request message for SetGlobalExchangeRate rpc."
      },
      "BillingSetPayerExchangeRateBody": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string",
            "description": "Required. vendor."
          },
          "accountId": {
            "type": "string",
            "description": "Required. account(payer) id."
          },
          "currency": {
            "title": "Required. currency. (e.g. usd, jpy, myr, idr)",
            "type": "string"
          },
          "exchangeRate": {
            "title": "Required. exchangerate. the value of 1 usd per currency above\nExample: If the invoice currency is \"jpy\" and 1 USD = 150 jpy, exchangeRate = 150",
            "type": "number",
            "format": "double"
          }
        },
        "description": "Request message for SetPayerExchangeRate rpc."
      },
      "BillingSplitAdjustmentEntryBody": {
        "required": [
          "startMonth"
        ],
        "type": "object",
        "properties": {
          "startMonth": {
            "type": "string",
            "description": "Required. The UTC month to query. If empty, defaults to current month. Format is `yyyymmdd`. For example, June 2021 will be `20210601`."
          }
        },
        "description": "Request message for the Billing.SplitAdjustmentEntry rpc."
      },
      "BillingUpdateAccessGroupBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Optional. access group name. Set only the name to be changed.\n\nWe recommend the name length of 1~60 characters."
          },
          "description": {
            "type": "string",
            "description": "Optional. access group description. Set only the description to be changed.\n\nWe recommend the description length of 0~150 characters."
          },
          "billingGroups": {
            "type": "array",
            "description": "Optional. Billing group to be included in the access group.\n\nYou can only include billing groups with the same calculation type and currency type.\nSet only the billingGroups to be changed.\nSpecify the billingInternalIds. For example: [`billingInternalId1`,`billingInternalId2`,`billingInternalId3`]",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Request message for the UpdateAccessGroup rpc."
      },
      "BillingUpdateAccountInvoiceServiceDiscountsBody": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "description": "Required.",
            "items": {
              "$ref": "#/components/schemas/v1AccountServiceDiscounts"
            }
          }
        },
        "description": "Request message for the UpdateAccountInvoiceServiceDiscounts rpc."
      },
      "BillingUpdateAdjustmentConfigBody": {
        "type": "object",
        "properties": {
          "config": {
            "type": "array",
            "description": "Optional.",
            "items": {
              "$ref": "#/components/schemas/apiConfigFilters"
            }
          },
          "accounts": {
            "type": "array",
            "description": "Optional.",
            "items": {
              "$ref": "#/components/schemas/apiManagementAccount"
            }
          }
        },
        "description": "Request message for the Billing.UpdateAdjustmentConfig rpc."
      },
      "BillingUpdateAnnouncementBody": {
        "type": "object",
        "properties": {
          "announcement": {
            "$ref": "#/components/schemas/v1CreateAnnouncementRequest"
          }
        }
      },
      "BillingUpdateAnnouncementDateBody": {
        "type": "object",
        "properties": {
          "date": {
            "title": "Required. Announcement date (epoch time)",
            "type": "string",
            "format": "int64"
          }
        }
      },
      "BillingUpdateBillingGroupAccountSupportPlanBody": {
        "required": [
          "updateMask"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Optional. The enabled indicates whether the account support plan is enabled or disabled."
          },
          "setting": {
            "type": "array",
            "description": "Optional. The support plan setting. [blueapi.api.ripple.v1.BillingGroupAccountSupportPlan].",
            "items": {
              "$ref": "#/components/schemas/v1BillingGroupAccountSupportPlan"
            }
          },
          "updateMask": {
            "type": "string",
            "description": "Required.\nIf the `enabled` is set, only the `enabled` will be updated. If you want to update all values, please set both `enabled` and `setting`."
          }
        },
        "description": "Request message for the UpdateBillingGroupAccountSupportPlan rpc."
      },
      "BillingUpdateBillingGroupAdditionalChargesBody": {
        "required": [
          "aws",
          "azure",
          "gcp"
        ],
        "type": "object",
        "properties": {
          "aws": {
            "type": "array",
            "description": "Required. customized billing service setting.",
            "items": {
              "$ref": "#/components/schemas/v1UpdateBillingGroupAdditionalChargesRequestCustomizedBillingServiceBillingSetting"
            }
          },
          "azure": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1UpdateBillingGroupAdditionalChargesRequestCustomizedBillingServiceBillingSetting"
            }
          },
          "gcp": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1UpdateBillingGroupAdditionalChargesRequestCustomizedBillingServiceBillingSetting"
            }
          }
        }
      },
      "BillingUpdateBillingGroupBasicInformationBody": {
        "type": "object",
        "properties": {
          "basicInformation": {
            "$ref": "#/components/schemas/v1BasicInformation"
          }
        }
      },
      "BillingUpdateBillingGroupCustomFieldsBody": {
        "type": "object",
        "properties": {
          "idToKey": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BillingUpdateBillingGroupFreeFormatBody": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1FreeFormItem"
            }
          }
        }
      },
      "BillingUpdateBillingGroupInvoiceServiceDiscountsBody": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Required.\n\nService discount id."
          }
        },
        "description": "Request message for the UpdateBillingGroupInvoiceServiceDiscounts rpc."
      },
      "BillingUpdateBillingGroupInvoiceSettingsBody": {
        "type": "object",
        "properties": {
          "billingTitle": {
            "type": "string"
          },
          "calculationType": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "BillingUpdateBillingGroupInvoiceTemplateBody": {
        "title": "Request a message to update/create a billing group's invoice template",
        "required": [
          "invoiceTemplateId"
        ],
        "type": "object",
        "properties": {
          "invoiceTemplateId": {
            "title": "Required. The invoice template ID to associate with the billing group",
            "type": "string"
          }
        }
      },
      "BillingUpdateBillingGroupLinkedResourcesBody": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string"
          },
          "selectionMethod": {
            "type": "string"
          },
          "accounts": {
            "title": "Account settings",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1AccountToAdd"
            }
          },
          "settings": {
            "title": "Tag settings for different customer accounts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1TagSetting"
            }
          },
          "nonTagSetting": {
            "$ref": "#/components/schemas/v1NonTagSetting"
          }
        }
      },
      "BillingUpdateBillingGroupResellerChargesBody": {
        "type": "object",
        "properties": {
          "invoiceTemplate": {
            "type": "string"
          },
          "invoice": {
            "$ref": "#/components/schemas/v1CreateBillingGroupRequestInvoice"
          }
        }
      },
      "BillingUpdateCustomFieldBody": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "BillingUpdateCustomizedBillingServiceBody": {
        "required": [
          "customizedBillingService",
          "updateMask"
        ],
        "type": "object",
        "properties": {
          "customizedBillingService": {
            "$ref": "#/components/schemas/rippleCustomizedBillingService"
          },
          "updateMask": {
            "type": "string",
            "description": "Required. Indicates which fields in the provided CustomizedBillingService to update. Must be\nspecified and non-empty."
          }
        },
        "description": "Request message for the Billing.UpdateCustomizedBillingService rpc."
      },
      "BillingUpdateInvoiceExchangeRateBody": {
        "type": "object",
        "properties": {
          "vendor": {
            "title": "Required. vendor (aws, gcp, or azure)",
            "type": "string"
          },
          "exchangeRate": {
            "title": "Required. Map of currency code to exchange rate value per USD\nex. jpy:100",
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          },
          "groupIds": {
            "title": "Required. Billing group id to apply",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BillingUpdateInvoicePreviewsBody": {
        "type": "object",
        "properties": {
          "allGroups": {
            "type": "boolean",
            "description": "Optional. You can set all billing groups.\n\nIf this parameter is not set, The list set to `groups` is used."
          },
          "groups": {
            "title": "Optional. You can set it to a list of billing internal group id",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabled": {
            "type": "boolean",
            "description": "Required. You can set display or hiding.\n\nIf true, Hiding Invoice. If false, Display Invoice."
          }
        },
        "description": "Request message for the UpdateInvoicePreviews rpc."
      },
      "BillingUpdateInvoiceServiceDiscountsBody": {
        "required": [
          "invoiceServiceDiscounts",
          "updateMask"
        ],
        "type": "object",
        "properties": {
          "invoiceServiceDiscounts": {
            "$ref": "#/components/schemas/apiripplev1InvoiceServiceDiscounts"
          },
          "updateMask": {
            "type": "string",
            "description": "Required. Indicates which fields in the provided InvoiceServiceDiscounts to update. Must be\nspecified and non-empty."
          }
        },
        "description": "Request message for the Billing.UpdateInvoiceServiceDiscounts rpc."
      },
      "BillingUpdateNonTagGroupToBillingGroupBody": {
        "title": "Request message for updating non-tag group settings for a billing group for UpdateNonTagGroupToBillingGroup",
        "type": "object",
        "properties": {
          "settings": {
            "title": "Required. The settings to update",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1NonTagGroupSetting"
            }
          }
        }
      },
      "BillingUpdateResellerBody": {
        "required": [
          "updateMask"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Optional."
          },
          "password": {
            "type": "string",
            "description": "Optional.\n\nWe recommend a password length of 8~32 characters. If you send 0 characters, a password will be generated automatically."
          },
          "waveConfig": {
            "title": "Optional. wave feature config",
            "type": "array",
            "description": "Set only the config to be changed.\nFor example, If you want to change only dashboardGraph, set `{\"waveConfig\": [{\"key\": \"dashboardGraph\",\"value\": true}]}` as a parameter",
            "items": {
              "$ref": "#/components/schemas/rippleResellerConfig"
            }
          },
          "aquaConfig": {
            "title": "Optional. aqua feature config",
            "type": "array",
            "description": "Set only the config to be changed.\nFor example, If you want to change only aqRiManagement, set `{\"waveConfig\": [{\"key\": \"aqRiManagement\",\"value\": true}]}` as a parameter",
            "items": {
              "$ref": "#/components/schemas/rippleResellerConfig"
            }
          },
          "notification": {
            "type": "boolean",
            "description": "Optional.\n\nIf valid when email or password is updated, you will be notified via email address.\nIf only waveConfig or aquaConfig is changed, it is ignored."
          },
          "updateMask": {
            "type": "string",
            "description": "Required."
          }
        },
        "description": "Request message for the UpdateReseller rpc."
      },
      "BillingUpdateTagsAddingSettingBody": {
        "title": "BillingGroup tags adding setting",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1TagsAddingSetting"
            }
          }
        }
      },
      "ContainerCostUsageRequestFilterCriteria": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "operator": {
            "$ref": "#/components/schemas/FilterCriteriaFilterOperator"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "ContainerCostUsageRequestMetricType": {
        "type": "string",
        "default": "METRIC_UNSPECIFIED",
        "enum": [
          "METRIC_UNSPECIFIED",
          "COST",
          "USAGE",
          "EFFICIENCY",
          "UNUSED_COST"
        ]
      },
      "ContainerCostUsageRequestServiceType": {
        "type": "string",
        "default": "SERVICE_UNSPECIFIED",
        "enum": [
          "SERVICE_UNSPECIFIED",
          "ECS",
          "EKS"
        ]
      },
      "ContainerCostUsageRequestTimeGranularity": {
        "type": "string",
        "default": "GRANULARITY_UNSPECIFIED",
        "enum": [
          "GRANULARITY_UNSPECIFIED",
          "DAILY",
          "MONTHLY"
        ]
      },
      "ContainerCostUsageResponseCostMetric": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string"
          },
          "unusedAmount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ContainerCostUsageResponseGroupedResult": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "metricDataPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContainerCostUsageResponseMetricDataPoint"
            }
          }
        }
      },
      "ContainerCostUsageResponseMetricDataPoint": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "cost": {
            "$ref": "#/components/schemas/ContainerCostUsageResponseCostMetric"
          },
          "usage": {
            "$ref": "#/components/schemas/ContainerCostUsageResponseUsageMetric"
          }
        }
      },
      "ContainerCostUsageResponseResourceHighlight": {
        "type": "object",
        "properties": {
          "resourceId": {
            "type": "string"
          },
          "resourceName": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ContainerCostUsageResponseResourceHighlights": {
        "type": "object",
        "properties": {
          "highestClusterCost": {
            "$ref": "#/components/schemas/ContainerCostUsageResponseResourceHighlight"
          },
          "highestUnusedCost": {
            "$ref": "#/components/schemas/ContainerCostUsageResponseResourceHighlight"
          },
          "highestWorkloadCost": {
            "$ref": "#/components/schemas/ContainerCostUsageResponseResourceHighlight"
          },
          "highestComputeCost": {
            "$ref": "#/components/schemas/ContainerCostUsageResponseResourceHighlight"
          }
        }
      },
      "ContainerCostUsageResponseUsageMetric": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string"
          },
          "reservedAmount": {
            "type": "number",
            "format": "double"
          },
          "actualAmount": {
            "type": "number",
            "format": "double"
          },
          "efficiency": {
            "type": "number",
            "format": "double"
          },
          "cpuUtilization": {
            "type": "number",
            "format": "double"
          },
          "memoryUtilization": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CostCalculateCostsBody": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Optional. A comma-separated list of billing internal ids. If empty, calculate for all billing groups.\n\nAt the moment, for AWS, this is only valid for account type billing groups, not tag billing groups. If a tag billing group is provided, it is discarded and the calculation is done for the whole organization."
          },
          "month": {
            "type": "string",
            "description": "Optional. The UTC month to calculate. If empty, it defaults to the previous month. Format is `yyyymm`. For example, June 2021 will be `202106`."
          },
          "awsOptions": {
            "$ref": "#/components/schemas/v1CalculateCostsRequestAwsOptions"
          }
        },
        "description": "Request message for the Cost.CalculateCosts rpc."
      },
      "CostCalculationEstimatedDiscounts": {
        "type": "object",
        "properties": {
          "reservedInstancesDiscount": {
            "type": "number",
            "format": "double"
          },
          "savingsPlansDiscount": {
            "type": "number",
            "format": "double"
          },
          "otherDiscount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CostCheckAccountsBelongToMspBody": {
        "type": "object",
        "properties": {
          "accountIds": {
            "type": "array",
            "description": "Required. A comma-separated list of account ids. For example, you set to [\"accountId1\",\"accountId2\",\"accountId3\"].",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CostCreateAccountBody": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Required. The account id to register."
          },
          "name": {
            "type": "string",
            "description": "Optional. If empty, set to the value of `id`."
          },
          "parent": {
            "type": "string",
            "description": "Optional. The parent `billingInternalId` of the billing group to which this account will belong to."
          },
          "awsOptions": {
            "$ref": "#/components/schemas/v1CreateAccountRequestAwsOptions"
          },
          "gcpOptions": {
            "$ref": "#/components/schemas/v1CreateAccountRequestGcpOptions"
          }
        },
        "description": "Request message for the Cost.CreateAccount rpc."
      },
      "CostCreateAccountBudgetAlertsBody": {
        "title": "Request message for CreateAccountBudgetAlerts",
        "type": "object",
        "properties": {
          "budgetAlert": {
            "$ref": "#/components/schemas/apiwaveBudgetAlert"
          }
        }
      },
      "CostCreateAccountBudgetBody": {
        "title": "Request message for CreateAccountBudget",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/blueapiapiBudget"
          }
        }
      },
      "CostCreateCalculationsScheduleBody": {
        "type": "object",
        "properties": {
          "schedule": {
            "type": "string",
            "description": "Required. The desired schedule in UTC, using the unix-cron string format `* * * * *` which is a set of five fields in a line using the order: `minute hour day-of-the-month month day-of-the-week`.\n\n* `minute` values can be `0-59`\n* `hour` values can be `0-23`\n* `day-of-the-month` values can be `1-31`\n* `month` values can be `1-12`, or `JAN-DEC`\n* `day-of-the-week` values can be `0-6`, or `SUN-SAT`, or `7` for Sunday\n\nSpecial characters:\n* A field can contain an asterisk (*), which always stands for \"first-last\".\n* Ranges are two numbers separated with a hyphen (-) and the specified range is inclusive.\n* Following a range with `/NUMBER` specifies skips of the number's value through the range. For example, both `0-23/2` and `*/2` can be used in the `hour` field to specify execution every two hours.\n* A list is a set of numbers (or ranges) separated by commas (,). For example, `1,2,5,6` in the `month` field specifies an execution on the first, second, fifth, and sixth days of the month."
          },
          "scheduleMacro": {
            "type": "string",
            "description": "Optional. Non-standard macro(s) that augment(s) `schedule`'s behavior. The only supported value for now is `@endofmonth`.\n\n`@endofmonth` - If set, the backend scheduler will only use the `minute` and `hour` part of `schedule`'s value and set the days to 28th, 29th, 30th, and 31st but the runner will do the filtering for the actual end of the trigger month. Note that this is different than setting `schedule` to, say, `0 0 28-31 * *`."
          },
          "targetMonth": {
            "type": "string",
            "description": "Optional. The desired month to calculate. If not set, defaults to previous month. The only supported value for now is `@current`.\n\n`@current` - If set, calculate for the month the schedule is triggered (or current month)."
          },
          "notificationChannel": {
            "type": "string",
            "description": "Optional. The channel id to use for notifications. At the moment, only email-type notification channels are supported. If not set, your default channel will be used. And if non-existent, an email-type notification channel will be created using your primary email address."
          },
          "force": {
            "type": "boolean",
            "description": "Optional. Not used at the moment."
          },
          "dryRun": {
            "type": "boolean",
            "description": "Optional. If set to true, skips the actual calculations. Useful as test, or reminder."
          }
        },
        "description": "Request message for the Cost.CreateCalculationsSchedule rpc."
      },
      "CostCreateCalculatorCostModifierBody": {
        "type": "object",
        "properties": {
          "awsOptions": {
            "$ref": "#/components/schemas/v1CalculatorCostModifierAwsOptions"
          },
          "azureOptions": {
            "$ref": "#/components/schemas/v1CalculatorCostModifierAzureOptions"
          }
        },
        "description": "Request message for the Cost.CreateCalculatorCostModifier rpc."
      },
      "CostCreateCostFiltersBody": {
        "type": "object",
        "properties": {
          "filterName": {
            "title": "Required. Filter Name. Specify characters between 1 ~ 100",
            "type": "string"
          },
          "groupId": {
            "type": "string",
            "description": "Required. If set, reads the usage-based cost details of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.\n\nFor AWS Ripple, only billing internal ids are supported at the moment. Overriden when `accountId` is set to anything other than `*`. Set this and `accountId` to `*` to read the usage-based cost details of the whole organization. Optional for AWS Wave(Pro)."
          },
          "accountId": {
            "type": "string",
            "description": "Required. You can set it to a single account or a comma-separated list of accounts.\n\nFor AWS, setting this will override `groupId`. Set this and `groupId` to `*` to read the usage-based cost details of the whole organization."
          },
          "awsOptions": {
            "$ref": "#/components/schemas/v1ReadCostsRequestAwsOptions"
          }
        },
        "description": "Request message for the CreateCostFilters rpc."
      },
      "CostCreatePayerAccountBody": {
        "type": "object",
        "properties": {
          "awsOptions": {
            "$ref": "#/components/schemas/v1CreatePayerAccountRequestAwsOptions"
          }
        },
        "description": "Request message for the Cost.CreatePayerAccount rpc."
      },
      "CostExplorerRecommendationsDiscountPlans": {
        "type": "object",
        "properties": {
          "paymentOption": {
            "type": "string"
          },
          "term": {
            "type": "string"
          },
          "upfrontCost": {
            "type": "number",
            "format": "double"
          },
          "riOption": {
            "$ref": "#/components/schemas/DiscountPlansRIOption"
          },
          "spOption": {
            "$ref": "#/components/schemas/DiscountPlansSPOption"
          }
        }
      },
      "CostExplorerRecommendationsEC2Rightsize": {
        "type": "object",
        "properties": {
          "currentDetails": {
            "$ref": "#/components/schemas/CostExplorerRecommendationsEC2RightsizeDetails"
          },
          "recommendationDetails": {
            "$ref": "#/components/schemas/CostExplorerRecommendationsEC2RightsizeDetails"
          }
        }
      },
      "CostExplorerRecommendationsEC2RightsizeDetails": {
        "type": "object",
        "properties": {
          "monthlyCost": {
            "type": "number",
            "format": "double"
          },
          "monthlySavingsAmount": {
            "type": "number",
            "format": "double"
          },
          "monthlySavingsPercentage": {
            "type": "number",
            "format": "double"
          },
          "ec2Details": {
            "$ref": "#/components/schemas/awsAWSResourceDetailsEC2Details"
          }
        }
      },
      "CostExplorerRecommendationsTerminateEC2": {
        "type": "object",
        "properties": {
          "ec2Details": {
            "$ref": "#/components/schemas/awsAWSResourceDetailsEC2Details"
          },
          "monthlyCost": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CostExportCostFiltersFileBody": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "description": "Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`. The oldest supported date is `20200101`."
          },
          "endTime": {
            "type": "string",
            "description": "Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmd`."
          },
          "groupByMonth": {
            "type": "boolean",
            "description": "Optional. If set to true, return data grouped by month within the date range. If you want data that is grouped per account per month, set this to `true`, then set `groupByColumns` to `none`."
          },
          "groupByColumns": {
            "type": "string",
            "description": "Optional. A comma-separated list of columns to aggregate the data into. Valid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, and `resourceId`. A special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and region data, you can set this field to `productCode,region`. Your input sequence doesn't matter (although the sequence above is recommended) as the actual sequence is already fixed in the return data (see the definition in https://github.com/alphauslabs/blueapi/blob/main/api/aws/cost.proto), which is generic to specific, top to bottom. Invalid values are discarded. Excluded columns will be empty."
          },
          "includeTags": {
            "type": "boolean",
            "description": "Optional. If set to true, stream will include resource tags."
          }
        },
        "description": "Request message for the ExportCostFiltersFile rpc."
      },
      "CostGetCostReductionBody": {
        "title": "Request message for GetCostReduction",
        "type": "object",
        "properties": {
          "reductionDisplay": {
            "title": "Required. Valid values: 'all', 'reservation', 'savingsplan'",
            "type": "string"
          },
          "includeDetails": {
            "type": "boolean",
            "description": "Optional. If set to \"true\", details of the RI or SP list is returned. Default: false."
          },
          "fromDate": {
            "type": "string",
            "description": "Optional. The start date of the displayed data. If not set, the first day of the current month will be used. Format: yyyy-mm-dd."
          },
          "toDate": {
            "type": "string",
            "description": "Optional. The end date of the displayed data. If not set, current date will be used. Format: yyyy-mm-dd."
          },
          "payerId": {
            "type": "string",
            "description": "Optional. Payer Id."
          },
          "billingInternalId": {
            "type": "string",
            "description": "Optional. Billing group Id."
          },
          "groupId": {
            "type": "string",
            "description": "Optional. Account group Id."
          },
          "costGroupId": {
            "type": "string",
            "description": "Optional. Cost Group Id used in octo."
          },
          "accounts": {
            "type": "array",
            "description": "Optional. List of Account Ids.",
            "items": {
              "type": "string"
            }
          },
          "services": {
            "type": "array",
            "description": "Optional. List of services.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CostGetCoverageOndemandBody": {
        "title": "Request message for GetCoverageOndemand",
        "type": "object",
        "properties": {
          "period": {
            "title": "Required. Available values: day, hour",
            "type": "string"
          },
          "fromDate": {
            "type": "string",
            "description": "Optional. The start date of the displayed data. If not set, the first day of the current month will be used. Format: yyyy-mm-dd."
          },
          "toDate": {
            "type": "string",
            "description": "Optional. The end date of the displayed data. If not set, current date will be used. Format: yyyy-mm-dd."
          },
          "payerId": {
            "type": "string",
            "description": "Optional. Payer Id."
          },
          "billingInternalId": {
            "type": "string",
            "description": "Optional. Billing group Id."
          },
          "groupId": {
            "type": "string",
            "description": "Optional. Account group Id."
          },
          "costGroupId": {
            "title": "Optional. Cost Group Id, currently used in octo",
            "type": "string"
          },
          "accounts": {
            "type": "array",
            "description": "Optional. List of Account Ids.",
            "items": {
              "type": "string"
            }
          },
          "services": {
            "type": "array",
            "description": "Optional. List of services.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CostGetCoverageOptionsBody": {
        "title": "Request message for GetCoverageOptions",
        "type": "object",
        "properties": {
          "period": {
            "type": "string",
            "description": "Required. Available values: day, hour."
          },
          "fromDate": {
            "type": "string",
            "description": "Optional. The start date of the displayed data. If not set, the first day of the current month will be used. Format: yyyy-mm-dd."
          },
          "toDate": {
            "type": "string",
            "description": "Optional. The end date of the displayed data. If not set, current date will be used. Format: yyyy-mm-dd."
          },
          "payerId": {
            "type": "string",
            "description": "Optional. Payer Id."
          },
          "billingInternalId": {
            "type": "string",
            "description": "Optional. Billing group Id."
          },
          "groupId": {
            "type": "string",
            "description": "Optional. Account group Id."
          },
          "costGroupId": {
            "title": "Optional. Cost Group Id",
            "type": "string"
          },
          "accounts": {
            "type": "array",
            "description": "Optional. List of Account Ids.",
            "items": {
              "type": "string"
            }
          },
          "services": {
            "type": "array",
            "description": "Optional. List of services.",
            "items": {
              "type": "string"
            }
          },
          "currency": {
            "type": "string",
            "description": "Optional. If not set, default value is `USD`."
          }
        }
      },
      "CostGetRecommendationsBody": {
        "title": "Request message for GetRecommendations",
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "description": "Required. List of Account Ids.",
            "items": {
              "type": "string"
            }
          },
          "costGroupId": {
            "type": "string",
            "description": "Required. For OCTO only."
          },
          "awsOptions": {
            "$ref": "#/components/schemas/v1GetRecommendationsRequestAwsOptions"
          }
        }
      },
      "CostListCalculatorRunningAccountsBody": {
        "type": "object",
        "properties": {
          "month": {
            "type": "string",
            "description": "Optional. The UTC month to query. Defaults to current month if empty. Format is `yyyymm`. For example, June 2021 will be `202106`."
          }
        },
        "description": "Request message for the Cost.ListCalculatorRunningAccounts rpc."
      },
      "CostOptimizationHubRecommendationsDetailsCostCalculation": {
        "type": "object",
        "properties": {
          "estimatedCostAfterDiscount": {
            "type": "number",
            "format": "double"
          },
          "estimatedCostBeforeDiscount": {
            "type": "number",
            "format": "double"
          },
          "estimatedNetUnusedAmortizedCommitments": {
            "type": "number",
            "format": "double"
          },
          "estimatedDiscounts": {
            "$ref": "#/components/schemas/CostCalculationEstimatedDiscounts"
          },
          "usageTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetailsCostCalculationUsageTypes"
            }
          }
        }
      },
      "CostReadAccountOriginalResourcesBody": {
        "type": "object",
        "description": "Request message for the ReadAccountOriginalResources rpc."
      },
      "CostReadAdjustmentsBody": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Optional. At the moment, only billing internal ids are supported. If set, reads the non-usage-based adjustment details of this group. Valid only if `accountId` is not set. If both `groupId` and `accountId` are not set, reads the adjustment details of the whole organization. Only valid for Ripple users. Implied (or discarded) for Wave(Pro) users."
          },
          "accountId": {
            "type": "string",
            "description": "Optional. If set, reads the non-usaged-based adjustment details of this account. Also invalidates the `groupId` value even if set. If both `groupId` and `accountId` are not set, reads the adjustment details of the whole organization."
          },
          "startTime": {
            "type": "string",
            "description": "Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`."
          },
          "endTime": {
            "type": "string",
            "description": "Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`."
          },
          "awsOptions": {
            "$ref": "#/components/schemas/v1ReadAdjustmentsRequestAwsOptions"
          }
        },
        "description": "Request message for the Cost.ReadAdjustments rpc."
      },
      "CostReadCostAttributesBody": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Optional. If set, reads the cost attributes of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.\n\nFor AWS Ripple, only billing internal ids are supported at the moment. Overriden when `accountId` is set to anything other than `*`. Set this and `accountId` to `*` to read the cost attributes of the whole organization. Optional for AWS Wave(Pro)."
          },
          "accountId": {
            "type": "string",
            "description": "Optional. You can set it to a single account or a comma-separated list of accounts.\n\nFor AWS, setting this will override `groupId`. Set this and `groupId` to `*` to read the cost attributes of the whole organization."
          },
          "startTime": {
            "type": "string",
            "description": "Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`. The oldest supported date is `20200101`."
          },
          "endTime": {
            "type": "string",
            "description": "Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`."
          },
          "awsOptions": {
            "$ref": "#/components/schemas/v1ReadCostAttributesRequestAwsOptions"
          },
          "azureOptions": {
            "$ref": "#/components/schemas/v1ReadCostAttributesRequestAzureOptions"
          }
        },
        "description": "Request message for the Cost.ReadCostAttributes rpc."
      },
      "CostReadCostsBody": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Optional. If set, reads the usage-based cost details of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.\n\nFor AWS Ripple, only billing internal ids are supported at the moment. Overriden when `accountId` is set to anything other than `*`. Set this and `accountId` to `*` to read the usage-based cost details of the whole organization. Optional for AWS Wave(Pro)."
          },
          "accountId": {
            "type": "string",
            "description": "Optional. You can set it to a single account or a comma-separated list of accounts.\n\nFor AWS, setting this will override `groupId`. Set this and `groupId` to `*` to read the usage-based cost details of the whole organization."
          },
          "startTime": {
            "type": "string",
            "description": "Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`. The oldest supported date is `20200101`."
          },
          "endTime": {
            "type": "string",
            "description": "Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`."
          },
          "awsOptions": {
            "$ref": "#/components/schemas/v1ReadCostsRequestAwsOptions"
          },
          "gcpOptions": {
            "$ref": "#/components/schemas/v1ReadCostsRequestGcpOptions"
          },
          "azureOptions": {
            "$ref": "#/components/schemas/v1ReadCostsRequestAzureOptions"
          }
        },
        "description": "Request message for the Cost.ReadCosts rpc."
      },
      "CostReadInvoiceIdsBody": {
        "type": "object",
        "properties": {
          "month": {
            "type": "string",
            "description": "Optional. The UTC month to query. If empty, defaults to current month. Format is `yyyymm`. For example, July 2024 will be `202407`."
          }
        },
        "description": "Request message for the ReadInvoiceIds rpc."
      },
      "CostReadNonTagCostsBody": {
        "type": "object",
        "properties": {
          "billingInternalId": {
            "type": "string",
            "description": "Required. The billing internal id to stream."
          },
          "startTime": {
            "type": "string",
            "description": "Optional. Timestamp to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`."
          },
          "endTime": {
            "type": "string",
            "description": "Optional. Timestamp to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`."
          },
          "groupByMonths": {
            "type": "boolean",
            "description": "Optional. Group services and costs by months in the range of `startTime` and `endTime`. If not set, daily data will be returned."
          }
        },
        "description": "Request message for the Cost.ReadNonTagCosts rpc."
      },
      "CostReadTagCostsBody": {
        "type": "object",
        "properties": {
          "billingInternalId": {
            "type": "string",
            "description": "Required. The billing internal id to stream."
          },
          "startTime": {
            "type": "string",
            "description": "Optional. Timestamp to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`."
          },
          "endTime": {
            "type": "string",
            "description": "Optional. Timestamp to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`."
          },
          "groupByMonths": {
            "type": "boolean",
            "description": "Optional. Group services and costs by months in the range of `startTime` and `endTime`. If not set, daily data will be returned."
          },
          "awsOptions": {
            "$ref": "#/components/schemas/v1ReadTagCostsRequestAwsOptions"
          }
        },
        "description": "Request message for the Cost.ReadTagCosts rpc."
      },
      "CostRegisterPayerAccountBody": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Required. The Payer/Management account Id."
          },
          "name": {
            "type": "string",
            "description": "Optional. Preferred account name, defaults to id if not provided."
          },
          "curType": {
            "type": "string",
            "description": "Optional. Valid values are `legacy` and `2.0` for now. Defaults to `legacy` if not provided.\nOnly applicable if vendor is set to `aws`. Do not provide if `gcp` or `azure`."
          }
        },
        "description": "Request message for the RegisterPayerAccountRequest rpc."
      },
      "CostUpdateAccountBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Optional."
          }
        },
        "description": "Request message for the Cost.UpdateAccount rpc."
      },
      "CostUpdateAccountBudgetAlertsBody": {
        "title": "Request message for UpdateAccountBudgetAlerts",
        "type": "object",
        "properties": {
          "budgetAlert": {
            "$ref": "#/components/schemas/apiwaveBudgetAlert"
          }
        }
      },
      "CostUpdateAccountBudgetBody": {
        "title": "Request message for UpdateAccountBudget",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/blueapiapiBudget"
          }
        }
      },
      "CostUpdateBudgetAlertsBody": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string",
            "description": "Required. At the moment, only `aws` is supported."
          },
          "accounts": {
            "type": "array",
            "description": "Required. Lsit of accountId. For example, you set to [\"accountId1\",\"accountId2\",\"accountId3\"].",
            "items": {
              "type": "string"
            }
          },
          "notification": {
            "$ref": "#/components/schemas/apiBudgetAlertNotification"
          },
          "daily": {
            "$ref": "#/components/schemas/apiDailyBudgetAlert"
          },
          "dailyRate": {
            "$ref": "#/components/schemas/apiDailyRateIncreaseBudgetAlert"
          },
          "monthly": {
            "$ref": "#/components/schemas/apiMonthlyBudgetAlert"
          }
        },
        "description": "Request message for the UpdateBudgetAlerts rpc."
      },
      "CostUpdateCostFiltersBody": {
        "type": "object",
        "properties": {
          "filterName": {
            "title": "Required. Filter Name. Specify characters between 1 ~ 100",
            "type": "string"
          },
          "groupId": {
            "type": "string",
            "description": "Required. If set, reads the usage-based cost details of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.\n\nFor AWS Ripple, only billing internal ids are supported at the moment. Overriden when `accountId` is set to anything other than `*`. Set this and `accountId` to `*` to read the usage-based cost details of the whole organization. Optional for AWS Wave(Pro)."
          },
          "accountId": {
            "type": "string",
            "description": "Required. You can set it to a single account or a comma-separated list of accounts.\n\nFor AWS, setting this will override `groupId`. Set this and `groupId` to `*` to read the usage-based cost details of the whole organization."
          },
          "awsOptions": {
            "$ref": "#/components/schemas/v1ReadCostsRequestAwsOptions"
          }
        },
        "description": "Request message for the UpdateCostFilters rpc."
      },
      "CoverAddSideMenuFavoriteBody": {
        "title": "Request message for AddSideMenuFavorite",
        "type": "object",
        "properties": {
          "menuItemId": {
            "type": "string"
          }
        }
      },
      "CoverAssignCostGroupMemberBody": {
        "title": "Request message for AssignCostGroupMember",
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Required. User Id."
          }
        }
      },
      "CoverAssignPayerBody": {
        "title": "Request message for AssignPayer",
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Required. Account Id."
          },
          "payerId": {
            "type": "string",
            "description": "Required. The Payer Id."
          }
        }
      },
      "CoverModifyResourceTypeBody": {
        "title": "Request message for ModifyResourceType",
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Required. Account Id."
          },
          "resourceId": {
            "type": "string",
            "description": "Required. The resource Id."
          },
          "resourceType": {
            "type": "string",
            "description": "Required. The recommended resource type."
          },
          "region": {
            "type": "string",
            "description": "Required. Resource region."
          }
        }
      },
      "CoverRegisterAccountBody": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Required. The AWS account Id."
          },
          "accountName": {
            "title": "The account name",
            "type": "string"
          }
        },
        "description": "Request message for the RegisterAccount rpc."
      },
      "CoverRemoveCostGroupMemberBody": {
        "title": "Request message for RemoveCostGroupMember",
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Required. User Id."
          }
        }
      },
      "CoverRemoveSideMenuFavoriteBody": {
        "title": "Request message for RemoveSideMenuFavorite",
        "type": "object",
        "properties": {
          "menuItemId": {
            "type": "string"
          }
        }
      },
      "CoverSetCostGroupAnomalyOptionsBody": {
        "type": "object",
        "properties": {
          "threshold": {
            "title": "Required",
            "type": "number",
            "format": "float"
          },
          "isPercentage": {
            "type": "boolean",
            "description": "Required. When set to true, the threshold is a percentage to the actual cost. Otherwise, it is a fixed amount."
          },
          "pastDataInMonths": {
            "type": "string",
            "description": "Optional. The number of past months to be used in training the model. Note: This will affect the results of anomaly detection. Default and max is 9 while min is 1.",
            "format": "int64"
          }
        }
      },
      "CoverSetCostGroupEventIndicatorBody": {
        "type": "object",
        "properties": {
          "anomaly": {
            "title": "Required. Only anomaly is supported as of now",
            "type": "boolean"
          },
          "visualBuilder": {
            "title": "Optional. Temporary storage of cost group creation UI preference",
            "type": "boolean"
          }
        }
      },
      "CoverTerminateResourceBody": {
        "title": "Request message for TerminateResource",
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Required. Account Id."
          },
          "resourceId": {
            "type": "string",
            "description": "Required. The resource Id."
          },
          "region": {
            "type": "string",
            "description": "Required. Resource region."
          }
        }
      },
      "CoverUpdateAlertDetailsBody": {
        "title": "Request message for UpdateAlertDetails",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "If optional fields are not supplied, no changes occur.\nOptional."
          },
          "fixedAmount": {
            "type": "number",
            "description": "Both are optional.",
            "format": "float"
          },
          "percentage": {
            "type": "number",
            "format": "float"
          },
          "granularity": {
            "type": "string",
            "description": "Optional. daily or monthly. Only 'daily' is supported for now."
          },
          "costGroups": {
            "type": "array",
            "description": "Optional. Cost group IDs.",
            "items": {
              "type": "string"
            }
          },
          "channels": {
            "type": "array",
            "description": "Optional. Channel IDs.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CoverUpdateAllocatorBody": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "expiration": {
            "type": "string",
            "format": "int64"
          },
          "startMonth": {
            "type": "string",
            "description": "Optional. The starting month of the allocator to be effective."
          },
          "defaultAccount": {
            "type": "string",
            "description": "Optional. The default account for remaining costs. If not set, will allocate the cost to the original account."
          },
          "criteria": {
            "$ref": "#/components/schemas/coverCombinations"
          },
          "allocator": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1Allocator"
            }
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CoverUpdateAnomalyAlertBody": {
        "type": "object",
        "properties": {
          "name": {
            "title": "required. alert name",
            "type": "string"
          },
          "alertEnabled": {
            "type": "boolean",
            "description": "required."
          },
          "notificationChannels": {
            "type": "array",
            "description": "required. Notification Channel Ids.",
            "items": {
              "type": "string"
            }
          },
          "frequency": {
            "type": "string",
            "description": "required. Frequency."
          },
          "costGroupId": {
            "title": "required. cost group id",
            "type": "string"
          }
        }
      },
      "CoverUpdateBudgetBody": {
        "type": "object",
        "properties": {
          "budgetData": {
            "$ref": "#/components/schemas/coverBudgetData"
          }
        }
      },
      "CoverUpdateChannelDetailsBody": {
        "title": "Request message for UpdateChannelDetails",
        "type": "object",
        "properties": {
          "name": {
            "title": "If optional fields are not supplied, no changes occur.\nOptional. Either actual email address or slack/msteams channel name",
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Optional. email, slack, or msteams."
          },
          "webhookUrl": {
            "type": "string",
            "description": "Optional. Only needed for slack and msteams type."
          }
        }
      },
      "CoverUpdateCostGroupColorThemeBody": {
        "title": "Request message for UpdateCostGroupColorTheme",
        "type": "object",
        "properties": {
          "colorTheme": {
            "type": "string",
            "description": "Required. Color Theme."
          }
        }
      },
      "CoverUpdateCostGroupCombinationsBody": {
        "title": "Request message for UpdateCostGroupCombinations",
        "type": "object",
        "properties": {
          "combinations": {
            "$ref": "#/components/schemas/coverCombinations"
          }
        }
      },
      "CoverUpdateCostGroupDescriptionBody": {
        "title": "Request message for UpdateCostGroupDescription",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Required. Description."
          }
        }
      },
      "CoverUpdateCostGroupIconBody": {
        "title": "Request message for UpdateCostGroupIcon",
        "type": "object",
        "properties": {
          "icon": {
            "type": "string",
            "description": "Required. Icon."
          }
        }
      },
      "CoverUpdateCostGroupImageBody": {
        "title": "Request message for UpdateCostGroupImage",
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "Required. Image."
          }
        }
      },
      "CoverUpdateCostGroupNameBody": {
        "title": "Request message for UpdateCostGroupName",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Required. Name."
          }
        }
      },
      "CoverUpdateDataAccessBody": {
        "title": "Request message for UpdateDataAccess (GCP/Azure)",
        "type": "object",
        "properties": {
          "vendor": {
            "title": "GCP or Azure",
            "type": "string"
          },
          "gcpOptions": {
            "$ref": "#/components/schemas/coverGcpOptions"
          },
          "azureOptions": {
            "$ref": "#/components/schemas/apicoverAzureOptions"
          },
          "awsOptions": {
            "$ref": "#/components/schemas/apicoverAwsOptions"
          },
          "accountType": {
            "title": "Account Type",
            "type": "string"
          }
        }
      },
      "CoverUpdateDiscountExpirationAlertBody": {
        "type": "object",
        "properties": {
          "alertEnabled": {
            "type": "boolean",
            "description": "required."
          },
          "channels": {
            "type": "array",
            "description": "required. Notification Channel Ids.",
            "items": {
              "type": "string"
            }
          },
          "frequencies": {
            "type": "array",
            "description": "required. Frequencies.",
            "items": {
              "type": "string",
              "format": "int64"
            }
          },
          "costGroups": {
            "title": "Required. Cost Group Ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "title": "required. Name",
            "type": "string"
          }
        }
      },
      "CoverUpdateMemberPermissionBody": {
        "title": "Request message for UpdateMemberPermission",
        "type": "object",
        "properties": {
          "isAdmin": {
            "type": "boolean",
            "description": "Required. IsAdmin."
          }
        }
      },
      "CoverUpdateSharedResourceBody": {
        "type": "object",
        "properties": {
          "sharedResourceName": {
            "title": "Optional",
            "type": "string"
          },
          "sharedResourcesCombinations": {
            "$ref": "#/components/schemas/coverResourcesCombinations"
          },
          "distribution": {
            "title": "Optional",
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          },
          "allocated": {
            "title": "Optional",
            "type": "number",
            "format": "double"
          },
          "unallocated": {
            "title": "Optional",
            "type": "number",
            "format": "double"
          },
          "description": {
            "title": "Optional",
            "type": "string"
          }
        }
      },
      "CoverUpdateSideMenuStateBody": {
        "title": "Request message for UpdateSideMenuState",
        "type": "object",
        "properties": {
          "sidemenustate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverSideMenuState"
            }
          }
        }
      },
      "CoverUpdateUnitMetricBody": {
        "type": "object",
        "properties": {
          "metricName": {
            "title": "Optional",
            "type": "string"
          },
          "aggregationMethod": {
            "title": "Optional",
            "type": "string"
          },
          "dataSource": {
            "title": "Optional",
            "type": "string"
          },
          "description": {
            "title": "Optional",
            "type": "string"
          },
          "costgroupId": {
            "title": "Optional",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sourceInfo": {
            "$ref": "#/components/schemas/coverSourceInfo"
          }
        }
      },
      "CoverUpdateUnitTypeBody": {
        "type": "object",
        "properties": {
          "unitName": {
            "title": "Optional",
            "type": "string"
          },
          "unitItems": {
            "title": "Optional",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverUnitItem"
            }
          },
          "sharedResources": {
            "title": "Optional",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverSharedResourcesCombination"
            }
          },
          "description": {
            "title": "Optional",
            "type": "string"
          }
        }
      },
      "CoverUpdateUserProfileBody": {
        "title": "Request message for UpdateUserProfile",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "usage": {
            "type": "string"
          },
          "intention": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "linkSource": {
            "type": "string"
          },
          "hasSubscribedUpdates": {
            "type": "boolean"
          }
        }
      },
      "CoverUpdateViewBody": {
        "title": "Request message for UpdateView",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "isPrivate": {
            "type": "boolean"
          },
          "isEditable": {
            "type": "boolean"
          },
          "colorTheme": {
            "type": "string"
          }
        }
      },
      "CoverUpdateViewColorThemeBody": {
        "title": "Request message for UpdateViewColorTheme",
        "type": "object",
        "properties": {
          "colorTheme": {
            "type": "string"
          }
        }
      },
      "CoverUpdateViewCurrencyBody": {
        "title": "Request message for UpdateViewCurrency",
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          }
        }
      },
      "CoverUpdateViewLayoutBody": {
        "title": "Request message for UpdateViewLayout",
        "type": "object",
        "properties": {
          "layout": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverWidgetData"
            }
          }
        }
      },
      "CoverUpdateViewWidgetBody": {
        "title": "Request message for UpdateViewWidget",
        "type": "object",
        "properties": {
          "options": {
            "type": "object",
            "properties": {}
          },
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverLayoutRequests"
            }
          }
        }
      },
      "CsvSettingColumn": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "CurrentEC2DetailsOtherDetails": {
        "type": "object",
        "properties": {
          "exclusionStatus": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          },
          "awsConfigRule": {
            "type": "string"
          },
          "inputParameters": {
            "type": "string"
          }
        }
      },
      "DBInstanceDetailsRDSMetrics": {
        "type": "object",
        "properties": {
          "cpuUtilizationMetrics": {
            "$ref": "#/components/schemas/awsMetricData"
          }
        }
      },
      "DBInstanceDetailsStorage": {
        "type": "object",
        "properties": {
          "allocatedStorageInGb": {
            "type": "number",
            "format": "double"
          },
          "iops": {
            "type": "number",
            "format": "double"
          },
          "storageThroughput": {
            "type": "number",
            "format": "double"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "DetailsCostCalculationUsageTypes": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "usageAmount": {
            "type": "number",
            "format": "double"
          },
          "usageType": {
            "type": "string"
          }
        }
      },
      "DiscountPlansRIOption": {
        "type": "object",
        "properties": {
          "ec2Details": {
            "$ref": "#/components/schemas/awsAWSResourceDetailsEC2Details"
          },
          "rdsDetails": {
            "$ref": "#/components/schemas/awsAWSResourceDetailsRDSDetails"
          },
          "elasticacheDetails": {
            "$ref": "#/components/schemas/AWSResourceDetailsElastiCacheDetails"
          },
          "redshiftDetails": {
            "$ref": "#/components/schemas/awsAWSResourceDetailsRedshiftDetails"
          },
          "opensearchDetails": {
            "$ref": "#/components/schemas/AWSResourceDetailsOpensearchDetails"
          },
          "memoryDBDetails": {
            "$ref": "#/components/schemas/awsAWSResourceDetailsMemoryDBDetails"
          },
          "recommendedNormalizedUnits": {
            "type": "number",
            "format": "double"
          },
          "recommendedNumberOfInstanceToPurchase": {
            "type": "number",
            "format": "double"
          },
          "estOutcomeFromPurchaseRI": {
            "$ref": "#/components/schemas/RIOptionEstOutcomeFromPurchaseRI"
          },
          "region": {
            "type": "string"
          },
          "sizeFlexEligible": {
            "type": "boolean"
          },
          "tenancy": {
            "type": "string"
          },
          "currentGeneration": {
            "type": "boolean"
          }
        }
      },
      "DiscountPlansSPOption": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "hourlyCommitmentToPurchase": {
            "type": "number",
            "format": "double"
          },
          "offeringId": {
            "type": "string"
          },
          "currentUtilizationDetails": {
            "$ref": "#/components/schemas/SPOptionCurrentUtilizationDetails"
          },
          "estOutcomeFromPurchaseSP": {
            "$ref": "#/components/schemas/SPOptionEstOutcomeFromPurchaseSP"
          }
        }
      },
      "EBSDetailsVolumeDetails": {
        "type": "object",
        "properties": {
          "attachmentState": {
            "type": "string"
          },
          "iops": {
            "type": "number",
            "format": "double"
          },
          "throughput": {
            "type": "number",
            "format": "double"
          },
          "sizeInGb": {
            "type": "number",
            "format": "double"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "EC2AutoScalingGroupDetailsInstanceConfigurationDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "EC2DetailsRISpecsDetails": {
        "type": "object",
        "properties": {
          "offeringClass": {
            "type": "string"
          }
        }
      },
      "ECSDetailsServiceDetails": {
        "type": "object",
        "properties": {
          "architecture": {
            "type": "string"
          },
          "memorySizeInMB": {
            "type": "string",
            "format": "int64"
          },
          "platform": {
            "type": "string"
          },
          "vCpu": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ELBDetailsLoadBalancer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "ExecuteOptimizationResponseAWSOption": {
        "type": "object",
        "properties": {
          "approveTemplateUrl": {
            "type": "string"
          },
          "recommendationId": {
            "type": "string"
          },
          "currentStatus": {
            "type": "string"
          }
        }
      },
      "ExecuteOptimizationResponseAzureCSPOption": {
        "type": "object"
      },
      "ExecuteOptimizationResponseGCPOption": {
        "type": "object"
      },
      "FilterCriteriaFilterOperator": {
        "type": "string",
        "default": "OPERATOR_UNSPECIFIED",
        "enum": [
          "OPERATOR_UNSPECIFIED",
          "EQUAL",
          "NOT_EQUAL"
        ]
      },
      "FilterOperator": {
        "type": "string",
        "default": "OPERATOR_UNSPECIFIED",
        "enum": [
          "OPERATOR_UNSPECIFIED",
          "EQUAL",
          "NOT_EQUAL"
        ]
      },
      "FlowUpdateSettingsBody": {
        "type": "object",
        "properties": {
          "accountScope": {
            "type": "string",
            "description": "Optional. Update account scope (payer or linked)."
          },
          "customization": {
            "type": "string",
            "description": "Optional. Update customization setting."
          },
          "planTerm": {
            "type": "string",
            "description": "Optional. Update term of the SP."
          },
          "paymentOption": {
            "type": "string",
            "description": "Optional. Update payment option."
          },
          "lookBackPeriod": {
            "type": "string",
            "description": "Optional. Update lookback period."
          },
          "instanceFamily": {
            "type": "string",
            "description": "Optional. Update list of instance families."
          },
          "annualBudget": {
            "type": "number",
            "description": "Optional. Update annual budget.",
            "format": "double"
          },
          "approval": {
            "type": "boolean",
            "description": "Optional. Update purchase approval."
          },
          "payerId": {
            "type": "string",
            "description": "Optional. Update used payerId."
          }
        },
        "description": "Request message for the Flow.UpdateSettings rpc."
      },
      "GcpOptionsBillingOption": {
        "title": "V2",
        "type": "object",
        "properties": {
          "accountName": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "datasetId": {
            "type": "string"
          },
          "datasetRegion": {
            "type": "string"
          },
          "bigQueryStatus": {
            "type": "boolean"
          }
        }
      },
      "GcpOptionsProjectOption": {
        "type": "object",
        "properties": {
          "apiAccess": {
            "type": "boolean"
          },
          "projectName": {
            "type": "string"
          },
          "projectNumber": {
            "type": "string"
          },
          "billingAccountId": {
            "type": "string"
          }
        }
      },
      "GetAICostAndUsageRequestFilter": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "operator": {
            "$ref": "#/components/schemas/FilterOperator"
          },
          "values": {
            "type": "array",
            "description": "TEMPORARY. retain the old parameter to avoid errors in UI prod.\nWill remove once the latest changes in UI is released.",
            "items": {
              "type": "string"
            }
          },
          "value": {
            "type": "string"
          }
        }
      },
      "GetAICostAndUsageRequestGranularity": {
        "type": "string",
        "default": "GRANULARITY_UNSPECIFIED",
        "enum": [
          "GRANULARITY_UNSPECIFIED",
          "DAILY",
          "MONTHLY"
        ]
      },
      "GetAICostAndUsageResponseMetric": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "cost": {
            "$ref": "#/components/schemas/v1GetAICostAndUsageResponseCost"
          },
          "usage": {
            "$ref": "#/components/schemas/GetAICostAndUsageResponseUsage"
          }
        }
      },
      "GetAICostAndUsageResponseUsage": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "GetAllocationAttributesResponseAllocationAttribute": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "service": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetCloudwatchMetadataResponseDimension": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IamCreatePartnerTokenBody": {
        "type": "object",
        "description": "Request message for the Iam.CreatePartnerToken rpc."
      },
      "IamRefreshPartnerTokenBody": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Required. The previous (old) token to be refreshed."
          }
        },
        "description": "Request message for the Iam.RefreshPartnerToken rpc."
      },
      "IamUpdateFeatureFlagsBody": {
        "type": "object",
        "properties": {
          "featureFlags": {
            "$ref": "#/components/schemas/apiFeatureFlags"
          }
        },
        "description": "Request message for the Iam.UpdateFeatureFlags rpc."
      },
      "IamUpdateRoleBody": {
        "type": "object",
        "properties": {
          "newName": {
            "type": "string",
            "description": "Optional. If set, update the current name to this."
          },
          "permissions": {
            "type": "array",
            "description": "Required. The list of permissions to attach to this role.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Request message for the Iam.UpdateRole rpc."
      },
      "IdentityProvidersamlInfo": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "string"
          }
        }
      },
      "InstanceDetailsEC2Metrics": {
        "type": "object",
        "properties": {
          "cpuUtilizationMetrics": {
            "$ref": "#/components/schemas/awsMetricData"
          },
          "diskUtilizationMetrics": {
            "$ref": "#/components/schemas/awsMetricData"
          },
          "networkUtilizationMetrics": {
            "$ref": "#/components/schemas/awsMetricData"
          },
          "memoryUtilizationMetrics": {
            "$ref": "#/components/schemas/awsMetricData"
          }
        }
      },
      "InstanceDetailsEIPDetails": {
        "type": "object",
        "properties": {
          "ipAddress": {
            "type": "string"
          }
        }
      },
      "InstanceDetailsNatGatewayDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "subnetId": {
            "type": "string"
          },
          "vpcId": {
            "type": "string"
          },
          "metrics": {
            "$ref": "#/components/schemas/NatGatewayDetailsNatGatewayMetrics"
          }
        }
      },
      "LambdaDetailsFunctionDetails": {
        "type": "object",
        "properties": {
          "architecture": {
            "type": "string"
          },
          "memorySizeInMB": {
            "type": "string",
            "format": "int64"
          },
          "arn": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "ListCalculatorRunningAccountsResponseAwsRunningAccount": {
        "type": "object",
        "properties": {
          "month": {
            "type": "string",
            "description": "The queried month. Format is yyyy-mm."
          },
          "account": {
            "type": "string",
            "description": "The AWS account that is actively processing."
          },
          "date": {
            "type": "string",
            "description": "The target date the account is processing for."
          },
          "started": {
            "type": "string",
            "description": "The timestamp when the calculation has started."
          }
        }
      },
      "ListIdentityProvidersResponseIdentityProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "saml": {
            "$ref": "#/components/schemas/IdentityProvidersamlInfo"
          }
        }
      },
      "ListRecommendationResponsePurchaseOption": {
        "type": "object",
        "properties": {
          "spType": {
            "type": "string"
          },
          "offeringClass": {
            "type": "string"
          },
          "commitment": {
            "type": "number",
            "format": "double"
          },
          "numberToPurchase": {
            "type": "string",
            "format": "int64"
          },
          "paymentOption": {
            "type": "string"
          },
          "term": {
            "type": "string"
          },
          "currentGeneration": {
            "type": "boolean"
          },
          "serviceType": {
            "type": "string"
          },
          "upfrontCost": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ListRecommendationV2RequestRateSettings": {
        "type": "object",
        "properties": {
          "spType": {
            "type": "string"
          },
          "rateModel": {
            "type": "string"
          },
          "paymentOption": {
            "type": "string"
          },
          "term": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "offeringClass": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          }
        }
      },
      "MethodConfigChargingMethod": {
        "type": "string",
        "default": "FIXED_FEE",
        "enum": [
          "FIXED_FEE",
          "PERCENTAGE",
          "FIXED_FEE_OR_PERCENTAGE",
          "TIERED_PRICE",
          "TIERED_PERCENTAGE"
        ]
      },
      "MethodConfigCurrency": {
        "type": "string",
        "description": "supported currency.",
        "default": "JPY",
        "enum": [
          "JPY",
          "USD",
          "IDR",
          "MYR",
          "SGD",
          "INR"
        ]
      },
      "MetricDataMetrics": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "NatGatewayDetailsNatGatewayMetrics": {
        "type": "object",
        "properties": {
          "bytesInFromDest": {
            "$ref": "#/components/schemas/awsMetricData"
          },
          "bytesInFromSrc": {
            "$ref": "#/components/schemas/awsMetricData"
          },
          "bytesOutToDest": {
            "$ref": "#/components/schemas/awsMetricData"
          },
          "bytesOutToSrc": {
            "$ref": "#/components/schemas/awsMetricData"
          }
        }
      },
      "OperationsCancelOperationBody": {
        "type": "object",
        "description": "Request message for the Operations.CancelOperation rpc."
      },
      "PricingGetPricingBody": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "description": "Required. Cloud vendor service. \nSupported services can be listed using `/{vendor}/services` endpoint. For usage information visit https://labs.alphaus.cloud/blueapidocs/#/Pricing/Pricing_GetSupportedServices."
          },
          "region": {
            "type": "string",
            "description": "Required. Region code.\nSupported regions can be listed using `/{vendor}/services` endpoint. For usage information visit https://labs.alphaus.cloud/blueapidocs/#/Pricing/Pricing_GetSupportedServices.\nView all available AWS services by region at https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/.\nView all available Azure services by region at https://azure.microsoft.com/en-us/explore/global-infrastructure/products-by-region/."
          },
          "token": {
            "type": "string",
            "description": "Optional. Supply token that is included in the latest response to continue fetching the remaining chunks of data. No further data can be retrieved once the token returned is empty."
          },
          "filters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Filters to apply to the pricing data.\nThis is a map of column names and values to filter pricing items. Each key-value pair in the map represents a filter condition.\nSupported filter key-value pairs can be listed using `/{vendor}/services` endpoint. For usage information visit https://labs.alphaus.cloud/blueapidocs/#/Pricing/Pricing_GetSupportedServices.\n\nFor example, if you want to return AWS EC2 items that has All Upfront purchase option, add `\"purchaseOption\": \"All Upfront\"` to the filters.\n\nMultiple key-value pairs are supported but keys should not be duplicated.\nFor example, for AWS EC2, the following is valid,\n```\n\"filters\": {\n  \"purchaseOption\": \"All Upfront\",\n  \"operatingSystem\": \"Windows\"\n}\n```\nbut not the following,\n```\n\"filters\": {\n  \"purchaseOption\": \"All Upfront\",\n  \"purchaseOption\": \"Partial Upfront\"\n}\n```"
          },
          "columns": {
            "type": "array",
            "description": "Optional. Only specified columns will be returned, if provided.\nAll columns will be returned if this array is empty.\nSupported columns can be listed using `/{vendor}/services` endpoint. For usage information visit https://labs.alphaus.cloud/blueapidocs/#/Pricing/Pricing_GetSupportedServices.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Request message for Pricing.GetPricing rpc."
      },
      "PrismUpdateOrgTimezoneBody": {
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "description": "Timezone in IANA format, e.g., \"Asia/Kuala_Lumpur\"."
          }
        }
      },
      "PrismUpdateOrganizationBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "PrismUpdateReportScheduleBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "schedule": {
            "type": "string"
          },
          "status": {
            "title": "Supported values: \"on\", \"off\"",
            "type": "string"
          },
          "scheduleCron": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string"
          }
        }
      },
      "PrismUpdateWorkflowBody": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Allowed values are \"on\" and \"off\"."
          }
        }
      },
      "RDSDetailsDBInstanceDetails": {
        "type": "object",
        "properties": {
          "storage": {
            "$ref": "#/components/schemas/DBInstanceDetailsStorage"
          },
          "name": {
            "type": "string"
          },
          "instanceClass": {
            "type": "string"
          },
          "dbEdition": {
            "type": "string"
          },
          "dbEngine": {
            "type": "string"
          },
          "deploymentOptions": {
            "type": "string"
          },
          "family": {
            "type": "string"
          },
          "multiAZ": {
            "type": "string"
          },
          "licenseModel": {
            "type": "string"
          },
          "metrics": {
            "$ref": "#/components/schemas/DBInstanceDetailsRDSMetrics"
          }
        }
      },
      "RIOptionEstOutcomeFromPurchaseRI": {
        "type": "object",
        "properties": {
          "aveUtilization": {
            "type": "number",
            "format": "double"
          },
          "aveNormalizesUnitsUsedPerHour": {
            "type": "number",
            "format": "double"
          },
          "aveNumberOfInstanceUsedPerHour": {
            "type": "number",
            "format": "double"
          },
          "breakEvenInMonths": {
            "type": "number",
            "format": "double"
          },
          "monthlyOnDemandCost": {
            "type": "number",
            "format": "double"
          },
          "monthlyRICost": {
            "type": "number",
            "format": "double"
          },
          "monthlySavings": {
            "type": "number",
            "format": "double"
          },
          "monthlySavingsPercentage": {
            "type": "number",
            "format": "double"
          },
          "maxNormalizedUnitsUsedPerHour": {
            "type": "number",
            "format": "double"
          },
          "minNormalizedUnitsUsedPerHour": {
            "type": "number",
            "format": "double"
          },
          "minNumberOfInstanceUsedPerHour": {
            "type": "number",
            "format": "double"
          },
          "maxNumberOfInstanceUsedPerHour": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "RecommendationHubRecommendationsInsights": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "RedshiftDetailsClusterDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "clusterId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "ReservedInstanceRIMetrics": {
        "type": "object",
        "properties": {
          "utilization": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricDataMetrics"
            }
          }
        }
      },
      "RoundingRoundingMethod": {
        "title": "RoundingMethod",
        "type": "string",
        "description": "- ROUND: round\n - ROUNDUP: round up\n - ROUNDDOWN: round down",
        "default": "ROUND",
        "enum": [
          "ROUND",
          "ROUNDUP",
          "ROUNDDOWN"
        ]
      },
      "S3DetailsBucketDetails": {
        "type": "object",
        "properties": {
          "arn": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SPOptionCurrentUtilizationDetails": {
        "type": "object",
        "properties": {
          "aveCoverage": {
            "type": "number",
            "format": "double"
          },
          "aveHourOnDemandSpend": {
            "type": "number",
            "format": "double"
          },
          "maxHourlyOnDemandSpend": {
            "type": "number",
            "format": "double"
          },
          "minHourlyOnDemandSpend": {
            "type": "number",
            "format": "double"
          },
          "existingHourlyCommitment": {
            "type": "number",
            "format": "double"
          },
          "estOnDemandCostWithHourlyCommitment": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "SPOptionEstOutcomeFromPurchaseSP": {
        "type": "object",
        "properties": {
          "aveCoverage": {
            "type": "number",
            "format": "double"
          },
          "aveUtilization": {
            "type": "number",
            "format": "double"
          },
          "monthlySavingsAmount": {
            "type": "number",
            "format": "double"
          },
          "onDemandCost": {
            "type": "number",
            "format": "double"
          },
          "roi": {
            "type": "number",
            "format": "double"
          },
          "savingsPlanCost": {
            "type": "number",
            "format": "double"
          },
          "savingsPercentage": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "TrustedAdvisorRecommendationsAWSWellArchitectedHighRiskIssues": {
        "type": "object",
        "properties": {
          "workloadArn": {
            "type": "string"
          },
          "workloadName": {
            "type": "string"
          },
          "reviewerName": {
            "type": "string"
          },
          "workloadType": {
            "type": "string"
          },
          "workloadStartedDate": {
            "type": "string"
          },
          "workloadLastModifiedDate": {
            "type": "string"
          },
          "numberOfIDHRI": {
            "type": "string"
          },
          "numberOfHRIResolved": {
            "type": "string"
          },
          "numberOfQuestionsAnswered": {
            "type": "string"
          },
          "totalNumberOfQuestions": {
            "type": "string"
          }
        }
      },
      "TrustedAdvisorRecommendationsAmazonEC2InstanceStopped": {
        "type": "object",
        "properties": {
          "ec2Details": {
            "$ref": "#/components/schemas/awsAWSResourceDetailsEC2Details"
          },
          "awsConfigRule": {
            "type": "string"
          },
          "inputParameters": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          }
        }
      },
      "TrustedAdvisorRecommendationsCommonDetails": {
        "type": "object",
        "properties": {
          "awsConfigRule": {
            "type": "string"
          },
          "inputParameters": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          }
        }
      },
      "TrustedAdvisorRecommendationsComprehendUnderutilizedEndpoints": {
        "type": "object",
        "properties": {
          "endpoint": {
            "$ref": "#/components/schemas/AWSResourceDetailsComprehendDetailsEndpoint"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "TrustedAdvisorRecommendationsEC2ConsolidationForMSSqlServer": {
        "type": "object",
        "properties": {
          "ec2Details": {
            "$ref": "#/components/schemas/AWSResourceDetailsEC2DetailsInstanceDetails"
          },
          "minVCpu": {
            "type": "string"
          },
          "sqlServerEdition": {
            "type": "string"
          }
        }
      },
      "TrustedAdvisorRecommendationsEC2OverProvisionedForMSSqlServer": {
        "type": "object",
        "properties": {
          "ec2Details": {
            "$ref": "#/components/schemas/AWSResourceDetailsEC2DetailsInstanceDetails"
          },
          "maxVCpu": {
            "type": "string"
          },
          "recommendedInstanceType": {
            "type": "string"
          }
        }
      },
      "TrustedAdvisorRecommendationsEC2RILeaseExpiration": {
        "type": "object",
        "properties": {
          "currentMonthlyCost": {
            "type": "number",
            "format": "double"
          },
          "estMonthlySavings": {
            "type": "number",
            "format": "double"
          },
          "reason": {
            "type": "string"
          },
          "riDetails": {
            "$ref": "#/components/schemas/AWSResourceDetailsReservedInstance"
          }
        }
      },
      "TrustedAdvisorRecommendationsIdleLoadBalancer": {
        "type": "object",
        "properties": {
          "elbDetails": {
            "$ref": "#/components/schemas/AWSResourceDetailsELBDetails"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "TrustedAdvisorRecommendationsInactiveAWSNetworkFirewall": {
        "type": "object",
        "properties": {
          "firewallDetails": {
            "$ref": "#/components/schemas/AWSResourceDetailsNetworkFirewallDetails"
          },
          "totalBytesProcessed": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "TrustedAdvisorRecommendationsInactiveNATGateways": {
        "type": "object",
        "properties": {
          "natGatewayDetails": {
            "$ref": "#/components/schemas/InstanceDetailsNatGatewayDetails"
          },
          "totalBytesFromDest": {
            "type": "number",
            "format": "double"
          },
          "totalBytesFromSrc": {
            "type": "number",
            "format": "double"
          },
          "totalBytes": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "TrustedAdvisorRecommendationsLambdaHighErrorRates": {
        "type": "object",
        "properties": {
          "avgDailyErrorRates": {
            "type": "number",
            "format": "double"
          },
          "avgDailyInvokes": {
            "type": "number",
            "format": "double"
          },
          "currentDayErrorRates": {
            "type": "number",
            "format": "double"
          },
          "currentDayInvokes": {
            "type": "number",
            "format": "double"
          },
          "dateForMaxErrorRates": {
            "type": "string"
          },
          "lostDailyComputeCost": {
            "type": "number",
            "format": "double"
          },
          "maxDailyErrorRates": {
            "type": "number",
            "format": "double"
          },
          "lambdaDetails": {
            "$ref": "#/components/schemas/AWSResourceDetailsLambdaDetails"
          }
        }
      },
      "TrustedAdvisorRecommendationsLambdaWithExcessiveTimeouts": {
        "type": "object",
        "properties": {
          "maxDailyTimeoutRate": {
            "type": "number",
            "format": "double"
          },
          "dateOfDailyTimeoutRate": {
            "type": "string"
          },
          "aveDailyTimeoutRate": {
            "type": "number",
            "format": "double"
          },
          "functionTimeoutSettings": {
            "type": "number",
            "format": "double"
          },
          "lostDailyComputeCost": {
            "type": "number",
            "format": "double"
          },
          "aveDailyInvokes": {
            "type": "number",
            "format": "double"
          },
          "currentDayInvokes": {
            "type": "number",
            "format": "double"
          },
          "currentDayTimeoutRate": {
            "type": "number",
            "format": "double"
          },
          "function": {
            "$ref": "#/components/schemas/LambdaDetailsFunctionDetails"
          }
        }
      },
      "TrustedAdvisorRecommendationsLowUtilizationEC2Instances": {
        "type": "object",
        "properties": {
          "ec2Instance": {
            "$ref": "#/components/schemas/awsAWSResourceDetailsEC2Details"
          },
          "aveCpuUtilizationBy14Day": {
            "type": "number",
            "format": "double"
          },
          "aveNetworkIOBy14Day": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "TrustedAdvisorRecommendationsNetworkFirewallEndpointAZIndependence": {
        "type": "object",
        "properties": {
          "endpoint": {
            "$ref": "#/components/schemas/AWSResourceDetailsNetworkFirewallDetailsEndpoint"
          },
          "crossAZSubnetsList": {
            "type": "string"
          }
        }
      },
      "TrustedAdvisorRecommendationsRDSIdleDBInstances": {
        "type": "object",
        "properties": {
          "rdsDetails": {
            "$ref": "#/components/schemas/awsAWSResourceDetailsRDSDetails"
          },
          "daysLastConnection": {
            "type": "string"
          }
        }
      },
      "TrustedAdvisorRecommendationsRoute53LatencyResourceRecordsSets": {
        "type": "object",
        "properties": {
          "route53Details": {
            "$ref": "#/components/schemas/AWSResourceDetailsRoute53Details"
          }
        }
      },
      "TrustedAdvisorRecommendationsS3IncompleteMPU": {
        "type": "object",
        "properties": {
          "s3Details": {
            "$ref": "#/components/schemas/AWSResourceDetailsS3Details"
          },
          "lifecycleRuleForDeletingIMPU": {
            "type": "string"
          },
          "daysAfterInitiation": {
            "type": "string"
          }
        }
      },
      "TrustedAdvisorRecommendationsUnassociatedEIP": {
        "type": "object",
        "properties": {
          "eipDetails": {
            "$ref": "#/components/schemas/InstanceDetailsEIPDetails"
          }
        }
      },
      "TrustedAdvisorRecommendationsUnderutilizedEBSVolume": {
        "type": "object",
        "properties": {
          "ebsDetails": {
            "$ref": "#/components/schemas/awsAWSResourceDetailsEBSDetails"
          },
          "monthlyStorageCost": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "TrustedAdvisorRecommendationsUnderutilizedRedshiftCluster": {
        "type": "object",
        "properties": {
          "cluster": {
            "$ref": "#/components/schemas/RedshiftDetailsClusterDetails"
          },
          "reason": {
            "type": "string"
          },
          "estimatedMonthlySavings": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "adminv1NotificationAccount": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string",
            "description": "Required."
          },
          "accountId": {
            "type": "string",
            "description": "Required."
          }
        }
      },
      "apiAccountDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource Id. \n\nif account, customer id.\n\nif tag, tag resource id."
          },
          "name": {
            "type": "string",
            "description": "Resource Name. \n\nif account, customer name.\n\nif tag, tag resources."
          },
          "details": {
            "title": "details: Vendor service fees included",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiUsageDetails"
            }
          },
          "customDetails": {
            "title": "customDetails: Includes details of custom service and additional item data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiCustomDetails"
            }
          },
          "feeDetails": {
            "title": "feeDetails: Includes details of re-caluclated fee data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/blueapiapiFeeDetails"
            }
          },
          "total": {
            "title": "The keys included in the account total column have the following values",
            "type": "array",
            "description": "substitution:\n   Total amount of agency fee costs\n\nsupportFee:\n   Total amount of Support Fee costs\n\nusageOnlyTotal:\n   Total amount of vendor usage fee only costs\n\nusageTotal:\n   Total amount of vendor usage fee costs\n\nmarketplace:\n   Total amount of vendor marketplace usage costs\n\nmarketplaceFees:\n   Total amount of vendor marketplace fee costs",
            "items": {
              "$ref": "#/components/schemas/apiAccountTotal"
            }
          }
        },
        "description": "AccountDetails resource definition."
      },
      "apiAccountGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The AccountGroup id."
          },
          "name": {
            "type": "string",
            "description": "The AccountGroup name."
          },
          "metadata": {
            "type": "array",
            "description": "The attributes (key/value pair) of the AccountGroup.",
            "items": {
              "$ref": "#/components/schemas/apiKeyValue"
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/blueapiapiAccount"
            }
          }
        }
      },
      "apiAccountOriginalResource": {
        "type": "object",
        "properties": {
          "id": {
            "title": "The id is associated with CostUsage or BillingReport.\nVendor positioning is\nAWS: `lineItem/UsageAccountId`\nGoogleCloud: `projectId`\nAzure: `azure customer id`",
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "The name is associated with CostUsage or BillingReport.\nBasically the same as id."
          },
          "payerId": {
            "type": "string",
            "description": "The payerId associated with CostUsage or BillingReport.\nIt will be the organization Id associated with the id."
          },
          "vendor": {
            "title": "The vendor. supported by `aws`,`gcp`,`azure`",
            "type": "string"
          },
          "productRegistered": {
            "type": "boolean",
            "description": "The ProductRegistered indicates whether it is linked to a product(Ripple or Wave(Pro))."
          },
          "metadata": {
            "type": "array",
            "description": "The attributes (key/value pair) of the account original resource.",
            "items": {
              "$ref": "#/components/schemas/apiKeyValueMap"
            }
          }
        },
        "description": "AccountOriginalResource resource definition."
      },
      "apiAccountTotal": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "AccountTotal resource definition."
      },
      "apiAdditionalItems": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "unitCost": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "AdditionalItems resource definition."
      },
      "apiAdjustmentConfig": {
        "type": "object",
        "properties": {
          "config": {
            "title": "User configuration",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiConfigFilters"
            }
          },
          "vendor": {
            "title": "Vendor",
            "type": "string"
          },
          "accounts": {
            "title": "Management account configuration",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiManagementAccount"
            }
          }
        },
        "description": "AdjustmentConfig resource definition."
      },
      "apiApiClient": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "description": "API client id."
          },
          "clientSecret": {
            "type": "string",
            "description": "API client secret. Only available during creation; otherwise, redacted."
          },
          "name": {
            "type": "string",
            "description": "API client name."
          },
          "grantType": {
            "type": "string",
            "description": "Grant type. Always set to `client_credentials`."
          },
          "parent": {
            "type": "string",
            "description": "The client's parent resource."
          },
          "createTime": {
            "type": "string"
          }
        }
      },
      "apiAuditExport": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/apiAuditExportData"
          }
        },
        "description": "AuditExport resource definition."
      },
      "apiAuditExportData": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Base64 encoded value\nFor example, content :`dGltZSx1c2VySWQsc3ViVXNlcklkLHVzZXJOYW1lLGlzQWRtaW4sZXZlbnROYW1lLHBhdGgsdXNlclBhc3MsY2F0ZU5hbWUNCg==`\nDecoding this value, get `time,userId,subUserId,userName,isAdmin,eventName,path,userPass,cateName`."
          },
          "downloadedRows": {
            "type": "string",
            "description": "Downloaded content lines.",
            "format": "int64"
          },
          "totalRows": {
            "type": "string",
            "description": "Total of content lines.",
            "format": "int64"
          }
        },
        "description": "AuditExportData resource definition."
      },
      "apiBillingGroupForecast": {
        "type": "object",
        "properties": {
          "billingInternalId": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiForecastData"
            }
          }
        }
      },
      "apiBudgetAlertNotification": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "description": "Required. List of channelId. For example, you set to [\"channelId1\",\"channelId2\",\"channelId3\"].",
            "items": {
              "type": "string"
            }
          },
          "enabled": {
            "type": "boolean",
            "description": "Required. notification enable/disable \nIf disabled, no alert is sent."
          }
        },
        "description": "BudgetAlertNotification resource definition."
      },
      "apiBudgetAlertNotificationDetail": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "description": "List of channel info.",
            "items": {
              "$ref": "#/components/schemas/apiNotificationChannel"
            }
          },
          "enabled": {
            "type": "boolean",
            "description": "Notification enable/disable \nIf disabled, no alert is sent."
          }
        },
        "description": "BudgetAlertNotificationDetail resource definition."
      },
      "apiConfigFilters": {
        "type": "object",
        "properties": {
          "andFilters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "description": "ConfigFilters resource definition.\nA map of \"key:value\" config filters. The key indicates the adjustment key while the value is the filter adjustment value which can be prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you want to query lineitems with the adjustment `productCode:AmazonEC2`, set to `{\"productCode\":\"AmazonEC2\"}`. You can also use regular expressions for adjustment values, such as `{\"description\":\"re:[A-Za-z0-9]*\"}`.\nList of available adjustment keys: productCode, type, description\nFor example value on productCode: AmazonEC2, AmazonRDS, AWSLambda, etc.\nFor example value on type: Fee, Refund, SppDiscount, etc."
      },
      "apiCostTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The costtag id."
          },
          "orgId": {
            "type": "string",
            "description": "The parent organization id."
          },
          "billingInternalId": {
            "type": "string",
            "description": "The parent billing internal id."
          },
          "vendor": {
            "type": "string",
            "description": "The vendor."
          },
          "accountId": {
            "type": "string",
            "description": "The account id."
          },
          "logic": {
            "title": "The logic.(and/or)",
            "type": "string"
          },
          "tags": {
            "type": "array",
            "description": "The attributes (key/value pair) of the costtag.",
            "items": {
              "$ref": "#/components/schemas/apiKeyValue"
            }
          }
        }
      },
      "apiCustomDetails": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "CustomDetails resource definition."
      },
      "apiDailyBudgetAlert": {
        "type": "object",
        "properties": {
          "value": {
            "title": "Required. threshold in budget alerts",
            "type": "number",
            "format": "double"
          },
          "enabled": {
            "type": "boolean",
            "description": "Required. notification enable/disable \nIf disabled, no alert is sent."
          }
        },
        "description": "DailyBudgetAlert resource definition."
      },
      "apiDailyRateIncreaseBudgetAlert": {
        "type": "object",
        "properties": {
          "value": {
            "title": "Required. threshold in budget alerts",
            "type": "number",
            "format": "double"
          },
          "enabled": {
            "type": "boolean",
            "description": "Required. notification enable/disable \nIf disabled, no alert is sent."
          }
        },
        "description": "DailyRateIncreaseBudgetAlert resource definition."
      },
      "apiEmailChannel": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "apiFeatureFlags": {
        "type": "object",
        "properties": {
          "dashboardGraph": {
            "title": "Control view-access to the Wave dashboard graph",
            "type": "boolean"
          },
          "usageAccount": {
            "title": "Control access to the Accounts pane under usage reports on Wave",
            "type": "boolean"
          },
          "usageAccountGraph": {
            "title": "Control view-access to the Account-level graph under usage reports on Wave",
            "type": "boolean"
          },
          "usageAccountMenuAccountEdit": {
            "title": "Control edit-access to Accounts under usage reports on Wave",
            "type": "boolean"
          },
          "usageAccountMenuBudget": {
            "title": "Control view-access to budget settings for an Account under usage reports on Wave",
            "type": "boolean"
          },
          "usageAccountMenuBudgetEdit": {
            "title": "Control edit-access to budget settings for an Account under usage reports on Wave",
            "type": "boolean"
          },
          "usageAccountMenuFeesFee": {
            "title": "Control view-access to the fees menu for an Account under usage reports on Wave",
            "type": "boolean"
          },
          "usageAccountMenuFeesCredit": {
            "title": "Control view-access to credits for an Account under usage reports on Wave",
            "type": "boolean"
          },
          "usageAccountMenuFeesRefund": {
            "title": "Control view-access to refunds for an Account under usage reports on Wave",
            "type": "boolean"
          },
          "usageAccountMenuFeesOtherFees": {
            "title": "Control view-access to other fees for an Account under usage reports on Wave",
            "type": "boolean"
          },
          "usageReportDownload": {
            "title": "Control download-access to usage report on Wave",
            "type": "boolean"
          },
          "usageGroup": {
            "title": "Control access to the Groups pane under usage reports on Wave",
            "type": "boolean"
          },
          "usageGroupGraph": {
            "title": "Control view-access to the Group-level graph under usage reports on Wave",
            "type": "boolean"
          },
          "usageTag": {
            "title": "Control view-access to the Tags pane under usage reports on Wave",
            "type": "boolean"
          },
          "usageTagGraph": {
            "title": "Control view-access to the Tag-level graph under usage reports on Wave",
            "type": "boolean"
          },
          "usageCrosstag": {
            "title": "Control view-access to the Tags pane for crosstag groups under usage reports on Wave",
            "type": "boolean"
          },
          "usageCrosstagGraph": {
            "title": "Control view-access to the Tag-level graph for crosstag groups under usage reports on Wave",
            "type": "boolean"
          },
          "riPurchased": {
            "title": "Control view-access to purchased reservations under reserved instances on Wave",
            "type": "boolean"
          },
          "riUtilization": {
            "title": "Control access to RI utilization under reserved instances on Wave",
            "type": "boolean"
          },
          "riRecommendation": {
            "title": "Control access to RI recommendations on Wave",
            "type": "boolean"
          },
          "spPurchased": {
            "title": "Control access to purchased savings plans on Wave",
            "type": "boolean"
          },
          "invoice": {
            "title": "Control access to the invoice on Wave",
            "type": "boolean"
          },
          "invoiceDownloadCsvDiscount": {
            "title": "Control download-access to the discounted invoice CSV on Wave",
            "type": "boolean"
          },
          "invoiceDownloadCsvMerged": {
            "title": "Control download-access to the merged invoice CSV on Wave",
            "type": "boolean"
          },
          "openApi": {
            "title": "Control access to API tokens on Wave",
            "type": "boolean"
          },
          "usersManagement": {
            "title": "Control access to sub-user management on Wave",
            "type": "boolean"
          },
          "aqCoverageRatio": {
            "title": "Control access to the Coverage Ratio pane on Aqua",
            "type": "boolean"
          },
          "aqRiManagement": {
            "title": "Control access to the RI management pane on Aqua",
            "type": "boolean"
          },
          "aqSpManagement": {
            "title": "Control access to the savings plan management pane on Aqua",
            "type": "boolean"
          },
          "aqRiSpInstances": {
            "title": "Control access to RI and savings plan recommendations on Aqua",
            "type": "boolean"
          },
          "aqRightSizing": {
            "title": "Control access to right-sizing on Aqua",
            "type": "boolean"
          },
          "aqScheduling": {
            "title": "Control access to scheduling on Aqua",
            "type": "boolean"
          },
          "reportFilters": {
            "title": "Control access to the report filters pane in Wave Pro",
            "type": "boolean"
          },
          "aquaLink": {
            "title": "Control access to Aqua from Wave Pro",
            "type": "boolean"
          },
          "budgetalerts": {
            "title": "Control access to budget alerts from Wave Pro",
            "type": "boolean"
          }
        },
        "description": "Describes the features and whether or not they are enabled for a particular user."
      },
      "apiForecastData": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "productCategory": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "frequency": {
            "title": "daily, monthly",
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "historicalCost": {
            "type": "number",
            "format": "double"
          },
          "forecastedCost": {
            "type": "number",
            "format": "double"
          },
          "upperBound": {
            "type": "number",
            "format": "double"
          },
          "lowerBound": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "apiGroupCustomDetails": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "GroupCustomDetails resource definition."
      },
      "apiGroupDetails": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "GroupDetails resource definition."
      },
      "apiGroupRootUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address associated with the user. If there is no email\r\naddress provided then this field will contain \"Not Set\"."
          },
          "password": {
            "type": "string",
            "description": "The password associated with the user. This field will only be\r\npopulated when the reseller is first created."
          },
          "groupId": {
            "type": "string",
            "description": "The ID of the group to which the user belongs. This will either\r\nbe a billing group ID or an access group ID."
          },
          "groupName": {
            "type": "string",
            "description": "The name of the group to which the user belongs. This will either\r\nbe the name of a billing group or an access group."
          },
          "groupType": {
            "type": "string",
            "description": "This field describes what type of group to which the user belongs.\r\nThis field will contain either a value of \"billing_group\" or \"access_group\"."
          },
          "meta": {
            "$ref": "#/components/schemas/apiFeatureFlags"
          },
          "passwordUpdateTime": {
            "type": "string",
            "description": "The time when the password was last updated. This value will be null if \r\nthe password has never been updated."
          },
          "updateTime": {
            "type": "string",
            "description": "The time when the user was last updated. This value will be null if the\r\nuser has never been updated."
          },
          "userAccessId": {
            "type": "string",
            "description": "An ID that uniquely identifies the user in the context of its access group.\r\nIf the user does not belong to an access group then this value field will\r\ncontain the same value as the user ID."
          },
          "userId": {
            "type": "string",
            "description": "An ID that unqiuely identifies the user."
          },
          "waveAvailabilityDays": {
            "type": "integer",
            "description": "How many days of Wave use remain. This value is only used for trial accounts.\r\nThis field cannot be updated.",
            "format": "int32"
          },
          "waveRegistered": {
            "type": "string",
            "description": "When the user registered on Wave."
          },
          "waveStatus": {
            "type": "string",
            "description": "The plan associated with the user. Possible values include \"trial\",\r\n\"limited3\" and \"limited4\"."
          }
        },
        "description": "Describes the fields on an Alphaus root user for a billing group or access group."
      },
      "apiInvoice": {
        "type": "object",
        "properties": {
          "aws": {
            "$ref": "#/components/schemas/apiVendorDetail"
          },
          "gcp": {
            "$ref": "#/components/schemas/apiVendorDetail"
          },
          "azure": {
            "$ref": "#/components/schemas/apiVendorDetail"
          }
        },
        "description": "Invoice resource definition."
      },
      "apiInvoiceMessage": {
        "type": "object",
        "properties": {
          "id": {
            "title": "invoice generate request id",
            "type": "string"
          },
          "status": {
            "title": "invoice generate request status",
            "type": "string",
            "description": "done: Invoicing is complete.\nrunning: Invoicing in progress.\nfailed: Invoicing is failure."
          },
          "timestamp": {
            "type": "string",
            "description": "status timestamp in UTC, RFC3339."
          }
        },
        "description": "InvoiceMessage resource definition."
      },
      "apiInvoiceTotal": {
        "type": "object",
        "properties": {
          "name": {
            "title": "Key names related to the total. Each key is described in the following detail",
            "type": "string",
            "description": "supportFee: \n   Total amount of Support Fee costs\n\nsubstitution: \n   Total amount of agency fee costs\n\nchargeOnly: \n   Total amount of vendor usage fee only costs\n\nmarketplace: \n   Total amount of vendor marketplace usage costs\n\nmarketplaceFees: \n   Total amount of vendor marketplace fee costs\n\ncharge: \n   Total amount of vendor usage fee costs\n\ndiscount: \n   Total amount after discounts. Inculuded Support fee costs\n\ndiscountWithSubstitution: \n   Total Discounts plus agency fee costs\n\nchargeTaxFree: \n   Amounts not included in consumption tax\n\nadditionalItem: \n   Total amount of additional item costs \n\ncustomService: \n   Total amount of custom service item costs \n\nsumOfBeforeTax: \n   Total amount before consumption tax\n\ntax: \n   Consumption tax amount on the total amount\n\ntotal: \n   Total billing amount including tax"
          },
          "currency": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "InvoiceTotal resource definition."
      },
      "apiKeyValue": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "apiKeyValueMap": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "stringValue": {
            "type": "string"
          },
          "boolValue": {
            "type": "boolean"
          }
        },
        "description": "KeyValueMap resource definition."
      },
      "apiMSTeamsChannel": {
        "type": "object",
        "properties": {
          "webhookUrl": {
            "type": "string"
          }
        }
      },
      "apiManagementAccount": {
        "type": "object",
        "properties": {
          "managementAccountId": {
            "title": "Vendor-managed organization account Id",
            "type": "string"
          },
          "config": {
            "type": "array",
            "description": "A list of filtering options. See [ConfigFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.",
            "items": {
              "$ref": "#/components/schemas/apiConfigFilters"
            }
          }
        },
        "description": "ManagementAccount resource definition."
      },
      "apiMonthOnMonthCostForecast": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "costCurrent": {
            "type": "number",
            "format": "double"
          },
          "costPrev": {
            "type": "number",
            "format": "double"
          },
          "costForecast": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "apiMonthToDateCostForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "costPrev": {
            "type": "number",
            "format": "double"
          },
          "costAccumulated": {
            "type": "number",
            "format": "double"
          },
          "costForecast": {
            "type": "number",
            "format": "double"
          },
          "upperBound": {
            "type": "number",
            "format": "double"
          },
          "lowerBound": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "apiMonthlyBudget": {
        "type": "object",
        "properties": {
          "yearMonth": {
            "title": "Format: yyyymm",
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "apiMonthlyBudgetAlert": {
        "type": "object",
        "properties": {
          "value": {
            "title": "Required. threshold in budget alerts",
            "type": "number",
            "format": "double"
          },
          "enabled": {
            "type": "boolean",
            "description": "Required. notification enable/disable \nIf disabled, no alert is sent."
          }
        },
        "description": "MonthlyBudgetAlert resource definition."
      },
      "apiMonthlyCostForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "costActual": {
            "type": "number",
            "format": "double"
          },
          "costForecast": {
            "type": "number",
            "format": "double"
          },
          "budget": {
            "type": "number",
            "format": "double"
          },
          "upperBound": {
            "type": "number",
            "format": "double"
          },
          "lowerBound": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "apiNotificationChannel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "email": {
            "$ref": "#/components/schemas/apiEmailChannel"
          },
          "slack": {
            "$ref": "#/components/schemas/apiSlackChannel"
          },
          "msteams": {
            "$ref": "#/components/schemas/apiMSTeamsChannel"
          },
          "product": {
            "type": "string"
          }
        }
      },
      "apiNotificationSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether notification is enabled for this account globally."
          },
          "defaultChannel": {
            "type": "string",
            "description": "The id of the default notification channel."
          }
        }
      },
      "apiOndemandChart": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "normalizedUsage": {
            "type": "number",
            "format": "double"
          },
          "ondemandCost": {
            "type": "number",
            "format": "double"
          },
          "usage": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "apiOndemandData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ondemandChart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiOndemandChart"
            }
          }
        }
      },
      "apiOptionsChart": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "coverage": {
            "type": "number",
            "format": "double"
          },
          "usage": {
            "type": "number",
            "format": "double"
          },
          "usageCoverage": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "apiOptionsData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "optionsChart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiOptionsChart"
            }
          }
        }
      },
      "apiPermission": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiPolicy"
            }
          }
        }
      },
      "apiPolicy": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string"
          },
          "effect": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "apiRole": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiPolicy"
            }
          }
        }
      },
      "apiSlackChannel": {
        "type": "object",
        "properties": {
          "webhookUrl": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "configurationUrl": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "redirectUri": {
            "type": "string"
          }
        }
      },
      "apiSubUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Sub-user's unique id."
          },
          "parentId": {
            "type": "string",
            "description": "The id of the parent user. If this is empty, the sub-user is invalid."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Attributes specific to the sub-user."
          },
          "roles": {
            "type": "array",
            "description": "Role details for the sub-user, if applicable.",
            "items": {
              "$ref": "#/components/schemas/apiSubUserRole"
            }
          }
        }
      },
      "apiSubUserRole": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "description": "Role ID assigned to the sub-user."
          },
          "permissions": {
            "type": "array",
            "description": "Permissions granted to the sub-user for this role.",
            "items": {
              "type": "string"
            }
          },
          "subUserId": {
            "type": "string",
            "description": "Temporary: Tracks the sub-user ID to verify the role is assigned to the correct user.\nThis field will be removed after testing is complete."
          }
        }
      },
      "apiUsageDetails": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "UsageDetails resource definition."
      },
      "apiUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's unique id."
          },
          "parent": {
            "type": "string",
            "description": "The user's parent. If empty or non-existent, it means this user is a root user;\notherwise, it's a subuser."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The attributes (key/value pair) of the user. If hierarchy is supported, it will be\nseparated by '/', such as 'key/subkey=value'. See https://alphauslabs.github.io/blueapi/\nfor the list of supported attributes."
          }
        }
      },
      "apiUserRoleMapping": {
        "type": "object",
        "properties": {
          "rootUser": {
            "type": "string"
          },
          "subUser": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          }
        }
      },
      "apiVendorDetail": {
        "type": "object",
        "properties": {
          "details": {
            "title": "details: Includes account-by-account details",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiAccountDetails"
            }
          },
          "groupDetails": {
            "type": "array",
            "description": "groupDetails: Includes account-by-account details(fee item data).",
            "items": {
              "$ref": "#/components/schemas/apiGroupDetails"
            }
          },
          "groupCustomDetails": {
            "type": "array",
            "description": "groupCustomDetails: Includes account-by-account details(custom service and additional item data).",
            "items": {
              "$ref": "#/components/schemas/apiGroupCustomDetails"
            }
          },
          "total": {
            "title": "total: Includes data on billing totals",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiInvoiceTotal"
            }
          },
          "settings": {
            "$ref": "#/components/schemas/blueapiapiInvoiceSettings"
          }
        },
        "description": "VendorDetail resource definition."
      },
      "apiawsChartData": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "actualOndemand": {
            "type": "number",
            "format": "double"
          },
          "actualCost": {
            "type": "number",
            "format": "double"
          },
          "utilization": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "apiawsCost": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "description": "The account being queried."
          },
          "groupId": {
            "type": "string",
            "description": "The group id the account is associated with during the query."
          },
          "type": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "description": "For daily data, format is `yyyy-mm-dd`; for monthly, `yyyy-mm`."
          },
          "productCode": {
            "type": "string",
            "description": "The product code for an AWS service, such as `AmazonEC2`, `AmazonRDS`, etc. This can also be an Alphaus-specified custom value."
          },
          "serviceCode": {
            "type": "string",
            "description": "The CUR service code of the lineitem, if applicable. Sometimes, this is the same as `productCode`, a subset of `productCode`, an Alphaus-specified custom value, or empty."
          },
          "region": {
            "type": "string",
            "description": "The region of the lineitem, if applicable."
          },
          "zone": {
            "type": "string",
            "description": "The zone of the lineitem, if applicable."
          },
          "usageType": {
            "type": "string",
            "description": "The CUR usage type of the lineitem, if applicable."
          },
          "instanceType": {
            "type": "string",
            "description": "The CUR instance type of the lineitem, if applicable."
          },
          "operation": {
            "type": "string",
            "description": "The CUR operation of the lineitem, if applicable."
          },
          "invoiceId": {
            "type": "string",
            "description": "The AWS invoice ID of the lineitem, if applicable."
          },
          "description": {
            "type": "string",
            "description": "The description of the lineitem, if applicable."
          },
          "resourceId": {
            "type": "string",
            "description": "The resource id of the lineitem, if applicable. At the moment, this is not yet fully supported."
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "costCategories": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "usage": {
            "type": "number",
            "description": "Only set when `description` and/or `resourceId` attributes are specified.",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "description": "The true cost (calculated) for this lineitem.",
            "format": "double"
          },
          "unblendedCost": {
            "type": "number",
            "description": "The unblended cost as reflected in the CUR for this lineitem.",
            "format": "double"
          },
          "baseCurrency": {
            "type": "string",
            "description": "The base currency for `cost`, `unblendedCost`, `effectiveCost`, `amortizedCost`. Always set to `USD`, CUR's default currency."
          },
          "exchangeRate": {
            "type": "number",
            "description": "The exchange rate used to convert `baseCurrency` to `targetCurrency`.",
            "format": "double"
          },
          "targetCost": {
            "type": "number",
            "description": "Converted `cost`.",
            "format": "double"
          },
          "targetUnblendedCost": {
            "type": "number",
            "description": "Converted `unblendedCost`.",
            "format": "double"
          },
          "targetCurrency": {
            "type": "string",
            "description": "The currency set by `toCurrency`."
          },
          "effectiveCost": {
            "type": "number",
            "format": "double"
          },
          "targetEffectiveCost": {
            "type": "number",
            "description": "Converted `effectiveCost`.",
            "format": "double"
          },
          "amortizedCost": {
            "type": "number",
            "format": "double"
          },
          "targetAmortizedCost": {
            "type": "number",
            "description": "Converted `amortizedCost`.",
            "format": "double"
          },
          "tagId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "description": "Get last update in UNIX time format."
          },
          "metadata": {
            "type": "array",
            "description": "Various metadata associated with this lineitem.",
            "items": {
              "$ref": "#/components/schemas/apiKeyValue"
            }
          }
        }
      },
      "apiawsCostAttribute": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "serviceCode": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "zone": {
            "type": "string"
          },
          "usageType": {
            "type": "string"
          },
          "instanceType": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "invoiceId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "costCategories": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "apiazureCost": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "description": "The account being queried."
          },
          "groupId": {
            "type": "string",
            "description": "The group id the account is associated with during the query."
          },
          "date": {
            "type": "string",
            "description": "For daily data, format is `yyyy-mm-dd`; for monthly, `yyyy-mm`."
          },
          "serviceName": {
            "type": "string",
            "description": "The service name, such as `Software License`, `Cognosys`, `SendGrid`, `New-Commerce ERP Software License`, etc."
          },
          "productName": {
            "type": "string",
            "description": "The product code for an Azure service, such as `Dsv4 Series Windows VM`, `CentOS 7.6`, etc."
          },
          "region": {
            "type": "string",
            "description": "The region of lineitem, if applicable."
          },
          "chargeType": {
            "type": "string",
            "description": "The charge type of lineitem, if applicable. Such as `New`, `CycleCharge`, `Prorate fees when cancel`, etc."
          },
          "description": {
            "type": "string",
            "description": "The description of lineitem, if applicable."
          },
          "billableQuantity": {
            "type": "number",
            "description": "The billable quantity of lineitem, if applicable.",
            "format": "double"
          },
          "effectiveUnitPrice": {
            "type": "number",
            "description": "The effective unit price of lineitem, if applicable.",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "description": "The true cost (calculated) for this lineitem.",
            "format": "double"
          },
          "baseCurrency": {
            "type": "string",
            "description": "The base currency for `cost`."
          },
          "exchangeRate": {
            "type": "number",
            "description": "The exchange rate used to convert `baseCurrency` to `targetCurrency`.",
            "format": "double"
          },
          "targetCost": {
            "type": "number",
            "description": "Converted `cost`.",
            "format": "double"
          },
          "targetCurrency": {
            "type": "string",
            "description": "The currency set by `toCurrency`."
          },
          "timeInterval": {
            "type": "string",
            "description": "The time interval of lineitem, if applicable. Format is `yyyy-MM-ddThh:MM:ssZ/yyyy-mm-ddTHH:mm:ssZ` (for example 2020-09-16T00:00:00Z/2021-09-24T00:00:00Z)."
          },
          "billingType": {
            "type": "string",
            "description": "The billing type of lineitem, if applicable. Such as `MARKETPLACE`, `UPFRONT`, `Refund`, `Credit` and `OTHERS`."
          },
          "alternateId": {
            "type": "string",
            "description": "The alternate ID of lineitem, if applicable."
          },
          "domainName": {
            "type": "string",
            "description": "The domain name of lineitem, if applicable."
          },
          "operation": {
            "type": "string",
            "description": "The operation of lineitem, if applicable. Such as `Cool LRS Write Operations`, `Cool LRS Data Write`, `Standard Data Transfer Out`, etc."
          },
          "usageType": {
            "type": "string",
            "description": "The usage type of lineitem, if applicable. Such as `Standard HDD Managed Disks`, `Tables`, `Blob Storage`, etc."
          },
          "instanceType": {
            "type": "string",
            "description": "The instance type of lineitem, if applicable. Such as `Gateway`, `Standard_B2s`, `Standard_D4s_v3`, etc."
          },
          "category": {
            "type": "string",
            "description": "The category of lineitem, if applicable. Such as `Software License`, `Marketplace`, `RI`, `Other`, etc."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "entitlementId": {
            "type": "string",
            "description": "The entitlement id."
          }
        }
      },
      "apiazureCostAttribute": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string"
          },
          "subscriptionId": {
            "type": "string"
          },
          "entitlementId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "skuId": {
            "type": "string"
          },
          "skuName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "domainName": {
            "type": "string"
          }
        }
      },
      "apicoverAWSRecommendations": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "instanceName": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "costGroup": {
            "type": "string"
          },
          "recommendation": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "estsavings": {
            "type": "number",
            "format": "double"
          },
          "estcost": {
            "type": "number",
            "format": "double"
          },
          "estsavingsPercentage": {
            "type": "number",
            "format": "double"
          },
          "resourceArn": {
            "type": "string"
          },
          "restartNeeded": {
            "type": "boolean"
          },
          "rollbackPossible": {
            "type": "boolean"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "recommendationGroup": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "purchaseRIRecommendationDetails": {
            "$ref": "#/components/schemas/coverPurchaseRIRecommendationDetails"
          },
          "savingsPlanRecommendationDetails": {
            "$ref": "#/components/schemas/coverSavingsPlanRecommendationDetails"
          },
          "rightSizingRecommendationDetails": {
            "$ref": "#/components/schemas/coverRightSizingRecommendationDetails"
          },
          "upgradeRecommendationDetails": {
            "$ref": "#/components/schemas/coverUpgradeRecommendationDetails"
          },
          "migrateRecommendationDetails": {
            "$ref": "#/components/schemas/coverMigrateRecommendationDetails"
          },
          "stopInstanceRecommendationDetails": {
            "$ref": "#/components/schemas/coverStopInstanceRecommendationDetails"
          },
          "deleteRecommendationDetails": {
            "$ref": "#/components/schemas/coverDeleteRecommendationDetails"
          },
          "otherRecommendationDetails": {
            "$ref": "#/components/schemas/coverOtherRecommendationDetails"
          }
        }
      },
      "apicoverAccount": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "title": "account, subscription, project",
            "type": "string"
          }
        }
      },
      "apicoverAwsOptions": {
        "type": "object",
        "properties": {
          "AccountName": {
            "type": "string"
          },
          "PayerId": {
            "type": "string"
          },
          "RoleArn": {
            "type": "string"
          },
          "ExternalId": {
            "type": "string"
          },
          "StackId": {
            "type": "string"
          },
          "StackRegion": {
            "type": "string"
          },
          "TemplateUrl": {
            "type": "string"
          },
          "BucketName": {
            "type": "string"
          },
          "Prefix": {
            "type": "string"
          },
          "ReportName": {
            "type": "string"
          },
          "registrationStatus": {
            "$ref": "#/components/schemas/coverRegistrationStatus"
          },
          "Status": {
            "type": "string"
          },
          "RegistrationMethod": {
            "title": "Valid values for now are: 'console', 'terraform'. default would be 'console'",
            "type": "string"
          }
        }
      },
      "apicoverAzureOptions": {
        "type": "object",
        "properties": {
          "accountName": {
            "type": "string"
          },
          "azureCustomerId": {
            "type": "string"
          },
          "azurePlanId": {
            "type": "string"
          },
          "serviceAcct": {
            "type": "string"
          },
          "partnerAcct": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "payerId": {
            "type": "string"
          }
        }
      },
      "apicoverBudgetAlert": {
        "type": "object",
        "properties": {
          "threshold": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverThreshold"
            }
          },
          "channels": {
            "$ref": "#/components/schemas/coverAlertChannels"
          }
        }
      },
      "apicoverCostCalculation": {
        "type": "object",
        "properties": {
          "estCostAfterDiscount": {
            "type": "number",
            "format": "double"
          },
          "estCostBeforeDiscount": {
            "type": "number",
            "format": "double"
          },
          "otherDiscount": {
            "type": "number",
            "format": "double"
          },
          "savingsPlanDiscount": {
            "type": "number",
            "format": "double"
          },
          "estNetUnusedAmortizedCommitments": {
            "type": "number",
            "format": "double"
          },
          "reservedInstanceDiscount": {
            "type": "number",
            "format": "double"
          },
          "usageTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apicoverUsageTypes"
            }
          }
        }
      },
      "apicoverEBSDetails": {
        "type": "object",
        "properties": {
          "currentEBSDetails": {
            "$ref": "#/components/schemas/coverCurrentEBSDetails"
          },
          "upgradeEBSDetails": {
            "$ref": "#/components/schemas/coverEBSRecommendationDetails"
          }
        }
      },
      "apicoverEC2Details": {
        "type": "object",
        "properties": {
          "instanceType": {
            "type": "string"
          },
          "tenancy": {
            "type": "string"
          },
          "family": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          }
        }
      },
      "apicoverMemoryDBDetails": {
        "type": "object",
        "properties": {
          "family": {
            "type": "string"
          },
          "nodeType": {
            "type": "string"
          }
        }
      },
      "apicoverRDSDetails": {
        "type": "object",
        "properties": {
          "dbEdition": {
            "type": "string"
          },
          "dbEngine": {
            "type": "string"
          },
          "deploymentOptions": {
            "type": "string"
          },
          "family": {
            "type": "string"
          },
          "instanceType": {
            "type": "string"
          },
          "licenseModel": {
            "type": "string"
          }
        }
      },
      "apicoverRedshiftDetails": {
        "type": "object",
        "properties": {
          "currentGeneration": {
            "type": "boolean"
          },
          "nodeType": {
            "type": "string"
          },
          "family": {
            "type": "string"
          }
        }
      },
      "apicoverResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "apicoverTagData": {
        "type": "object",
        "properties": {
          "tagKey": {
            "type": "string"
          },
          "tagValue": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "apicoverUsageTypes": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "usageAmount": {
            "type": "number",
            "format": "double"
          },
          "usageType": {
            "type": "string"
          }
        }
      },
      "apicoverUtilizationData": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "apigcpCost": {
        "title": "Cost for Api Response",
        "type": "object",
        "properties": {
          "account": {
            "title": "account data",
            "type": "string"
          },
          "groupId": {
            "type": "string",
            "description": "The group id the account is associated with during the query."
          },
          "date": {
            "type": "string",
            "description": "For daily data, format is `yyyy-mm-dd`; for monthly, `yyyy-mm`."
          },
          "invoiceMonth": {
            "type": "string",
            "description": "The invoice.month of the lineitem, if applicable."
          },
          "service": {
            "type": "string",
            "description": "The service.Description of the lineitem, if applicable."
          },
          "sku": {
            "type": "string",
            "description": "The sku.Description of the lineitem, if applicable."
          },
          "region": {
            "type": "string",
            "description": "The location.region of the lineitem, if applicable."
          },
          "zone": {
            "type": "string",
            "description": "The location.zone of the lineitem, if applicable."
          },
          "creditsType": {
            "type": "string",
            "description": "The credits.type of the lineitem, if applicable."
          },
          "creditsName": {
            "type": "string",
            "description": "The credits.name of the lineitem, if applicable."
          },
          "usageUnit": {
            "type": "string",
            "description": "The usage.pricing_unit of the lineitem, if applicable."
          },
          "usageAmount": {
            "type": "number",
            "description": "The usage.amount_in_pricing_units of the lineitem, if applicable.",
            "format": "double"
          },
          "baseCurrency": {
            "type": "string",
            "description": "The currency of the lineitem, if applicable."
          },
          "cost": {
            "type": "number",
            "description": "The cost of the lineitem, if applicable.",
            "format": "double"
          }
        },
        "description": "see gcp billing data schema details:[https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables]"
      },
      "apirippleAccessGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "billingGroups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "AccessGroup resource definition."
      },
      "apiripplev1InvoiceServiceDiscounts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The invoice service discounts id."
          },
          "name": {
            "type": "string",
            "description": "The invoice service discount name.\nmust be 1-60 characters long."
          },
          "description": {
            "type": "string",
            "description": "The invoice service discount description.\nMaximum 150 characters long."
          },
          "setting": {
            "$ref": "#/components/schemas/v1InvoiceServiceDiscountsSetting"
          },
          "created": {
            "type": "string",
            "description": "Timestamp associated with the created.",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "description": "Timestamp associated with the updated.",
            "readOnly": true
          }
        },
        "description": "InvoiceServiceDiscounts resource definition."
      },
      "apiwaveBudget": {
        "type": "object",
        "properties": {
          "id": {
            "title": "budget id\n`previousDay` / `daily` / `monthly`",
            "type": "string"
          },
          "value": {
            "title": "budget value",
            "type": "number",
            "format": "double"
          },
          "enabled": {
            "title": "budget setting enable/disable",
            "type": "boolean"
          }
        },
        "description": "Budget resource definition."
      },
      "apiwaveBudgetAlert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "account id.",
            "readOnly": true
          },
          "notification": {
            "type": "array",
            "description": "notification setting.",
            "items": {
              "$ref": "#/components/schemas/apiwaveNotification"
            }
          },
          "budget": {
            "type": "array",
            "description": "budget setting.",
            "items": {
              "$ref": "#/components/schemas/apiwaveBudget"
            }
          }
        },
        "description": "Budget resource definition."
      },
      "apiwaveNotification": {
        "type": "object",
        "properties": {
          "id": {
            "title": "notification id\n`email` / `slack`",
            "type": "string"
          },
          "destination": {
            "title": "destination email address /slack webhook url",
            "type": "string"
          },
          "enabled": {
            "title": "notification enable/disable",
            "type": "boolean"
          }
        },
        "description": "Notification resource definition."
      },
      "awsAWSResourceDetailsEBSDetails": {
        "type": "object",
        "properties": {
          "volumeDetails": {
            "$ref": "#/components/schemas/EBSDetailsVolumeDetails"
          }
        }
      },
      "awsAWSResourceDetailsEC2Details": {
        "type": "object",
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/AWSResourceDetailsEC2DetailsInstanceDetails"
          },
          "riSpecsDetails": {
            "$ref": "#/components/schemas/EC2DetailsRISpecsDetails"
          }
        }
      },
      "awsAWSResourceDetailsMemoryDBDetails": {
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/AWSResourceDetailsMemoryDBDetailsNodeDetails"
          }
        }
      },
      "awsAWSResourceDetailsRDSDetails": {
        "type": "object",
        "properties": {
          "dbInstance": {
            "$ref": "#/components/schemas/RDSDetailsDBInstanceDetails"
          }
        }
      },
      "awsAWSResourceDetailsRedshiftDetails": {
        "type": "object",
        "properties": {
          "cluster": {
            "$ref": "#/components/schemas/RedshiftDetailsClusterDetails"
          },
          "node": {
            "$ref": "#/components/schemas/AWSResourceDetailsRedshiftDetailsNodeDetails"
          }
        }
      },
      "awsAdjustmentsTypeList": {
        "type": "object",
        "properties": {
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "awsAwsCostBreakeven": {
        "type": "object",
        "properties": {
          "arn": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "breakEvenPoint": {
            "type": "string"
          },
          "upperRatio": {
            "type": "number",
            "format": "double"
          },
          "lowerRatio": {
            "type": "number",
            "format": "double"
          },
          "chartData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiawsChartData"
            }
          }
        }
      },
      "awsAwsCostReductions": {
        "type": "object",
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/awsCostReductionSummary"
          },
          "riCostReductions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/awsRiCostReduction"
            }
          },
          "spCostReductions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/awsSpCostReduction"
            }
          }
        }
      },
      "awsAwsRecommendations": {
        "type": "object",
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/awsReservationRecommendationSummary"
          },
          "riRecommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/awsRiRecommendation"
            }
          },
          "spRecommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/awsSpRecommendation"
            }
          },
          "estimatedCoverage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/awsReservationEstimatedCoverage"
            }
          }
        }
      },
      "awsCalculatorConfig": {
        "type": "object",
        "properties": {
          "adjustmentsTypeList": {
            "$ref": "#/components/schemas/awsAdjustmentsTypeList"
          },
          "excludedServicesFromUsage": {
            "type": "array",
            "description": "List of services that are of type 'Usage' in CUR that are excluded,\noptionally converted to Adjustments.",
            "items": {
              "$ref": "#/components/schemas/awsExcludedServiceFromUsage"
            }
          }
        },
        "description": "AWS's calculation engine configuration(s)."
      },
      "awsCostExplorerRecommendations": {
        "type": "object",
        "properties": {
          "ec2Rightsize": {
            "$ref": "#/components/schemas/CostExplorerRecommendationsEC2Rightsize"
          },
          "discountPlans": {
            "$ref": "#/components/schemas/CostExplorerRecommendationsDiscountPlans"
          },
          "terminateEc2": {
            "$ref": "#/components/schemas/CostExplorerRecommendationsTerminateEC2"
          }
        }
      },
      "awsCostOptimizationHubRecommendations": {
        "type": "object",
        "properties": {
          "currentDetails": {
            "$ref": "#/components/schemas/awsCostOptimizationHubRecommendationsDetails"
          },
          "recommendationDetails": {
            "$ref": "#/components/schemas/awsCostOptimizationHubRecommendationsDetails"
          }
        }
      },
      "awsCostOptimizationHubRecommendationsDetails": {
        "type": "object",
        "properties": {
          "costCalculation": {
            "$ref": "#/components/schemas/CostOptimizationHubRecommendationsDetailsCostCalculation"
          },
          "ec2Details": {
            "$ref": "#/components/schemas/awsAWSResourceDetailsEC2Details"
          },
          "rdsDetails": {
            "$ref": "#/components/schemas/awsAWSResourceDetailsRDSDetails"
          },
          "ebsDetails": {
            "$ref": "#/components/schemas/awsAWSResourceDetailsEBSDetails"
          },
          "ec2AutoScalingGroupDetails": {
            "$ref": "#/components/schemas/AWSResourceDetailsEC2AutoScalingGroupDetails"
          },
          "ecsDetails": {
            "$ref": "#/components/schemas/AWSResourceDetailsECSDetails"
          },
          "lambdaDetails": {
            "$ref": "#/components/schemas/AWSResourceDetailsLambdaDetails"
          }
        }
      },
      "awsCostReductionSummary": {
        "type": "object",
        "properties": {
          "totalOnDemandCost": {
            "type": "number",
            "format": "double"
          },
          "totalEffectiveCost": {
            "type": "number",
            "format": "double"
          },
          "totalSavings": {
            "type": "number",
            "format": "double"
          },
          "totalRiOnDemandCost": {
            "type": "number",
            "format": "double"
          },
          "totalRiEffectiveCost": {
            "type": "number",
            "format": "double"
          },
          "totalRiSavings": {
            "type": "number",
            "format": "double"
          },
          "totalSpOnDemandCost": {
            "type": "number",
            "format": "double"
          },
          "totalSpEffectiveCost": {
            "type": "number",
            "format": "double"
          },
          "totalSpSavings": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "awsExcludedServiceFromUsage": {
        "type": "object",
        "properties": {
          "managementAccount": {
            "type": "string",
            "description": "The management account (formerly master account) the `productCode` belongs to."
          },
          "productCode": {
            "type": "string",
            "description": "The excluded product code."
          },
          "convertedToAdjustments": {
            "type": "boolean",
            "description": "If the product code is converted to Adjustments or not."
          }
        }
      },
      "awsMetricData": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricDataMetrics"
            }
          },
          "maxMetricInPercentage": {
            "type": "number",
            "format": "double"
          },
          "metricCapacity": {
            "type": "string"
          }
        }
      },
      "awsReservationEstimatedCoverage": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "instanceFamily": {
            "type": "string"
          },
          "riUsageCoverage": {
            "type": "number",
            "format": "double"
          },
          "ec2SpUsageCoverage": {
            "type": "number",
            "format": "double"
          },
          "computeSpOnDemandCost": {
            "type": "number",
            "format": "double"
          },
          "computeSpDiscountedCost": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "awsReservationRecommendationSummary": {
        "type": "object",
        "properties": {
          "totalMonthlyOnDemandCost": {
            "type": "number",
            "format": "double"
          },
          "totalEstimatedMonthlySavings": {
            "type": "number",
            "format": "double"
          },
          "totalMonthlyDiscountedCost": {
            "type": "number",
            "format": "double"
          },
          "reductionRate": {
            "type": "number",
            "format": "double"
          },
          "totalUpfrontCost": {
            "type": "number",
            "format": "double"
          },
          "totalRecurringMonthlyCost": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "awsRiCostReduction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "arn": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "billingInternalId": {
            "type": "string"
          },
          "billingGroupId": {
            "type": "string"
          },
          "billingGroupName": {
            "type": "string"
          },
          "destCustomerId": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "instanceType": {
            "type": "string"
          },
          "modificationStatus": {
            "type": "string"
          },
          "number": {
            "type": "string",
            "format": "int64"
          },
          "offerClass": {
            "type": "string"
          },
          "deploymentOption": {
            "type": "string"
          },
          "paidBy": {
            "type": "string"
          },
          "paymentOption": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "remove": {
            "type": "boolean"
          },
          "scope": {
            "type": "string"
          },
          "tenancy": {
            "type": "string"
          },
          "termLength": {
            "type": "string"
          },
          "usageType": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "zone": {
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "normalizationFactor": {
            "type": "number",
            "format": "double"
          },
          "unblendedRate": {
            "type": "number",
            "format": "double"
          },
          "upfrontValue": {
            "type": "number",
            "format": "double"
          },
          "ondemandCost": {
            "type": "number",
            "format": "double"
          },
          "effectiveCost": {
            "type": "number",
            "format": "double"
          },
          "savings": {
            "type": "number",
            "format": "double"
          },
          "breakEven": {
            "title": "for break even point date",
            "type": "string"
          }
        }
      },
      "awsRiRecommendation": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "instanceType": {
            "type": "string"
          },
          "quantity": {
            "type": "string",
            "format": "int64"
          },
          "normalizedUnit": {
            "type": "number",
            "format": "double"
          },
          "operatingSystem": {
            "title": "for amazon ec2 only",
            "type": "string"
          },
          "preInstalledSW": {
            "type": "string"
          },
          "tenancy": {
            "type": "string"
          },
          "dbEngine": {
            "title": "for amazon rds only",
            "type": "string"
          },
          "deploymentOption": {
            "type": "string"
          },
          "ondemandCost": {
            "type": "number",
            "format": "double"
          },
          "ondemandrate": {
            "type": "number",
            "format": "double"
          },
          "riRate": {
            "type": "number",
            "format": "double"
          },
          "upfrontCost": {
            "type": "number",
            "format": "double"
          },
          "discountedCost": {
            "type": "number",
            "format": "double"
          },
          "monthlyAmortizedCost": {
            "type": "number",
            "format": "double"
          },
          "monthlyRecurringCost": {
            "type": "number",
            "format": "double"
          },
          "yearlyDiscountedCost": {
            "type": "number",
            "format": "double"
          },
          "reductionRate": {
            "type": "number",
            "format": "double"
          },
          "estimatedMonthlySavings": {
            "type": "number",
            "format": "double"
          },
          "daysBeforeBreakEven": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "awsSpCostReduction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "arn": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "billingGroupId": {
            "type": "string"
          },
          "billingGroupName": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "savingsPlan": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "instanceFamily": {
            "type": "string"
          },
          "termLength": {
            "type": "string"
          },
          "paymentOption": {
            "type": "string"
          },
          "commitment": {
            "type": "number",
            "format": "double"
          },
          "upfrontFee": {
            "type": "number",
            "format": "double"
          },
          "recurringFee": {
            "type": "number",
            "format": "double"
          },
          "ondemandCost": {
            "type": "number",
            "format": "double"
          },
          "effectiveCost": {
            "type": "number",
            "format": "double"
          },
          "savings": {
            "type": "number",
            "format": "double"
          },
          "breakEven": {
            "title": "for break even point date",
            "type": "string"
          }
        }
      },
      "awsSpRecommendation": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "spProductFamily": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "instanceFamily": {
            "type": "string"
          },
          "ondemandCost": {
            "type": "number",
            "format": "double"
          },
          "commitment": {
            "type": "number",
            "format": "double"
          },
          "normalizedUnit": {
            "type": "number",
            "format": "double"
          },
          "discountedCost": {
            "type": "number",
            "format": "double"
          },
          "monthlyDiscountedCost": {
            "type": "number",
            "format": "double"
          },
          "yearlyDiscountedCost": {
            "type": "number",
            "format": "double"
          },
          "estimatedMonthlySavings": {
            "type": "number",
            "format": "double"
          },
          "reductionRate": {
            "type": "number",
            "format": "double"
          },
          "daysBeforeBreakEven": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "awsTrustedAdvisorRecommendations": {
        "type": "object",
        "properties": {
          "severityStatus": {
            "type": "string"
          },
          "recommendationArn": {
            "type": "string"
          },
          "exclusionStatus": {
            "type": "string"
          },
          "lowUtilizationEc2Instances": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsLowUtilizationEC2Instances"
          },
          "rdsIdleDbInstances": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsRDSIdleDBInstances"
          },
          "s3IncompleteMPU": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsS3IncompleteMPU"
          },
          "lambdaHighErrorRates": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsLambdaHighErrorRates"
          },
          "underutilizedEBSVolume": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsUnderutilizedEBSVolume"
          },
          "unassociatedEIP": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsUnassociatedEIP"
          },
          "idleLoadBalancer": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsIdleLoadBalancer"
          },
          "ec2InstancesStopped": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsAmazonEC2InstanceStopped"
          },
          "ec2RILeaseExpiration": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsEC2RILeaseExpiration"
          },
          "comprehendUnderutilizedEndpoints": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsComprehendUnderutilizedEndpoints"
          },
          "underutilizedRedshiftCluster": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsUnderutilizedRedshiftCluster"
          },
          "lambdaWithExcessiveTimeouts": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsLambdaWithExcessiveTimeouts"
          },
          "awsWellArchitectedHighRiskIssues": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsAWSWellArchitectedHighRiskIssues"
          },
          "commonDetails": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsCommonDetails"
          },
          "inactiveNatGateways": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsInactiveNATGateways"
          },
          "networkFirewallEndpointAZIndependence": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsNetworkFirewallEndpointAZIndependence"
          },
          "inactiveNetworkFirewall": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsInactiveAWSNetworkFirewall"
          },
          "ec2OverprovisionedMSSqlServer": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsEC2OverProvisionedForMSSqlServer"
          },
          "ec2ConsolidationMSSqlServer": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsEC2ConsolidationForMSSqlServer"
          },
          "route53LatencyResourceRecordSets": {
            "$ref": "#/components/schemas/TrustedAdvisorRecommendationsRoute53LatencyResourceRecordsSets"
          }
        }
      },
      "azurecspAzureCSPRecommendations": {
        "type": "object"
      },
      "billingv1AccessGroup": {
        "type": "object",
        "properties": {
          "accessGroupId": {
            "type": "string",
            "description": "The ID of the access group."
          },
          "accessGroupName": {
            "type": "string",
            "description": "The name of the access group."
          },
          "accessGroupDescription": {
            "type": "string",
            "description": "A description of the access group."
          },
          "billingGroups": {
            "type": "array",
            "description": "A list of billing groups contained in the access group.",
            "items": {
              "$ref": "#/components/schemas/v1BillingGroup"
            }
          }
        },
        "description": "Defines the fields associated with a Wave access group."
      },
      "billingv1AwsOptions": {
        "type": "object",
        "properties": {
          "useProFormaCur": {
            "type": "boolean"
          },
          "payerId": {
            "type": "string",
            "description": "Must not be empty if useProFormaCur is true."
          }
        }
      },
      "billingv1AzureOptions": {
        "title": "Optional. Azure-specific options",
        "type": "object",
        "properties": {
          "resourceGroup": {
            "title": "Whether to use resource groups",
            "type": "boolean"
          },
          "applyPcEarnedCredit": {
            "title": "Whether to apply partner-earned credit",
            "type": "boolean"
          },
          "applyCampaignPricing": {
            "title": "Whether to apply campaign pricing",
            "type": "boolean"
          }
        }
      },
      "billingv1InvoiceSettings": {
        "type": "object",
        "properties": {
          "invoiceNo": {
            "type": "string"
          },
          "discountRate": {
            "type": "number",
            "format": "float"
          },
          "discountTargetUsage": {
            "type": "string",
            "description": "e.g., cloudpaywithfee, ..."
          },
          "discountCalcLogic": {
            "type": "string",
            "description": "e.g., usageamount, ..."
          },
          "taxRate": {
            "type": "number",
            "format": "float"
          },
          "supportFee": {
            "title": "e.g., percent, fix, aws_developer, aws_business, aws_enterprise",
            "type": "string"
          },
          "supportRate": {
            "type": "number",
            "format": "float"
          },
          "supportFeeCalcTarget": {
            "type": "string",
            "description": "e.g., nondiscount, ..."
          },
          "supportFix": {
            "type": "number",
            "format": "float"
          },
          "substitutionFee": {
            "title": "e.g., percent, fix, automatic, usagetable",
            "type": "string"
          },
          "substitutionRate": {
            "type": "number",
            "format": "float"
          },
          "substitutionFix": {
            "type": "number",
            "format": "float"
          },
          "substitutionFeeCalcTarget": {
            "type": "string",
            "description": "e.g., nondiscount, ..."
          },
          "substitutionFeeTargetUsage": {
            "title": "e.g., cloudpayonly, cloudpaywithfee",
            "type": "string"
          },
          "substitutionFeeCalcType": {
            "title": "e.g., allsum, account",
            "type": "string"
          },
          "currency": {
            "title": "Currency used for the invoice (e.g., \"jpy\", \"inr\")",
            "type": "string"
          },
          "exchangeRate": {
            "title": "Exchange rate from USD to the invoice currency\nExample: If the invoice currency is \"jpy\" and 1 USD = 150 jpy, exchangeRate = 150",
            "type": "number",
            "format": "float"
          },
          "memo": {
            "type": "string"
          },
          "calcType": {
            "title": "e.g., account, tag",
            "type": "string"
          },
          "additionalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1InvoiceAdditionalItems"
            }
          }
        }
      },
      "billingv1Tag": {
        "title": "Individual tag definition for AddTagsToBillingGroup",
        "type": "object",
        "properties": {
          "key": {
            "title": "Tag key",
            "type": "string"
          },
          "value": {
            "title": "Tag value",
            "type": "string"
          },
          "assign": {
            "title": "Assignment percentage (only used for non-tag assignments)",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "billingv1TagData": {
        "title": "Response for tag request",
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1Tags"
            }
          }
        }
      },
      "blueapiapiAccount": {
        "type": "object",
        "properties": {
          "vendor": {
            "title": "The vendor",
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The account id."
          },
          "name": {
            "type": "string",
            "description": "The account name."
          },
          "orgId": {
            "type": "string",
            "description": "The parent organization id."
          },
          "billingInternalId": {
            "type": "string",
            "description": "The parent billing internal id."
          },
          "metadata": {
            "type": "array",
            "description": "The attributes (key/value pair) of the account.",
            "items": {
              "$ref": "#/components/schemas/apiKeyValue"
            }
          }
        }
      },
      "blueapiapiBudget": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "fiscalYear": {
            "title": "Format: yyyy",
            "type": "string"
          },
          "monthlyBudget": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiMonthlyBudget"
            }
          }
        }
      },
      "blueapiapiChartData": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "profit": {
            "type": "number",
            "format": "double"
          },
          "utilization": {
            "type": "number",
            "format": "double"
          },
          "commitment": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "blueapiapiFeeDetails": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "FeeDetails resource definition."
      },
      "blueapiapiInvoiceSettings": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "dueDate": {
            "type": "string"
          },
          "dueDateCustomDay": {
            "type": "number",
            "format": "double"
          },
          "dueDateDay": {
            "type": "string"
          },
          "dueDateMonth": {
            "type": "string"
          },
          "exchangeRate": {
            "type": "number",
            "format": "double"
          },
          "invoiceNo": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "postal": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "description": "InvoiceSettings resource definition."
      },
      "blueapiapiNotification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "notificationType": {
            "type": "string"
          },
          "channels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabled": {
            "type": "boolean"
          },
          "account": {
            "$ref": "#/components/schemas/blueapiapiNotificationAccount"
          }
        }
      },
      "blueapiapiNotificationAccount": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          }
        }
      },
      "blueapiapiUtilizationData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "chartData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/blueapiapiChartData"
            }
          }
        }
      },
      "blueapibillingv1InvoiceServiceDiscounts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Service discount id."
          },
          "name": {
            "type": "string",
            "description": "Service discount name."
          },
          "description": {
            "type": "string",
            "description": "Service discount description."
          },
          "created": {
            "type": "string",
            "description": "create timestamp."
          },
          "updated": {
            "type": "string",
            "description": "update timestamp."
          }
        },
        "description": "Streaming response message for the InvoiceServiceDiscounts rpc."
      },
      "blueapibillingv1ListExchangeRatesResponse": {
        "type": "object",
        "properties": {
          "month": {
            "type": "string",
            "description": "The Month."
          },
          "common": {
            "$ref": "#/components/schemas/rippleCommonExchangeRate"
          },
          "billingGroup": {
            "type": "array",
            "description": "The billing group exchange rate.",
            "items": {
              "$ref": "#/components/schemas/rippleBillingGroupExchangeRate"
            }
          },
          "payer": {
            "$ref": "#/components/schemas/rippleVendorPayerExchangeRate"
          }
        },
        "description": "Response message for the ListExchangeRates rpc."
      },
      "blueapicostv1CostItem": {
        "type": "object",
        "properties": {
          "aws": {
            "$ref": "#/components/schemas/apiawsCost"
          },
          "gcp": {
            "$ref": "#/components/schemas/apigcpCost"
          },
          "azure": {
            "$ref": "#/components/schemas/apiazureCost"
          }
        },
        "description": "Response message wrapper for cloud costs."
      },
      "blueapicoverv1CostItem": {
        "type": "object",
        "properties": {
          "vendor": {
            "title": "`aws`, `azure`, `azureea` or `gcp`",
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "account": {
            "title": "AWS account, GCP projectId, AzureCSP accountId",
            "type": "string"
          },
          "usageType": {
            "type": "string",
            "description": "Usage Type. Supports AWS usage types only. Other vendors will be grouped into one for each vendor."
          },
          "chargeType": {
            "type": "string",
            "description": "Charge Type. Supports AWS usage types only. Types of charges in the CUR such as tax, discounts, fee, usage, etc."
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "details": {
            "title": "Could be AWS, Azure or GCP Cost",
            "type": "string"
          },
          "forecast": {
            "$ref": "#/components/schemas/coverAwsCostForecast"
          },
          "region": {
            "type": "string"
          },
          "billingAccount": {
            "title": "AWS payer acount, GCP billing account, Azure Payer account",
            "type": "string"
          },
          "tagValue": {
            "title": "Tag Value. Contains tag value of the input tag key. Only used if groupBy is set to tag",
            "type": "string"
          },
          "lastUpdate": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "description": "Contains the list of unit items. Used only when groupBy is set to the selected unit type (e.g., \"Product\", \"Environment\", \"Customer\").\nExample: If groupBy is set to \"Environment\", this field might include values like \"dev\", \"next\", or \"prod\"."
          },
          "category": {
            "type": "string",
            "description": "Category. Contains the category to which a service belongs. Only used if groupBy is set to category."
          },
          "tagged": {
            "type": "boolean",
            "description": "Indicates whether the item is tagged (true) or not (false)."
          },
          "numberOfUnits": {
            "type": "number",
            "description": "Contains the number of units for unit metric. Only used when feature flag for unit cost metric is enabled.",
            "format": "double"
          },
          "unitcostmetric": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "description": "Contains the unit cost metric. Only used when feature flag for unit cost metric is enabled."
          }
        },
        "description": "Response message wrapper for cloud costs."
      },
      "blueapicoverv1ListExchangeRatesResponse": {
        "title": "Response message for ListExchangeRates",
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          },
          "exchangeRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1ExchangeRates"
            }
          }
        }
      },
      "blueapiflowv1GetInfoResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          }
        },
        "description": "Response message for the Flow.GetInfo rpc."
      },
      "blueapipricingv1GetInfoResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          }
        },
        "description": "Response message for the Pricing.GetInfo rpc."
      },
      "costv1CostAttribute": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "costv1ListCostFilters": {
        "type": "object",
        "properties": {
          "filterId": {
            "type": "string",
            "description": "Required. Filter Id."
          },
          "filterName": {
            "type": "string",
            "description": "Required. Filter Name."
          },
          "vendor": {
            "type": "string",
            "description": "Required. Vendor."
          },
          "groupId": {
            "type": "string",
            "description": "Optional. If set, reads the usage-based cost details of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.\n\nFor AWS Ripple, only billing internal ids are supported at the moment. Overriden when `accountId` is set to anything other than `*`. Set this and `accountId` to `*` to read the usage-based cost details of the whole organization. Optional for AWS Wave(Pro)."
          },
          "accountId": {
            "type": "string",
            "description": "Optional. You can set it to a single account or a comma-separated list of accounts.\n\nFor AWS, setting this will override `groupId`. Set this and `groupId` to `*` to read the usage-based cost details of the whole organization."
          },
          "awsOptions": {
            "$ref": "#/components/schemas/v1ReadCostsRequestAwsOptions"
          }
        },
        "description": "Response message for the ListCostFilters rpc."
      },
      "coverAlertChannel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "coverAlertChannels": {
        "type": "object",
        "properties": {
          "email": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverAlertChannel"
            }
          },
          "slack": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverAlertChannel"
            }
          },
          "msteams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverAlertChannel"
            }
          }
        }
      },
      "coverAlertCostGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "coverAlertData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "granularity": {
            "type": "string"
          },
          "costGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverAlertCostGroup"
            }
          },
          "channels": {
            "$ref": "#/components/schemas/coverAlertChannels"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "fixedAmount": {
            "type": "number",
            "format": "float"
          },
          "percentage": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "coverAnomalyOptions": {
        "type": "object",
        "properties": {
          "threshold": {
            "type": "number",
            "format": "float"
          },
          "isPercentage": {
            "type": "boolean"
          },
          "pastDataInMonths": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "coverAwsCostForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "For daily data, format is `yyyy-mm-dd`; for monthly, `yyyy-mm`."
          },
          "account": {
            "type": "string",
            "description": "The account being queried."
          },
          "productCode": {
            "title": "The product code for an AWS service",
            "type": "string"
          },
          "cost": {
            "title": "Forcasted cost based on true cost (calculated)",
            "type": "number",
            "format": "double"
          },
          "lowerBound": {
            "type": "number",
            "format": "double"
          },
          "upperBound": {
            "type": "number",
            "format": "double"
          },
          "unblendedCost": {
            "title": "Forcasted cost based on unblended cost",
            "type": "number",
            "format": "double"
          },
          "unblendedLowerBound": {
            "type": "number",
            "format": "double"
          },
          "unblendedUpperBound": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverAwsDiscountRecommendations": {
        "type": "object",
        "properties": {
          "riRecommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverRiRecommendationResults"
            }
          },
          "spRecommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverSpRecommendationResults"
            }
          }
        }
      },
      "coverAwsInputs": {
        "type": "object",
        "properties": {
          "offeringClass": {
            "title": "Supported values are the following: ('STANDARD', 'CONVERTIBLE') -> for RI only",
            "type": "string"
          },
          "paymentOption": {
            "title": "Supported values are the following: ('ALL_UPFRONT', 'PARTIAL_UPFRONT', 'NO_UPFRONT')",
            "type": "string"
          },
          "termInYears": {
            "title": "Supported values are the following:('ONE_YEAR', 'THREE_YEARS')",
            "type": "string"
          },
          "basedOnThePast": {
            "title": "Supported values are the following:('SEVEN_DAYS', 'THIRTY_DAYS', 'SIXTY_DAYS')",
            "type": "string"
          }
        }
      },
      "coverAzureDiscountRecommendations": {
        "type": "object"
      },
      "coverAzureInputs": {
        "type": "object"
      },
      "coverBudgetData": {
        "type": "object",
        "properties": {
          "id": {
            "title": "not required for creating budget",
            "type": "string"
          },
          "startDate": {
            "title": "use yyyymmdd format",
            "type": "string"
          },
          "endDate": {
            "title": "use yyyymmdd format",
            "type": "string"
          },
          "totalBudget": {
            "type": "number",
            "format": "float"
          },
          "period": {
            "title": "3, 6, 12 months",
            "type": "string",
            "format": "int64"
          },
          "granularBudget": {
            "title": "budget per month",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverGranularBudgetData"
            }
          },
          "costGroup": {
            "$ref": "#/components/schemas/coverAlertCostGroup"
          },
          "alerts": {
            "title": "threshold(s) and its respective channel(s) to alert",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apicoverBudgetAlert"
            }
          },
          "forecastedData": {
            "title": "forecast for ongoing months of an active budget; if expired, archived forecast record",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverGranularForecastData"
            }
          },
          "spendingData": {
            "title": "spending data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverGranularSpendingData"
            }
          },
          "expired": {
            "title": "true if budget has expired",
            "type": "boolean"
          },
          "draft": {
            "title": "true if the current budget set is still a draft",
            "type": "boolean"
          },
          "createdBy": {
            "title": "not required for creating budget",
            "type": "string"
          },
          "createdAt": {
            "title": "not required for creating budget",
            "type": "string"
          },
          "updatedBy": {
            "title": "not required for creating budget",
            "type": "string"
          },
          "updatedAt": {
            "title": "not required for creating budget",
            "type": "string"
          },
          "totalSpend": {
            "title": "total accumulated spending within the budget period",
            "type": "number",
            "format": "float"
          }
        }
      },
      "coverCategory": {
        "type": "object",
        "properties": {
          "display": {
            "type": "string"
          },
          "query": {
            "type": "string"
          }
        }
      },
      "coverChannelData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "title": "actual email value of channel name in slack or ms teams",
            "type": "string"
          },
          "type": {
            "title": "email, slack, msteams",
            "type": "string"
          },
          "webhookUrl": {
            "type": "string"
          }
        }
      },
      "coverCloudWatchInfo": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string",
            "description": "The AWS region where the CloudWatch metric is located."
          },
          "accountId": {
            "title": "The account ID of the AWS account where the CloudWatch metric is located",
            "type": "string"
          },
          "namespace": {
            "type": "string",
            "description": "The namespace of the CloudWatch metric.\nFor example, \"AWS/EC2\" for EC2 metrics."
          },
          "metricName": {
            "title": "The name of the CloudWatch metric.\nFor example, \"CPUUtilization\" for EC2 CPU utilization",
            "type": "string"
          },
          "dimensions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The dimensions of the CloudWatch metric.\nFor example, \"InstanceId\" for EC2 instance metrics.\nThe dimensions are represented as key-value pairs.\nFor example, {\"InstanceId\": \"i-1234567890abcdef0\"} for a specific EC2 instance."
          },
          "aggregationMethod": {
            "title": "The aggregation method to use for the CloudWatch metric",
            "type": "string"
          }
        }
      },
      "coverCombinations": {
        "type": "object",
        "properties": {
          "awsOptions": {
            "$ref": "#/components/schemas/coverCostGroupAwsOptions"
          },
          "azureOptions": {
            "$ref": "#/components/schemas/coverCostGroupAzureOptions"
          },
          "gcpOptions": {
            "$ref": "#/components/schemas/coverCostGroupGcpOptions"
          },
          "azurecspOptions": {
            "$ref": "#/components/schemas/coverCostGroupAzureCspOptions"
          },
          "customOptions": {
            "$ref": "#/components/schemas/coverCostGroupCustomOptions"
          }
        }
      },
      "coverCostGroupAwsOptions": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "description": "Optional. A list of filtering options. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.\nA map of \"key:value\" column filters. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you like to filter `productCode` to return only `AmazonEC2`, set to `{\"productCode\":\"eq:AmazonEC2\"}` or `{\"productCode\":\"AmazonEC2\"}`. You can also use a regular expression like `{\"productCode\":\"re:AmazonEC2|AmazonRDS\"}`, which means return all AmazonEC2 or AmazonRDS lineitems. Or reverse regexp, such as `{\"productCode\":\"!re:^AmazonEC2$\"}`, which means return all items except `AmazonEC2`.",
            "items": {
              "$ref": "#/components/schemas/coverCostGroupOptionsFilters"
            }
          },
          "tagFilters": {
            "type": "array",
            "description": "Optional. A list of filtering options. See [ReadCostsRequestAwsOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.\nA map of \"key:value\" tag filters. The key indicates the tag key while the value is the filter tag value which can be prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you want to query lineitems with the tag `project:MY_PROJECT`, set to `{\"project\":\"MY_PROJECT\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`.",
            "items": {
              "$ref": "#/components/schemas/coverCostGroupOptionsFilters"
            }
          }
        },
        "description": "AWS-specific options for CreateCostGroupRequest."
      },
      "coverCostGroupAzureCspOptions": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "description": "Optional. A list of filtering options. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.\nA map of \"key:value\" column filters. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you like to filter `productCode` to return only `AmazonEC2`, set to `{\"productCode\":\"eq:AmazonEC2\"}` or `{\"productCode\":\"AmazonEC2\"}`. You can also use a regular expression like `{\"productCode\":\"re:AmazonEC2|AmazonRDS\"}`, which means return all AmazonEC2 or AmazonRDS lineitems. Or reverse regexp, such as `{\"productCode\":\"!re:^AmazonEC2$\"}`, which means return all items except `AmazonEC2`.",
            "items": {
              "$ref": "#/components/schemas/coverCostGroupOptionsFilters"
            }
          },
          "tagFilters": {
            "type": "array",
            "description": "Optional. A list of filtering options. See [ReadCostsRequestAwsOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.\nA map of \"key:value\" tag filters. The key indicates the tag key while the value is the filter tag value which can be prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you want to query lineitems with the tag `project:MY_PROJECT`, set to `{\"project\":\"MY_PROJECT\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`.",
            "items": {
              "$ref": "#/components/schemas/coverCostGroupOptionsFilters"
            }
          }
        },
        "description": "AzureCsp-specific options for CreateCostGroupRequest."
      },
      "coverCostGroupAzureOptions": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "description": "Optional. A list of filtering options. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.\nA map of \"key:value\" column filters. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you like to filter `productCode` to return only `AmazonEC2`, set to `{\"productCode\":\"eq:AmazonEC2\"}` or `{\"productCode\":\"AmazonEC2\"}`. You can also use a regular expression like `{\"productCode\":\"re:AmazonEC2|AmazonRDS\"}`, which means return all AmazonEC2 or AmazonRDS lineitems. Or reverse regexp, such as `{\"productCode\":\"!re:^AmazonEC2$\"}`, which means return all items except `AmazonEC2`.",
            "items": {
              "$ref": "#/components/schemas/coverCostGroupOptionsFilters"
            }
          },
          "tagFilters": {
            "type": "array",
            "description": "Optional. A list of filtering options. See [ReadCostsRequestAwsOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.\nA map of \"key:value\" tag filters. The key indicates the tag key while the value is the filter tag value which can be prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you want to query lineitems with the tag `project:MY_PROJECT`, set to `{\"project\":\"MY_PROJECT\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`.",
            "items": {
              "$ref": "#/components/schemas/coverCostGroupOptionsFilters"
            }
          }
        },
        "description": "Azure-specific options for CreateCostGroupRequest."
      },
      "coverCostGroupCustomOptions": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "description": "Optional. A list of filtering options. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.",
            "items": {
              "$ref": "#/components/schemas/coverCostGroupOptionsFilters"
            }
          },
          "tagFilters": {
            "type": "array",
            "description": "Optional. A list of filtering options. See [ReadCostsRequestAwsOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.\nA map of \"key:value\" tag filters. The key indicates the tag key while the value is the filter tag value which can be prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you want to query lineitems with the tag `project:MY_PROJECT`, set to `{\"project\":\"MY_PROJECT\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`.",
            "items": {
              "$ref": "#/components/schemas/coverCostGroupOptionsFilters"
            }
          },
          "labelFilters": {
            "type": "array",
            "description": "Labels on gcp help you organize resources and manage your costs at scale, with the granularity you need.\nFor example, on Compute Engine, you can use labels to group VMs in categories such as production, staging, or development so that you can search for resources that belong to each development stage.\nIf you want to query lineitems with the label `vm-prod: prod`, set to `{\"vm-prod\":\"prod\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`.",
            "items": {
              "$ref": "#/components/schemas/coverCostGroupOptionsFilters"
            }
          },
          "projectLabelFilters": {
            "type": "array",
            "description": "Project Labels refers to labels that have been assigned to GCP projects. \nFor example, projectId \"mobingi-main\" assigned as \"env:prod\"\nIf you want to query lineitems with the label `env: prod`, set to `{\"env\":\"prod\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`.",
            "items": {
              "$ref": "#/components/schemas/coverCostGroupOptionsFilters"
            }
          }
        },
        "description": "Custom-specific options for CreateCostGroupRequest."
      },
      "coverCostGroupData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "colorTheme": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverMemberUserData"
            }
          },
          "combinations": {
            "$ref": "#/components/schemas/coverCombinations"
          },
          "createdBy": {
            "$ref": "#/components/schemas/coverMemberUserData"
          },
          "eventIndicator": {
            "$ref": "#/components/schemas/coverEventIndicator"
          },
          "anomalyOptions": {
            "$ref": "#/components/schemas/coverAnomalyOptions"
          },
          "type": {
            "$ref": "#/components/schemas/coverCostGroupType"
          }
        }
      },
      "coverCostGroupGcpOptions": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "description": "Optional. A list of filtering options. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.\nA map of \"key:value\" column filters. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you like to filter `serviceDescriptinon` to return only `Cloud Spanner`, set to `{\"serviceDescription\":\"eq:Cloud Spanner\"}` or `{\"serviceDescription\":\"Cloud Spanner\"}`. You can also use a regular expression like `{\"serviceDescription\":\"re:Cloud Spanner|BigQuery\"}`, which means return all Cloud Spanner or BigQuery lineitems. Or reverse regexp, such as `{\"serviceDescription\":\"!re:^Cloud Spanner$\"}`, which means return all items except `Cloud Spanner`.",
            "items": {
              "$ref": "#/components/schemas/coverCostGroupOptionsFilters"
            }
          },
          "tagFilters": {
            "type": "array",
            "description": "Tags on gcp used to conditionally allow or deny policies based on whether a supported resource has a specific tag.\nSuppose you have a set of virtual machines (VMs) running various applications, and you want to distinguish between them based on their roles. You could assign tags like \"app:webserver\" and \"app:database\" to identify which VMs serve as web servers and which ones are database servers.\nIf you want to query lineitems with the tag `app:database`, set to `{\"app\":\"database\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`.",
            "items": {
              "$ref": "#/components/schemas/coverCostGroupOptionsFilters"
            }
          },
          "labelFilters": {
            "type": "array",
            "description": "Labels on gcp help you organize resources and manage your costs at scale, with the granularity you need.\nFor example, on Compute Engine, you can use labels to group VMs in categories such as production, staging, or development so that you can search for resources that belong to each development stage.\nIf you want to query lineitems with the label `vm-prod: prod`, set to `{\"vm-prod\":\"prod\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`.",
            "items": {
              "$ref": "#/components/schemas/coverCostGroupOptionsFilters"
            }
          },
          "projectLabelFilters": {
            "type": "array",
            "description": "Project Labels refers to labels that have been assigned to GCP projects. \nFor example, projectId \"mobingi-main\" assigned as \"env:prod\"\nIf you want to query lineitems with the label `env: prod`, set to `{\"env\":\"prod\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`.",
            "items": {
              "$ref": "#/components/schemas/coverCostGroupOptionsFilters"
            }
          }
        },
        "description": "GCP-specific options for CreateCostGroupRequest."
      },
      "coverCostGroupOptionsFilters": {
        "type": "object",
        "properties": {
          "andFilters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "coverCostGroupType": {
        "type": "string",
        "default": "default",
        "enum": [
          "default",
          "ai",
          "container"
        ]
      },
      "coverCsvInfo": {
        "type": "object",
        "properties": {
          "s3key": {
            "title": "The S3 key of the CSV file.\nFor example, \"path/to/file.csv\"",
            "type": "string"
          },
          "s3url": {
            "title": "The URL of the CSV file.\nFor example, \"https://s3.amazonaws.com/bucket/path/to/file.csv\"",
            "type": "string"
          },
          "requiredColumns": {
            "$ref": "#/components/schemas/coverRequiredColumns"
          }
        }
      },
      "coverCurrentEBSDetails": {
        "type": "object",
        "properties": {
          "attachmentState": {
            "type": "string"
          },
          "iops": {
            "type": "number",
            "format": "double"
          },
          "throughput": {
            "type": "number",
            "format": "double"
          },
          "sizeInGb": {
            "type": "number",
            "format": "double"
          },
          "costCalculation": {
            "$ref": "#/components/schemas/apicoverCostCalculation"
          }
        }
      },
      "coverCurrentEC2Details": {
        "type": "object",
        "properties": {
          "instanceType": {
            "type": "string"
          },
          "os": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "cpuUtilization": {
            "type": "number",
            "format": "double"
          },
          "memoryUtilization": {
            "type": "number",
            "format": "double"
          },
          "diskUtilization": {
            "type": "number",
            "format": "double"
          },
          "networkCapacity": {
            "type": "string"
          },
          "monthlyCost": {
            "type": "number",
            "format": "double"
          },
          "eC2CpuUtilization": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apicoverUtilizationData"
            }
          },
          "eC2DiskUtilization": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apicoverUtilizationData"
            }
          },
          "eC2MemoryUtilization": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apicoverUtilizationData"
            }
          },
          "networkTrafficData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apicoverUtilizationData"
            }
          },
          "otherDetails": {
            "$ref": "#/components/schemas/CurrentEC2DetailsOtherDetails"
          },
          "costCalculation": {
            "$ref": "#/components/schemas/apicoverCostCalculation"
          }
        }
      },
      "coverDeleteRecommendationDetails": {
        "type": "object",
        "properties": {
          "ec2Details": {
            "$ref": "#/components/schemas/coverCurrentEC2Details"
          },
          "ebsVolumeDetails": {
            "$ref": "#/components/schemas/coverEbsVolumeDetails"
          },
          "elasticIpAddressDetails": {
            "$ref": "#/components/schemas/coverElasticIpAddressDetails"
          },
          "idleRdsDetails": {
            "$ref": "#/components/schemas/coverIdleRdsDetails"
          },
          "idleLoadBalancerDetails": {
            "$ref": "#/components/schemas/coverIdleLoadBalancerDetails"
          },
          "exclusionStatus": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "coverEBSRecommendationDetails": {
        "type": "object",
        "properties": {
          "attachmentState": {
            "type": "string"
          },
          "iops": {
            "type": "number",
            "format": "double"
          },
          "throughput": {
            "type": "number",
            "format": "double"
          },
          "sizeInGb": {
            "type": "number",
            "format": "double"
          },
          "EstcostCalculation": {
            "$ref": "#/components/schemas/apicoverCostCalculation"
          }
        }
      },
      "coverEC2ModifyRecommendationDetails": {
        "type": "object",
        "properties": {
          "instanceType": {
            "type": "string"
          },
          "os": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "cpuUtilization": {
            "type": "number",
            "format": "double"
          },
          "memoryUtilization": {
            "type": "number",
            "format": "double"
          },
          "diskUtilization": {
            "type": "number",
            "format": "double"
          },
          "networkCapacity": {
            "type": "string"
          },
          "costCalculation": {
            "$ref": "#/components/schemas/apicoverCostCalculation"
          }
        }
      },
      "coverEC2Options": {
        "type": "object",
        "properties": {
          "instanceType": {
            "type": "string"
          },
          "tenancy": {
            "type": "string"
          },
          "family": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          }
        }
      },
      "coverEC2UpgadeDetails": {
        "type": "object",
        "properties": {
          "instanceType": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "usageAmount": {
            "type": "number",
            "format": "double"
          },
          "usageType": {
            "type": "string"
          }
        }
      },
      "coverEC2rightSizingDetails": {
        "type": "object",
        "properties": {
          "currentEC2Details": {
            "$ref": "#/components/schemas/coverCurrentEC2Details"
          },
          "eC2ModifyRecommendationDetails": {
            "$ref": "#/components/schemas/coverEC2ModifyRecommendationDetails"
          }
        }
      },
      "coverESDetails": {
        "type": "object",
        "properties": {
          "currentGeneration": {
            "type": "boolean"
          },
          "instanceClass": {
            "type": "string"
          },
          "instanceSize": {
            "type": "string"
          }
        }
      },
      "coverESOptions": {
        "type": "object",
        "properties": {
          "instanceClass": {
            "type": "string"
          },
          "instanceSize": {
            "type": "string"
          }
        }
      },
      "coverEbsVolumeDetails": {
        "type": "object",
        "properties": {
          "volumeId": {
            "type": "string"
          },
          "volumeSize": {
            "type": "string",
            "format": "int64"
          },
          "volumeType": {
            "type": "string"
          },
          "monthlyStorageCost": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverEcsRightSizingRecommendationDetails": {
        "type": "object",
        "properties": {
          "EcsCurrentConfiguration": {
            "$ref": "#/components/schemas/coverResourceDetails"
          },
          "EcsRecommendedConfiguration": {
            "$ref": "#/components/schemas/coverResourceDetails"
          }
        }
      },
      "coverElasticCacheDetails": {
        "type": "object",
        "properties": {
          "currentGeneration": {
            "type": "boolean"
          },
          "nodeType": {
            "type": "string"
          },
          "family": {
            "type": "string"
          }
        }
      },
      "coverElasticCacheOptions": {
        "type": "object",
        "properties": {
          "family": {
            "type": "string"
          },
          "nodeType": {
            "type": "string"
          },
          "productDescription": {
            "type": "string"
          }
        }
      },
      "coverElasticIpAddressDetails": {
        "type": "object",
        "properties": {
          "ipAddress": {
            "type": "string"
          },
          "service": {
            "type": "string"
          }
        }
      },
      "coverEstOutcomeFromPurchaseRIRecommendation": {
        "type": "object",
        "properties": {
          "aveUtilization": {
            "type": "number",
            "format": "double"
          },
          "aveNormalizedUnitsUsedPerHour": {
            "type": "number",
            "format": "double"
          },
          "aveNumberofInstanceUsedPerHour": {
            "type": "number",
            "format": "double"
          },
          "breakEvenInMonths": {
            "type": "number",
            "format": "double"
          },
          "monthlyOnDemandCost": {
            "type": "number",
            "format": "double"
          },
          "monthlyRICost": {
            "type": "number",
            "format": "double"
          },
          "monthlySavings": {
            "type": "number",
            "format": "double"
          },
          "monthlySavingsPercentage": {
            "type": "number",
            "format": "double"
          },
          "maxNormalizedUnitsUsedPerHour": {
            "type": "number",
            "format": "double"
          },
          "maxNumberOfInstanceUsedPerHour": {
            "type": "number",
            "format": "double"
          },
          "minNormalizedUnitsUsedPerHour": {
            "type": "number",
            "format": "double"
          },
          "minNumberOfInstanceUsedPerHour": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverEstOutcomeFromSPRecommendation": {
        "type": "object",
        "properties": {
          "aveCoverage": {
            "type": "number",
            "format": "double"
          },
          "aveUtilization": {
            "type": "number",
            "format": "double"
          },
          "monthlySavingsAmount": {
            "type": "number",
            "format": "double"
          },
          "onDemandCost": {
            "type": "number",
            "format": "double"
          },
          "roi": {
            "type": "number",
            "format": "double"
          },
          "savingsPlanCost": {
            "type": "number",
            "format": "double"
          },
          "savingsPercentage": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverEventIndicator": {
        "type": "object",
        "properties": {
          "anomaly": {
            "title": "Anomaly is supported for now",
            "type": "boolean"
          },
          "visualBuilder": {
            "title": "Temporary indicator if cost group was created via new visual builder",
            "type": "boolean"
          }
        }
      },
      "coverExecutedRecommendationDetails": {
        "type": "object",
        "properties": {
          "recommendationId": {
            "type": "string"
          },
          "recommendaton": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "completedDate": {
            "type": "string"
          },
          "estSavings": {
            "type": "number",
            "format": "double"
          },
          "estCost": {
            "type": "number",
            "format": "double"
          },
          "vendor": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "dateAdded": {
            "type": "string"
          },
          "personInCharge": {
            "type": "string"
          },
          "optimizationStatus": {
            "type": "string"
          }
        }
      },
      "coverExecutiveSummary": {
        "type": "object",
        "properties": {
          "costUsage": {
            "title": "The total cost usage of the current period",
            "type": "number",
            "format": "double"
          },
          "previousPeriodCostUsage": {
            "title": "The total cost usage of the previous period",
            "type": "number",
            "format": "double"
          },
          "status": {
            "title": "The status of the cost usage compared to the previous period. \"increased\", \"decreased\"",
            "type": "string"
          },
          "percentageChanged": {
            "title": "The percentage changed compared to the previous period",
            "type": "number",
            "format": "double"
          },
          "averageMonthlyChanged": {
            "title": "The average monthly changed",
            "type": "number",
            "format": "double"
          },
          "differenceFromPreviousPeriod": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverFavorites": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isPrivate": {
            "type": "boolean"
          },
          "icon": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "colorTheme": {
            "type": "string"
          },
          "reportType": {
            "type": "string"
          },
          "reportPeriod": {
            "type": "string"
          }
        }
      },
      "coverGcpDiscountRecommendations": {
        "type": "object"
      },
      "coverGcpInputs": {
        "type": "object"
      },
      "coverGcpOptions": {
        "type": "object",
        "properties": {
          "billingOption": {
            "$ref": "#/components/schemas/GcpOptionsBillingOption"
          },
          "projectOption": {
            "$ref": "#/components/schemas/GcpOptionsProjectOption"
          },
          "accountName": {
            "title": "We'll keep this to avoid crash in production. \nWe will remove this after this changes released to prod",
            "type": "string"
          },
          "projectId": {
            "title": "where dataset is stored",
            "type": "string"
          },
          "datasetId": {
            "type": "string"
          },
          "datasetRegion": {
            "type": "string"
          }
        }
      },
      "coverGoogleSheetInfo": {
        "type": "object",
        "properties": {
          "googleSheetId": {
            "title": "The ID of the Google Sheet.\nFor example, \"1BxiMVs0XRA5nFMd29P8v4g\"",
            "type": "string"
          },
          "sheetUrl": {
            "title": "The URL of the Google Sheet.\nFor example, \"https://docs.google.com/spreadsheets/d/1BxiMVs0XRA5nFMd29P8v4g/edit\"",
            "type": "string"
          },
          "sheetName": {
            "title": "The name of the sheet within the Google Sheet\nFor example, \"Sheet1\"",
            "type": "string"
          },
          "sheetRange": {
            "title": "The range of cells to read from the sheet.\nFor example, \"A1:D10\" to read cells A1 to D10",
            "type": "string"
          },
          "requiredColumns": {
            "$ref": "#/components/schemas/coverRequiredColumns"
          }
        }
      },
      "coverGranularBudgetData": {
        "type": "object",
        "properties": {
          "date": {
            "title": "use yyyymm format",
            "type": "string"
          },
          "budget": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "coverGranularForecastData": {
        "type": "object",
        "properties": {
          "date": {
            "title": "use yyyymm format",
            "type": "string"
          },
          "mid": {
            "type": "number",
            "format": "float"
          },
          "upperBound": {
            "type": "number",
            "format": "float"
          },
          "lowerBound": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "coverGranularSpendingData": {
        "type": "object",
        "properties": {
          "date": {
            "title": "use yyyymm format",
            "type": "string"
          },
          "value": {
            "title": "actual cost for the month",
            "type": "number",
            "format": "float"
          }
        }
      },
      "coverHighErrorRatesLambda": {
        "type": "object",
        "properties": {
          "avgDailyErrorRates": {
            "type": "number",
            "format": "double"
          },
          "avgDailyInvokes": {
            "type": "number",
            "format": "double"
          },
          "currentDayErrorRates": {
            "type": "number",
            "format": "double"
          },
          "currentDayInvokes": {
            "type": "number",
            "format": "double"
          },
          "dateForMaxErrorRates": {
            "type": "string"
          },
          "functionArn": {
            "type": "string"
          },
          "lostDailyComputeCost": {
            "type": "number",
            "format": "double"
          },
          "maxDailyErrorRates": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverIdleLoadBalancerDetails": {
        "type": "object",
        "properties": {
          "loadBalancerName": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "service": {
            "type": "string"
          }
        }
      },
      "coverIdleRdsDetails": {
        "type": "object",
        "properties": {
          "dbInstanceName": {
            "type": "string"
          },
          "daysSinceLastConnection": {
            "type": "string"
          },
          "instanceType": {
            "type": "string"
          },
          "multiAZ": {
            "type": "string"
          },
          "storageProvisioned": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverLambdaRightSizingRecommendationDetails": {
        "type": "object",
        "properties": {
          "lambdaCurrentConfiguration": {
            "$ref": "#/components/schemas/coverResourceDetails"
          },
          "lambdaRecommendedConfiguration": {
            "$ref": "#/components/schemas/coverResourceDetails"
          }
        }
      },
      "coverLayoutRequests": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "params": {
            "type": "object",
            "properties": {}
          },
          "hash": {
            "type": "string"
          }
        }
      },
      "coverMemberCostGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "colorTheme": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "coverMemberUserData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "colorTheme": {
            "type": "string"
          },
          "initial": {
            "type": "string"
          },
          "activated": {
            "type": "boolean"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locale": {
            "type": "string"
          },
          "timeZone": {
            "type": "string"
          },
          "registered": {
            "type": "string"
          },
          "ssoEnabled": {
            "type": "boolean"
          },
          "mfaEnabled": {
            "type": "boolean"
          },
          "appTheme": {
            "type": "string"
          },
          "mainView": {
            "type": "string"
          },
          "costGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverMemberCostGroup"
            }
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "coverMigrateEC2Details": {
        "type": "object",
        "properties": {
          "eC2CurrentDetails": {
            "$ref": "#/components/schemas/coverEC2UpgadeDetails"
          },
          "ugradeEC2RecommendationDetails": {
            "$ref": "#/components/schemas/coverEC2UpgadeDetails"
          },
          "currentCostCalculation": {
            "$ref": "#/components/schemas/apicoverCostCalculation"
          },
          "estCostCalculation": {
            "$ref": "#/components/schemas/apicoverCostCalculation"
          }
        }
      },
      "coverMigrateRDSDetails": {
        "type": "object",
        "properties": {
          "rdsDbInstance": {
            "$ref": "#/components/schemas/coverRDSDBInstance"
          }
        }
      },
      "coverMigrateRecommendationDetails": {
        "type": "object",
        "properties": {
          "migrateEC2Details": {
            "$ref": "#/components/schemas/coverMigrateEC2Details"
          },
          "migrateRDSDetails": {
            "$ref": "#/components/schemas/coverMigrateRDSDetails"
          },
          "estimatedMonthlyCost": {
            "type": "number",
            "format": "double"
          },
          "estimatedMonthlySavings": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverOptimizationRecommendationSummary": {
        "type": "object",
        "properties": {
          "potentialSavings": {
            "title": "Potential savings per month",
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "action": {
            "title": "The recommended action to perform to achieve potential savings",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "coverOtherRecommendationDetails": {
        "type": "object",
        "properties": {
          "highErrorRatesLambda": {
            "$ref": "#/components/schemas/coverHighErrorRatesLambda"
          },
          "s3IncompleteMultiPartUploadAbortConfiguration": {
            "$ref": "#/components/schemas/coverS3IncompleteMultiPartUploadAbortConfiguration"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "coverPotentialUnitItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "itemName": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "tag": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "coverPurchaseRIRecommendationDetails": {
        "type": "object",
        "properties": {
          "ec2Options": {
            "$ref": "#/components/schemas/apicoverEC2Details"
          },
          "elasticCacheOptions": {
            "$ref": "#/components/schemas/coverElasticCacheDetails"
          },
          "esOptions": {
            "$ref": "#/components/schemas/coverESDetails"
          },
          "rdsOptions": {
            "$ref": "#/components/schemas/apicoverRDSDetails"
          },
          "redshiftOptions": {
            "$ref": "#/components/schemas/apicoverRedshiftDetails"
          },
          "memoryDbOptions": {
            "$ref": "#/components/schemas/apicoverMemoryDBDetails"
          },
          "recommendedNormalizedUnits": {
            "type": "integer",
            "format": "int32"
          },
          "recommendedNumberOfInstanceToPurchase": {
            "type": "integer",
            "format": "int32"
          },
          "paymentOption": {
            "type": "string"
          },
          "offeringClass": {
            "type": "string"
          },
          "term": {
            "type": "string"
          },
          "upfrontCost": {
            "type": "number",
            "format": "double"
          },
          "instanceType": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "sizeFlexEligible": {
            "type": "boolean"
          },
          "tenancy": {
            "type": "string"
          },
          "currentGeneration": {
            "type": "boolean"
          },
          "estOutcomeFromPurchaseRIRecommendation": {
            "$ref": "#/components/schemas/coverEstOutcomeFromPurchaseRIRecommendation"
          }
        }
      },
      "coverRDSDBInstance": {
        "type": "object",
        "properties": {
          "currentDetails": {
            "$ref": "#/components/schemas/coverRDSDBInstanceDetails"
          },
          "recommendationDetails": {
            "$ref": "#/components/schemas/coverRDSDBInstanceDetails"
          },
          "cpuUtilization": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apicoverUtilizationData"
            }
          }
        }
      },
      "coverRDSDBInstanceDetails": {
        "type": "object",
        "properties": {
          "instanceClass": {
            "type": "string"
          },
          "costCalculation": {
            "$ref": "#/components/schemas/apicoverCostCalculation"
          }
        }
      },
      "coverRDSDBInstanceStorage": {
        "type": "object",
        "properties": {
          "currentDetails": {
            "$ref": "#/components/schemas/coverRDSDBInstanceStorageDetails"
          },
          "recommendationDetails": {
            "$ref": "#/components/schemas/coverRDSDBInstanceStorageDetails"
          }
        }
      },
      "coverRDSDBInstanceStorageDetails": {
        "type": "object",
        "properties": {
          "allocatedStorageInGb": {
            "type": "number",
            "format": "double"
          },
          "iops": {
            "type": "number",
            "format": "double"
          },
          "storageThroughput": {
            "type": "number",
            "format": "double"
          },
          "storageType": {
            "type": "string"
          },
          "costCalculation": {
            "$ref": "#/components/schemas/apicoverCostCalculation"
          }
        }
      },
      "coverRDSOptions": {
        "type": "object",
        "properties": {
          "dbEdition": {
            "type": "string"
          },
          "dbEngine": {
            "type": "string"
          },
          "deploymentOptions": {
            "type": "string"
          },
          "family": {
            "type": "string"
          },
          "instanceType": {
            "type": "string"
          },
          "licenseModel": {
            "type": "string"
          }
        }
      },
      "coverRDSRightsizingDetails": {
        "type": "object",
        "properties": {
          "rdsDbInstance": {
            "$ref": "#/components/schemas/coverRDSDBInstance"
          },
          "rdsDbInstanceStorage": {
            "$ref": "#/components/schemas/coverRDSDBInstanceStorage"
          }
        }
      },
      "coverRDSUpgradeDetails": {
        "type": "object",
        "properties": {
          "rdsDbInstance": {
            "$ref": "#/components/schemas/coverRDSDBInstance"
          },
          "rdsDbInstanceStorage": {
            "$ref": "#/components/schemas/coverRDSDBInstanceStorage"
          }
        }
      },
      "coverRecommendationDetail": {
        "type": "object",
        "properties": {
          "recommendation": {
            "type": "string"
          },
          "recommendedResourceType": {
            "type": "string"
          },
          "estimatedCost": {
            "type": "number",
            "format": "double"
          },
          "estimatedSavings": {
            "type": "number",
            "format": "double"
          },
          "region": {
            "type": "string"
          }
        }
      },
      "coverRedshiftOptions": {
        "type": "object",
        "properties": {
          "family": {
            "type": "string"
          },
          "nodeType": {
            "type": "string"
          }
        }
      },
      "coverRegistrationStatus": {
        "type": "object",
        "properties": {
          "apiAccess": {
            "type": "boolean"
          },
          "cloudwatchStreaming": {
            "type": "boolean"
          },
          "curExport": {
            "type": "boolean"
          },
          "payer": {
            "type": "boolean"
          },
          "stackSet": {
            "type": "boolean"
          },
          "transferAccount": {
            "type": "boolean"
          },
          "isDataAvailable": {
            "type": "boolean"
          }
        }
      },
      "coverRequiredColumns": {
        "type": "object",
        "properties": {
          "dateColumn": {
            "type": "string"
          },
          "amountColumn": {
            "type": "string"
          }
        }
      },
      "coverResourceData": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "resourceType": {
            "type": "string"
          },
          "recommendationDetail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverRecommendationDetail"
            }
          },
          "currentCost": {
            "type": "number",
            "format": "double"
          },
          "resourceName": {
            "type": "string"
          },
          "consumedService": {
            "type": "string"
          },
          "maxCpuUtilization": {
            "type": "number",
            "format": "double"
          },
          "maxStorageUtilization": {
            "type": "number",
            "format": "double"
          },
          "maxMemoryUtilization": {
            "type": "number",
            "format": "double"
          },
          "networkCapacity": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "coverResourceDetails": {
        "type": "object",
        "properties": {
          "architecture": {
            "type": "string"
          },
          "memorysizeInMB": {
            "type": "number",
            "format": "double"
          },
          "platform": {
            "type": "string"
          },
          "vCpu": {
            "type": "integer",
            "format": "int32"
          },
          "costCalculation": {
            "$ref": "#/components/schemas/apicoverCostCalculation"
          }
        }
      },
      "coverResourcesCombinations": {
        "type": "object",
        "properties": {
          "awsOptions": {
            "$ref": "#/components/schemas/coverCostGroupAwsOptions"
          },
          "azureOptions": {
            "$ref": "#/components/schemas/coverCostGroupAzureOptions"
          },
          "gcpOptions": {
            "$ref": "#/components/schemas/coverCostGroupGcpOptions"
          },
          "azurecspOptions": {
            "$ref": "#/components/schemas/coverCostGroupAzureCspOptions"
          }
        }
      },
      "coverRiRecommendationDetails": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "recommendedNumberOfInstanceToPurchase": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "ec2Options": {
            "$ref": "#/components/schemas/coverEC2Options"
          },
          "elasticCacheOptions": {
            "$ref": "#/components/schemas/coverElasticCacheOptions"
          },
          "esOptions": {
            "$ref": "#/components/schemas/coverESOptions"
          },
          "rdsOptions": {
            "$ref": "#/components/schemas/coverRDSOptions"
          },
          "redshiftOptions": {
            "$ref": "#/components/schemas/coverRedshiftOptions"
          },
          "region": {
            "type": "string"
          },
          "sizeFlexEligible": {
            "type": "boolean"
          },
          "currentGeneration": {
            "type": "boolean"
          },
          "upfrontCost": {
            "type": "number",
            "format": "double"
          },
          "estimatedMonthlySavings": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverRiRecommendationResults": {
        "type": "object",
        "properties": {
          "riSummary": {
            "$ref": "#/components/schemas/coverRiSummary"
          },
          "riRecommendationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverRiRecommendationDetails"
            }
          }
        }
      },
      "coverRiSummary": {
        "type": "object",
        "properties": {
          "totalPurchaseRecommendations": {
            "type": "string",
            "format": "int64"
          },
          "estimatedMonthlySavings": {
            "type": "number",
            "format": "double"
          },
          "estimatedSavingsVSOnDemandRates": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverRightSizingRecommendationDetails": {
        "type": "object",
        "properties": {
          "ec2RightSizingDetails": {
            "$ref": "#/components/schemas/coverEC2rightSizingDetails"
          },
          "lambdaRightSizingRecommendationDetails": {
            "$ref": "#/components/schemas/coverLambdaRightSizingRecommendationDetails"
          },
          "ebsRightSizingRecommendationDetails": {
            "$ref": "#/components/schemas/apicoverEBSDetails"
          },
          "ecsRightSizingRecommendationDetails": {
            "$ref": "#/components/schemas/coverEcsRightSizingRecommendationDetails"
          },
          "rdsRightSizingRecommendationDetails": {
            "$ref": "#/components/schemas/coverRDSRightsizingDetails"
          },
          "estimatedMonthlyCost": {
            "type": "number",
            "format": "double"
          },
          "estimatedMonthlySavings": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverRowData": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "coverS3IncompleteMultiPartUploadAbortConfiguration": {
        "type": "object",
        "properties": {
          "bucketArn": {
            "type": "string"
          },
          "bucketName": {
            "type": "string"
          },
          "lifeCycleRuleForDeletingIncompleteMCU": {
            "type": "string"
          },
          "daysAfterInitiation": {
            "type": "string"
          }
        }
      },
      "coverSPCurrentUtilizationDetails": {
        "type": "object",
        "properties": {
          "aveCoverage": {
            "type": "number",
            "format": "double"
          },
          "aveHourOnDemandSpend": {
            "type": "number",
            "format": "double"
          },
          "maxHourlyOndemandSpend": {
            "type": "number",
            "format": "double"
          },
          "minHourlyOndemandSpend": {
            "type": "number",
            "format": "double"
          },
          "existingHourlyCommitment": {
            "type": "number",
            "format": "double"
          },
          "estOnDemandCostWithHourlyCommitment": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverSavingsPlanRecommendationDetails": {
        "type": "object",
        "properties": {
          "currencyCode": {
            "type": "string"
          },
          "hourlyCommitmentToPurchase": {
            "type": "number",
            "format": "double"
          },
          "offeringId": {
            "type": "string"
          },
          "paymentOption": {
            "type": "string"
          },
          "savingsPlanType": {
            "type": "string"
          },
          "term": {
            "type": "string"
          },
          "upfrontCost": {
            "type": "number",
            "format": "double"
          },
          "currentUtilizationDetails": {
            "$ref": "#/components/schemas/coverSPCurrentUtilizationDetails"
          },
          "estOutcomeFromSPRecommendation": {
            "$ref": "#/components/schemas/coverEstOutcomeFromSPRecommendation"
          }
        }
      },
      "coverSavingsSummary": {
        "type": "object",
        "properties": {
          "totalRecommendations": {
            "title": "Total number of detected recommendation for a given period",
            "type": "string",
            "format": "int64"
          },
          "totalExecutedRecommendations": {
            "title": "Total number of executed recommendations for a given period",
            "type": "string",
            "format": "int64"
          },
          "totalEstimatedSavings": {
            "title": "Total of estimated savings for a given period, as a result of executed recommendations",
            "type": "number",
            "format": "double"
          },
          "totalEstimatedCost": {
            "title": "Total of estimated cost for a given period, as a result of executed recommendations",
            "type": "number",
            "format": "double"
          },
          "percentageSavings": {
            "title": "Total of estimated percentage savings for a given period, as a result of executed recommendations",
            "type": "number",
            "format": "double"
          },
          "mostEffectiveRecommendation": {
            "title": "The most effective recommendation",
            "type": "string"
          },
          "mostEffectiveRecommendationEstimatedSavings": {
            "title": "The most effective recommendation savings",
            "type": "number",
            "format": "double"
          },
          "mostEffectiveRecommendationEstimatedCost": {
            "title": "The most effective recommendation cost",
            "type": "number",
            "format": "double"
          },
          "mostEffectiveRecommendationPercentageSavings": {
            "title": "The most effective recommendation percentage savings",
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverSharedResourcesCombination": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "combinationName": {
            "type": "string"
          },
          "sharedResourcesCombinations": {
            "$ref": "#/components/schemas/coverResourcesCombinations"
          },
          "distribution": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "description": "List the unit items and their corresponding percentages."
          },
          "allocated": {
            "type": "number",
            "format": "double"
          },
          "unallocated": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverSideMenu": {
        "type": "object",
        "properties": {
          "favorite": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isOpenedAdmin": {
            "type": "boolean"
          },
          "isOpenedFeatures": {
            "type": "boolean"
          },
          "isOpenedCostGroups": {
            "type": "boolean"
          }
        }
      },
      "coverSideMenuState": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "boolean"
          }
        }
      },
      "coverSourceInfo": {
        "type": "object",
        "properties": {
          "dataSource": {
            "type": "string"
          },
          "csv": {
            "$ref": "#/components/schemas/coverCsvInfo"
          },
          "googleSheet": {
            "$ref": "#/components/schemas/coverGoogleSheetInfo"
          },
          "cloudWatch": {
            "$ref": "#/components/schemas/coverCloudWatchInfo"
          },
          "telemetry": {
            "$ref": "#/components/schemas/coverTelemetryInfo"
          }
        }
      },
      "coverSpRecommendationDetails": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "hourlyCommitmentToPurchase": {
            "type": "number",
            "format": "double"
          },
          "estimatedMonthlySavingsAmount": {
            "type": "number",
            "format": "double"
          },
          "estimatedSavingsPercentage": {
            "type": "number",
            "format": "double"
          },
          "estimatedAverageCoverage": {
            "type": "number",
            "format": "double"
          },
          "estimatedAverageUtilization": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverSpRecommendationResults": {
        "type": "object",
        "properties": {
          "spSummary": {
            "$ref": "#/components/schemas/coverSpSummary"
          },
          "spRecommendationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverSpRecommendationDetails"
            }
          }
        }
      },
      "coverSpSummary": {
        "type": "object",
        "properties": {
          "currentOnDemandSpend": {
            "type": "number",
            "format": "double"
          },
          "estimatedMonthlySpend": {
            "type": "number",
            "format": "double"
          },
          "estimatedMonthlySavings": {
            "type": "number",
            "format": "double"
          },
          "totalRecommendationCount": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "coverStopEC2InstanceRecommendationDetails": {
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "string"
          },
          "instanceType": {
            "type": "string"
          },
          "AveCpuUtilizationBy14Day": {
            "type": "number",
            "format": "double"
          },
          "AveNetworkIOBy14Day": {
            "type": "number",
            "format": "double"
          },
          "cpuUtilization": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apicoverUtilizationData"
            }
          },
          "netWorkIO": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apicoverUtilizationData"
            }
          }
        }
      },
      "coverStopInstanceRecommendationDetails": {
        "type": "object",
        "properties": {
          "stopEC2InstanceRecommendationDetails": {
            "$ref": "#/components/schemas/coverStopEC2InstanceRecommendationDetails"
          },
          "stopRDSRecommendationDetails": {
            "$ref": "#/components/schemas/coverStopRDSDetails"
          }
        }
      },
      "coverStopRDSDetails": {
        "type": "object",
        "properties": {
          "rdsDBInstance": {
            "$ref": "#/components/schemas/coverRDSDBInstance"
          }
        }
      },
      "coverSuggestedUnit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "potentialUnitName": {
            "type": "string"
          },
          "potentialUnitItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverPotentialUnitItem"
            }
          }
        }
      },
      "coverTelemetryInfo": {
        "type": "object"
      },
      "coverThreshold": {
        "type": "object",
        "properties": {
          "type": {
            "title": "exact or percentage",
            "type": "string"
          },
          "value": {
            "title": "actual value of threshold",
            "type": "number",
            "format": "float"
          }
        }
      },
      "coverUnitCostData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "unitName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "unitItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverUnitItem"
            }
          },
          "vendors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sharedResources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverSharedResourcesCombination"
            }
          },
          "createdBy": {
            "type": "string"
          },
          "createTime": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          }
        }
      },
      "coverUnitItem": {
        "type": "object",
        "properties": {
          "itemName": {
            "type": "string"
          },
          "distribution": {
            "type": "number",
            "format": "double"
          },
          "dedicatedResourcesCombinations": {
            "$ref": "#/components/schemas/coverResourcesCombinations"
          },
          "vendors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createTime": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          }
        }
      },
      "coverUnitMetric": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "metricName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "aggregationMethod": {
            "type": "string"
          },
          "dataSource": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "costgroupId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sourceInfo": {
            "$ref": "#/components/schemas/coverSourceInfo"
          },
          "createdBy": {
            "type": "string"
          },
          "createTime": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          }
        }
      },
      "coverUpgradeEC2Details": {
        "type": "object",
        "properties": {
          "eC2CurrentDetails": {
            "$ref": "#/components/schemas/coverEC2UpgadeDetails"
          },
          "ugradeEC2RecommendationDetails": {
            "$ref": "#/components/schemas/coverEC2UpgadeDetails"
          },
          "currentCostCalculation": {
            "$ref": "#/components/schemas/apicoverCostCalculation"
          },
          "estimatedCostCalculation": {
            "$ref": "#/components/schemas/apicoverCostCalculation"
          }
        }
      },
      "coverUpgradeRecommendationDetails": {
        "type": "object",
        "properties": {
          "upgradeEC2Details": {
            "$ref": "#/components/schemas/coverUpgradeEC2Details"
          },
          "upgradeEBSDetails": {
            "$ref": "#/components/schemas/apicoverEBSDetails"
          },
          "upgradeRDSDetails": {
            "$ref": "#/components/schemas/coverRDSUpgradeDetails"
          },
          "estimatedMonthlyCost": {
            "type": "number",
            "format": "double"
          },
          "estimatedMonthlySavings": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "coverUserData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "colorTheme": {
            "type": "string"
          },
          "initial": {
            "type": "string"
          },
          "activated": {
            "type": "boolean"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locale": {
            "type": "string"
          },
          "timeZone": {
            "type": "string"
          },
          "registered": {
            "type": "string"
          },
          "ssoEnabled": {
            "type": "boolean"
          },
          "mfaEnabled": {
            "type": "boolean"
          },
          "appTheme": {
            "type": "string"
          },
          "mainView": {
            "type": "string"
          },
          "costGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverMemberCostGroup"
            }
          },
          "createdBy": {
            "$ref": "#/components/schemas/coverMemberUserData"
          },
          "updatedAt": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "isProfilingDone": {
            "type": "boolean"
          },
          "passwordLastRenewed": {
            "type": "string"
          },
          "isOwner": {
            "type": "boolean"
          },
          "isAuth0": {
            "type": "boolean"
          },
          "readCostGroupCreationPopup": {
            "type": "boolean"
          },
          "useNewCostGroupCreationUI": {
            "type": "boolean"
          },
          "autoTimeZone": {
            "type": "boolean"
          }
        }
      },
      "coverViewData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isPrivate": {
            "type": "boolean"
          },
          "isEditable": {
            "type": "boolean"
          },
          "icon": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/coverMemberUserData"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/coverMemberUserData"
          },
          "updatedAt": {
            "type": "string"
          },
          "layout": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverWidgetData"
            }
          },
          "sideMenu": {
            "$ref": "#/components/schemas/coverSideMenu"
          },
          "reportType": {
            "type": "string"
          },
          "colorTheme": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "reportPeriod": {
            "type": "string"
          }
        }
      },
      "coverViewLayout": {
        "type": "object",
        "properties": {
          "widgetId": {
            "type": "string"
          },
          "widgetData": {
            "$ref": "#/components/schemas/coverWidgetData"
          }
        }
      },
      "coverViewList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isPrivate": {
            "type": "boolean"
          },
          "isEditable": {
            "type": "boolean"
          },
          "icon": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "colorTheme": {
            "type": "string"
          },
          "reportType": {
            "type": "string"
          },
          "reportPeriod": {
            "type": "string"
          }
        }
      },
      "coverWidgetData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "componentId": {
            "type": "string"
          },
          "options": {
            "type": "object",
            "properties": {}
          },
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverLayoutRequests"
            }
          }
        }
      },
      "coverv1FeeDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "month": {
            "type": "string"
          },
          "lineType": {
            "type": "string"
          },
          "feeType": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "started": {
            "type": "string"
          },
          "timeInterval": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "splitStatus": {
            "type": "string"
          },
          "isAllocated": {
            "type": "boolean"
          },
          "isApplied": {
            "type": "boolean"
          },
          "unblendedCost": {
            "type": "number",
            "format": "double"
          },
          "sourceFee": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string"
          }
        },
        "description": "Response message for GetFeeDetails, CreateFeeReallocation rpc."
      },
      "coverv1Status": {
        "title": "Status of upload file",
        "type": "string",
        "default": "PENDING",
        "enum": [
          "PENDING",
          "IN_PROGRESS",
          "SUCCESS",
          "FAILED"
        ]
      },
      "gcpGCPRecommendations": {
        "type": "object",
        "properties": {
          "recommendationHubRecommendations": {
            "$ref": "#/components/schemas/gcpRecommendationHubRecommendations"
          }
        }
      },
      "gcpRecommendationHubRecommendations": {
        "type": "object",
        "properties": {
          "insights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecommendationHubRecommendationsInsights"
            }
          },
          "recommendedAction": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          },
          "priorityLevel": {
            "type": "string"
          }
        }
      },
      "googlerpcStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
          },
          "details": {
            "type": "array",
            "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
            "items": {
              "$ref": "#/components/schemas/protobufAny"
            }
          }
        },
        "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
      },
      "octoawsOctoGeneratedAWSRecommendations": {
        "type": "object",
        "properties": {
          "currentDetails": {
            "$ref": "#/components/schemas/octoawsOctoGeneratedAWSRecommendationsDetails"
          },
          "recommendationDetails": {
            "$ref": "#/components/schemas/octoawsOctoGeneratedAWSRecommendationsDetails"
          }
        }
      },
      "octoawsOctoGeneratedAWSRecommendationsDetails": {
        "type": "object",
        "properties": {
          "ec2Details": {
            "$ref": "#/components/schemas/awsAWSResourceDetailsEC2Details"
          }
        }
      },
      "octoazurecspOctoGeneratedAzureCSPRecommendations": {
        "type": "object"
      },
      "octogcpOctoGeneratedGCPRecommendations": {
        "type": "object"
      },
      "pricingPricingData": {
        "title": "Pricing details",
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string",
            "description": "Cloud vendor."
          },
          "service": {
            "type": "string",
            "description": "Cloud vendor service. We have a limited number of services supported currently.\nRefer to https://labs.alphaus.cloud/blueapidocs/#/Pricing/Pricing_GetSupportedServices to list supported services."
          },
          "regionCode": {
            "type": "string",
            "description": "Region code."
          },
          "sku": {
            "type": "string",
            "description": "SKU ID."
          },
          "unit": {
            "type": "string",
            "description": "Unit of measure."
          },
          "pricePerUnit": {
            "type": "number",
            "description": "Price per unit.",
            "format": "double"
          },
          "serviceDetails": {
            "type": "object",
            "properties": {},
            "description": "Service details. A protobuf struct which translates to a map for HTTP. Keys are of type string and values can be of type string, float, or bool, depending on the detail.\n\nThe following is an example of a serviceDetails field of a response,\n```\n\"serviceDetails\": {\n  \"availabilityZone\": \"NA\",\n  \"capacityStatus\": \"Used\",\n  \"classicNetworkingSupport\": \"false\",\n  \"clockSpeed\": \"3.5 GHz\",\n  \"currency\": \"USD\",\n  \"currentGeneration\": \"Yes\",\n  \"dedicatedEbsThroughput\": \"Up to 10000 Mbps\",\n  \"ebsOptimized\": \"\",\n  \"ecu\": \"NA\",\n  \"effectiveDate\": \"2022-04-01\",\n  \"elasticGraphicsType\": \"\",\n  \"endingRange\": \"Inf\",\n  \"enhancedNetworkingSupported\": \"Yes\",\n  \"fromLocation\": \"\",\n  \"fromLocationType\": \"\",\n  \"fromRegionCode\": \"\",\n  \"gpu\": \"\",\n  \"gpuMemory\": \"NA\",\n  \"groupDescription\": \"\",\n  \"groupings\": \"\",\n  \"instance\": \"\",\n  \"instanceCapacity10Xlarge\": \"\",\n  \"instanceCapacity12Xlarge\": \"\",\n  \"instanceCapacity16Xlarge\": \"\",\n  \"instanceCapacity18Xlarge\": \"\",\n  \"instanceCapacity24Xlarge\": \"\",\n  \"instanceCapacity2Xlarge\": \"\",\n  \"instanceCapacity32Xlarge\": \"\",\n  \"instanceCapacity4Xlarge\": \"\",\n  \"instanceCapacity8Xlarge\": \"\",\n  \"instanceCapacity9Xlarge\": \"\",\n  \"instanceCapacityLarge\": \"\",\n  \"instanceCapacityMedium\": \"\",\n  \"instanceCapacityMetal\": \"\",\n  \"instanceCapacityXlarge\": \"\",\n  \"instanceFamily\": \"Compute optimized\",\n  \"instanceSku\": \"\",\n  \"instanceType\": \"c6i.large\",\n  \"intelAvx2Available\": \"Yes\",\n  \"intelAvxAvailable\": \"Yes\",\n  \"intelTurboAvailable\": \"Yes\",\n  \"leaseContractLength\": \"1yr\",\n  \"licenseModel\": \"No License required\",\n  \"location\": \"Asia Pacific (Tokyo)\",\n  \"locationType\": \"AWS Region\",\n  \"marketOption\": \"OnDemand\",\n  \"maxIopsBurstPerformance\": \"\",\n  \"maxIopsVolume\": \"\",\n  \"maxThroughputVolume\": \"\",\n  \"maxVolumeSize\": \"\",\n  \"memory\": \"4 GiB\",\n  \"networkPerformance\": \"Up to 12500 Megabit\",\n  \"normalizationSizeFactor\": \"4\",\n  \"offerTermCode\": \"4NA7Y494T4\",\n  \"offeringClass\": \"standard\",\n  \"operatingSystem\": \"Windows\",\n  \"operation\": \"RunInstances:0202\",\n  \"physicalCores\": \"\",\n  \"physicalProcessor\": \"Intel Xeon 8375C (Ice Lake)\",\n  \"preInstalledSw\": \"SQL Web\",\n  \"priceDescription\": \"Windows with SQL Server Web (Amazon VPC), c6i.large reserved instance applied\",\n  \"processorArchitecture\": \"64-bit\",\n  \"processorFeatures\": \"Intel AVX; Intel AVX2; Intel AVX512; Intel Turbo\",\n  \"productFamily\": \"Compute Instance\",\n  \"productType\": \"\",\n  \"provisioned\": \"\",\n  \"purchaseOption\": \"No Upfront\",\n  \"rateCode\": \"2223B6PCG6QAUYY6.4NA7Y494T4.6YS6EN2CT7\",\n  \"relatedTo\": \"\",\n  \"resourceType\": \"\",\n  \"serviceCode\": \"AmazonEC2\",\n  \"serviceName\": \"Amazon Elastic Compute Cloud\",\n  \"snapShotArchiveFeeType\": \"\",\n  \"startingRange\": \"0\",\n  \"storage\": \"EBS only\",\n  \"storageMedia\": \"\",\n  \"tenancy\": \"Dedicated\",\n  \"termType\": \"Reserved\",\n  \"toLocation\": \"\",\n  \"toLocationType\": \"\",\n  \"toRegionCode\": \"\",\n  \"transferType\": \"\",\n  \"usageType\": \"APN1-DedicatedUsage:c6i.large\",\n  \"vcpu\": \"2\",\n  \"volumeApiName\": \"\",\n  \"volumeType\": \"\",\n  \"vpcNetworkingSupport\": \"true\"\n}\n```"
          }
        }
      },
      "protobufAny": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
          }
        },
        "additionalProperties": {
          "type": "object"
        },
        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
      },
      "protobufNullValue": {
        "type": "string",
        "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value.",
        "default": "NULL_VALUE",
        "enum": [
          "NULL_VALUE"
        ]
      },
      "protosOperation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The server-assigned name."
          },
          "metadata": {
            "$ref": "#/components/schemas/protobufAny"
          },
          "done": {
            "type": "boolean",
            "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable."
          },
          "error": {
            "$ref": "#/components/schemas/googlerpcStatus"
          },
          "response": {
            "$ref": "#/components/schemas/protobufAny"
          }
        },
        "description": "This resource represents a long-running operation that is the result of a\nnetwork API call."
      },
      "recommendationOCTOGeneratedRecommendations": {
        "type": "object",
        "properties": {
          "aws": {
            "$ref": "#/components/schemas/octoawsOctoGeneratedAWSRecommendations"
          },
          "gcp": {
            "$ref": "#/components/schemas/octogcpOctoGeneratedGCPRecommendations"
          },
          "azurecsp": {
            "$ref": "#/components/schemas/octoazurecspOctoGeneratedAzureCSPRecommendations"
          }
        }
      },
      "recommendationRecommendationData": {
        "type": "object",
        "properties": {
          "awsRecommendations": {
            "$ref": "#/components/schemas/recommendationawsAWSRecommendations"
          },
          "gcpRecommendations": {
            "$ref": "#/components/schemas/gcpGCPRecommendations"
          },
          "azureCspRecommendations": {
            "$ref": "#/components/schemas/azurecspAzureCSPRecommendations"
          },
          "octoGeneratedRecommendations": {
            "$ref": "#/components/schemas/recommendationOCTOGeneratedRecommendations"
          },
          "target": {
            "type": "string"
          },
          "targetName": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "costGroup": {
            "type": "string"
          },
          "recommendationGroup": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "recommendation": {
            "type": "string"
          },
          "estimatedMonthlyCost": {
            "type": "number",
            "format": "double"
          },
          "estimatedMonthlySavings": {
            "type": "number",
            "format": "double"
          },
          "estimatedSavingsPercentage": {
            "type": "number",
            "format": "double"
          },
          "resourceName": {
            "type": "string"
          },
          "restartNeeded": {
            "type": "boolean"
          },
          "rollbackPossible": {
            "type": "boolean"
          },
          "launchUrl": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "recommendationawsAWSRecommendations": {
        "type": "object",
        "properties": {
          "costExplorerRecommendations": {
            "$ref": "#/components/schemas/awsCostExplorerRecommendations"
          },
          "costOptimizationHubRecommendations": {
            "$ref": "#/components/schemas/awsCostOptimizationHubRecommendations"
          },
          "trustedAdvisorRecommendations": {
            "$ref": "#/components/schemas/awsTrustedAdvisorRecommendations"
          },
          "resourceArn": {
            "type": "string"
          }
        }
      },
      "rippleAssigned": {
        "required": [
          "fixed",
          "percentage"
        ],
        "type": "object",
        "properties": {
          "percentage": {
            "type": "integer",
            "description": "Required.  This value can be up to 100.",
            "format": "int32"
          },
          "fixed": {
            "type": "integer",
            "description": "Required.",
            "format": "int32"
          }
        },
        "description": "Assigned resource definition."
      },
      "rippleAssignedBillingGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique id of the billing group internal."
          },
          "groupId": {
            "type": "string",
            "description": "The unique id of the billing group."
          },
          "groupName": {
            "type": "string",
            "description": "The name of the billing group."
          },
          "accounts": {
            "type": "array",
            "description": "A list of accounts.",
            "items": {
              "$ref": "#/components/schemas/blueapiapiAccount"
            }
          },
          "assigned": {
            "$ref": "#/components/schemas/rippleAssigned"
          }
        },
        "description": "AssignedBillingGroup resource definition."
      },
      "rippleBillingGroupExchangeRate": {
        "type": "object",
        "properties": {
          "billingInternalId": {
            "type": "string",
            "description": "The billing group's internal id."
          },
          "billingGroupId": {
            "type": "string",
            "description": "The billing group's id."
          },
          "billingGroupName": {
            "type": "string",
            "description": "The billing group's name."
          },
          "exchangeRate": {
            "type": "array",
            "description": "The exchange rate.",
            "items": {
              "$ref": "#/components/schemas/rippleExchangeRate"
            }
          }
        },
        "description": "BillingGroupExchangeRate resource definition."
      },
      "rippleBillingGroupInfo": {
        "type": "object",
        "properties": {
          "billingTitle": {
            "title": "Optional. The title of the billing",
            "type": "string"
          },
          "phoneNumber": {
            "title": "Optional. Company’s phone number",
            "type": "string"
          },
          "postalCode": {
            "title": "Optional. Company’s postal code",
            "type": "string"
          },
          "address": {
            "title": "Optional. Company’s address",
            "type": "string"
          },
          "personal": {
            "title": "Optional. Addressee",
            "type": "string"
          },
          "remarks": {
            "title": "Optional. Any remarks about the billing group",
            "type": "string"
          },
          "projectId": {
            "title": "Optional. Project code",
            "type": "string"
          },
          "language": {
            "title": "Optional. Invoice language",
            "type": "string"
          },
          "displayCost": {
            "title": "Optional. Calculation type, true unblended or unblended",
            "type": "string"
          },
          "exchangeRateType": {
            "title": "Optional. Exchange rate type, payer or billing group",
            "type": "string"
          },
          "qrCode": {
            "title": "Optional. qrCode",
            "type": "boolean"
          },
          "invoiceTemplateId": {
            "title": "Optional. Invoice template Id",
            "type": "string"
          },
          "city": {
            "title": "Optional. Company's city",
            "type": "string"
          },
          "prefecture": {
            "title": "Optional. Company's prefecture",
            "type": "string"
          },
          "country": {
            "title": "Optional. Company's country",
            "type": "string"
          },
          "state": {
            "title": "Optional. Company's state",
            "type": "string"
          },
          "addressLine1": {
            "title": "Optional. Company's street address (primary line)",
            "type": "string"
          },
          "addressLine2": {
            "title": "Optional. Company's street address (secondary line, e.g., apartment, suite, unit)",
            "type": "string"
          }
        },
        "description": "BillingGroupInfo resource definition. Only available in Ripple."
      },
      "rippleChargingTarget": {
        "type": "string",
        "description": "Charging target\nIndicates that `ChargingTarget` in the setting applies to either BillingGroup or Account.\n\n - BILLINGGROUP: billing group\n - ACCOUNT: account",
        "default": "BILLINGGROUP",
        "enum": [
          "BILLINGGROUP",
          "ACCOUNT"
        ]
      },
      "rippleCommonExchangeRate": {
        "type": "object",
        "properties": {
          "aws": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/rippleExchangeRate"
            }
          },
          "gcp": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/rippleExchangeRate"
            }
          },
          "azure": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/rippleExchangeRate"
            }
          }
        },
        "description": "CommonExchangeRate resource definition."
      },
      "rippleCustomizedBillingService": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "methodConfig": {
            "$ref": "#/components/schemas/rippleMethodConfig"
          },
          "created": {
            "type": "string",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": "CustomizedBillingService resource definition."
      },
      "rippleDueDate": {
        "type": "object",
        "properties": {
          "dueDateDay": {
            "type": "string",
            "description": "Due date set on the invoice\nRefer to the following for available values\nbeginning_of_month: The beginning date of the month is automatically set.\nend_of_month: The end date of the month is automatically set.\ncustom: Date can be specified."
          },
          "dueDateMonth": {
            "type": "string",
            "description": "Due month set on the invoice\nRefer to the following for available values\nthis_month: This month is automatically set.\nnext_month: Next month is automatically set.\nmonth_after_next: Month after next is automatically set."
          },
          "dueDateCustomDay": {
            "title": "Customized due date set on the invoice\nRange 1 ~ 31",
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "DueDate resource definition."
      },
      "rippleExchangeRate": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "The currency code."
          },
          "rate": {
            "type": "number",
            "description": "The rate.",
            "format": "double"
          }
        },
        "description": "ExchangeRate resource definition."
      },
      "rippleFixedFee": {
        "title": "fixed fee",
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "rippleFixedFeeOrPercentage": {
        "title": "fixed fee or percentage",
        "type": "object",
        "properties": {
          "fixedFeeValue": {
            "type": "number",
            "format": "double"
          },
          "percentageValue": {
            "type": "number",
            "format": "double"
          },
          "service": {
            "$ref": "#/components/schemas/rippleTargetServiceConfig"
          },
          "usage": {
            "$ref": "#/components/schemas/rippleTargetUsageConfig"
          },
          "discounted": {
            "type": "boolean"
          },
          "upperLimit": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "rippleInvoiceLayout": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/rippleaccountInvoiceLayout"
          },
          "total": {
            "$ref": "#/components/schemas/rippletotalInvoiceLayout"
          },
          "body": {
            "$ref": "#/components/schemas/ripplebodyInvoiceLayout"
          },
          "footer": {
            "$ref": "#/components/schemas/ripplefooterInvoiceLayout"
          },
          "header": {
            "$ref": "#/components/schemas/rippleheaderInvoiceLayout"
          },
          "report": {
            "$ref": "#/components/schemas/ripplereportInvoiceLayout"
          }
        },
        "description": "WORK-IN-PROGRESS: InvoiceLayout resource definition.\nDefinitions related to invoice display."
      },
      "rippleMethodConfig": {
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/MethodConfigCurrency"
          },
          "chargingMethod": {
            "$ref": "#/components/schemas/MethodConfigChargingMethod"
          },
          "fixedFee": {
            "$ref": "#/components/schemas/rippleFixedFee"
          },
          "percentage": {
            "$ref": "#/components/schemas/ripplePercentage"
          },
          "fixedFeeOrPercentage": {
            "$ref": "#/components/schemas/rippleFixedFeeOrPercentage"
          },
          "TieredPrice": {
            "$ref": "#/components/schemas/rippleTieredPrice"
          },
          "TieredPercentage": {
            "$ref": "#/components/schemas/rippleTieredPercentage"
          }
        },
        "description": "MethodConfig resource definition."
      },
      "rippleOrg": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The unique name (or id) of the organization."
          },
          "email": {
            "type": "string",
            "description": "The registered email of the organization."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The metadata (key/value pair) of the organization. If hierarchy is supported, it will be\nseparated by '/', such as 'metakey/subkey=value'. See https://alphauslabs.github.io/blueapi/\nfor the list of supported attributes."
          }
        },
        "description": "Org resource definition."
      },
      "ripplePayer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The payer account id."
          },
          "name": {
            "type": "string",
            "description": "The payer account name."
          },
          "metadata": {
            "type": "array",
            "description": "The attributes (key/value pair) of the account.",
            "items": {
              "$ref": "#/components/schemas/apiKeyValue"
            }
          },
          "members": {
            "type": "array",
            "description": "List of all members under this payer.",
            "items": {
              "$ref": "#/components/schemas/blueapiapiAccount"
            }
          }
        },
        "description": "Payer resource definition."
      },
      "ripplePayerExchangeRate": {
        "type": "object",
        "properties": {
          "payerAccountId": {
            "type": "string",
            "description": "The payer account Id."
          },
          "payerAccountName": {
            "type": "string",
            "description": "The payer account Name."
          },
          "exchangeRate": {
            "type": "array",
            "description": "The exchange rate.",
            "items": {
              "$ref": "#/components/schemas/rippleExchangeRate"
            }
          }
        },
        "description": "PayerExchangeRate resource definition."
      },
      "ripplePercentage": {
        "title": "percentage",
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "service": {
            "$ref": "#/components/schemas/rippleTargetServiceConfig"
          },
          "usage": {
            "$ref": "#/components/schemas/rippleTargetUsageConfig"
          },
          "discounted": {
            "type": "boolean"
          }
        }
      },
      "rippleReseller": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "reseller id. Generated automatically."
          },
          "email": {
            "title": "email",
            "type": "string"
          },
          "groupId": {
            "title": "groupId includes `billingInternalId` or `accessGroupId`",
            "type": "string"
          },
          "groupName": {
            "title": "groupName includes `billingInternalName` or `accessGroupName`",
            "type": "string"
          },
          "groupType": {
            "type": "string",
            "description": "group type\nRefer to the following for available values\nbilling_group: Billing Group.\naccess_group: Access Group."
          },
          "waveStatus": {
            "title": "wave status",
            "type": "string"
          },
          "waveConfig": {
            "title": "wave feature config",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/rippleResellerConfig"
            }
          },
          "aquaConfig": {
            "title": "aqua feature config",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/rippleResellerConfig"
            }
          }
        }
      },
      "rippleResellerConfig": {
        "type": "object",
        "properties": {
          "key": {
            "title": "key",
            "type": "string",
            "description": "For Wave\nThe available values are shown below.\n- Dashboard\n`dashboardGraph`: Display graph | Default: true\n`reportFilters`: Display report filters | Default: false\n\n- Usage Reports\n`usageAccount`: Account | Default: true\n`usageAccountGraph`: Display graph | Default: true\n`usageAccountMenuAccountEdit`: Edit account name | Default: false\n`usageAccountMenuBudget`: Display Budget | Default: false\n`usageAccountMenuBudgetEdit`: Edit Budget | Default: false\n`usageAccountMenuFeesFee`: Display fee  | Default: false\n`usageAccountMenuFeesCredit`: Display credit | Default: false\n`usageAccountMenuFeesRefund`: Display refund | Default: false\n`usageAccountMenuFeesOtherFees`: Display other fees | Default: false\n`usageReportDownload`: Download report data | Default: true\n`cost_forecast_tab`: Cost Forecast | Default: true\n\n- Cross Tag\n`usageCrosstag`: Cross Tag | Default: true\n`usageCrosstagGraph`: Display graph | Default: true\n\n- Group\n`usageGroup`: Group\n`usageGroupGraph`: Display graph | Default: true\n\n- Cost management\n`riPurchased`: Display purchased RI | Default: true\n`riUtilization`: Display RI Utilization | Default: false\n`riRecommendation`: Display RI Recommendations | Default: false\n`spPurchased`: Display purchased Savings Plans | Default: false\n\n- Other\n`invoice`: Invoice link | Default: false\n`openApi`: API Access Tokens | Default: false\n`usersManagement`: Sub-user management | Default: true\n`invoiceDownloadCsvDiscount`: Enable discount CSV download | Default: false\n`invoiceDownloadCsvMerged`: Enable merged CSV download | Default: false\n`aquaLink`: Aqua link | Default: false\n`waveproReportFilters`: WavePro Report Filters | Default: false\n`budgetalerts`: WavePro Budget Alerts | Default: false\n\nFor Aqua\nThe available values are shown below.\n- Instance Usage Status\n`aqCoverageRatio`: Coverage Ratio | Default: false\n\n- Reservations Management\n`aqRiManagement`: RI Management | Default: false\n`aqSpManagement`: SP Management | Default: false\n\n- Recommendation\n`aqRiSpInstances`: RI/SP Instances | Default: false\n`aqRightSizing`: Right Sizing | Default: false\n`aqScheduling`: Scheduling | Default: false"
          },
          "value": {
            "title": "value",
            "type": "boolean"
          }
        }
      },
      "rippleRounding": {
        "type": "object",
        "properties": {
          "rounding": {
            "$ref": "#/components/schemas/RoundingRoundingMethod"
          }
        },
        "description": "Rounding resource definition."
      },
      "rippleTargetServiceConfig": {
        "type": "string",
        "description": "Describes the overall config of a [blueapi.api.ripple.MethodConfig].",
        "default": "ALL",
        "enum": [
          "ALL"
        ]
      },
      "rippleTargetUsageConfig": {
        "type": "string",
        "description": "Describes the overall config of a [blueapi.api.ripple.MethodConfig].",
        "default": "USAGE",
        "enum": [
          "USAGE"
        ]
      },
      "rippleTierdConfig": {
        "title": "tired config",
        "type": "object",
        "properties": {
          "min": {
            "type": "number",
            "format": "double"
          },
          "max": {
            "type": "number",
            "format": "double"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "rippleTieredPercentage": {
        "title": "tired percentage",
        "type": "object",
        "properties": {
          "tiredConfig": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/rippleTierdConfig"
            }
          },
          "service": {
            "$ref": "#/components/schemas/rippleTargetServiceConfig"
          },
          "usage": {
            "$ref": "#/components/schemas/rippleTargetUsageConfig"
          },
          "discounted": {
            "type": "boolean"
          }
        }
      },
      "rippleTieredPrice": {
        "title": "tired price",
        "type": "object",
        "properties": {
          "tiredConfig": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/rippleTierdConfig"
            }
          },
          "service": {
            "$ref": "#/components/schemas/rippleTargetServiceConfig"
          },
          "usage": {
            "$ref": "#/components/schemas/rippleTargetUsageConfig"
          },
          "discounted": {
            "type": "boolean"
          }
        }
      },
      "rippleUntaggedGroup": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique id of the untagged group.\nAutomatically generated."
          },
          "name": {
            "title": "Required. The unique name of the untagged group. This value can be up to 60",
            "type": "string"
          },
          "assigned": {
            "$ref": "#/components/schemas/rippleAssigned"
          },
          "billingGroups": {
            "type": "array",
            "description": "Optional.",
            "items": {
              "$ref": "#/components/schemas/rippleAssignedBillingGroup"
            }
          },
          "created": {
            "type": "string",
            "description": "Output only. The time when the `UntaggedGroup` was created.",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "description": "Output only. The time when the `UntaggedGroup` was last updated.",
            "readOnly": true
          }
        },
        "description": "UntaggedGroup resource definition."
      },
      "rippleVendorPayerExchangeRate": {
        "type": "object",
        "properties": {
          "aws": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ripplePayerExchangeRate"
            }
          },
          "gcp": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ripplePayerExchangeRate"
            }
          },
          "azure": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ripplePayerExchangeRate"
            }
          }
        },
        "description": "VendorPayerExchangeRate resource definition."
      },
      "rippleYearMonth": {
        "type": "object",
        "properties": {
          "yearMonth": {
            "type": "string",
            "description": "List of the yearmonth."
          }
        },
        "description": "YearMonth resource definition."
      },
      "rippleaccountInvoiceLayout": {
        "type": "object",
        "properties": {
          "marketplace": {
            "title": "The marketplace is name of marketplace usage.\nex)ACCT_AWS_MARKETPLACE: \"Marketplace利用料金\"",
            "type": "string"
          },
          "marketplaceFee": {
            "title": "The marketplace is name of marketplace fee usage.\nex)ACCT_AWS_MARKETPLACE_FEES: \"Marketplace 一時金 ご利用金額\"",
            "type": "string"
          },
          "supportFee": {
            "title": "The supportFee is name of support fee usage.\nex)ACCT_AWS_SUPPORT_BUSINESS: \"AWS保守サービス利用料金\"",
            "type": "string"
          },
          "accountUsage": {
            "title": "The accountUsage is name of account total usage.\nex)ACCT_AWS_USAGE: \"利用料合計\"",
            "type": "string"
          },
          "accountUsageOnly": {
            "title": "The accountUsageOnly is name of account usage(Only related to vendor).\nex)ACCT_AWS_USAGEONLY: \"AWS利用料(MarketPlace利用料除く)\"",
            "type": "string"
          }
        },
        "description": "WORK-IN-PROGRESS: accountInvoiceLayout resource definition."
      },
      "ripplebodyInvoiceLayout": {
        "type": "object",
        "properties": {
          "hideSpecificTotalLines": {
            "title": "The hideSpecificTotalLines is name of hide specific total lines.\nex)BODY_HIDE_SPECIFIC_TOTAL_LINES: [\"removeThisTextToApply _AWS_SUPPORT_BUSINESS\"]",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "serviceDiscountDetail": {
            "title": "The serviceDiscountDetail is setting for service discount detail.\nex)BODY_SERVICE_DISCOUNT_DETAIL: true",
            "type": "boolean"
          },
          "usageDiscount": {
            "title": "The usageDiscount is setting for usage discount.\nex)BODY_USAGE_DISCOUNT: true",
            "type": "boolean"
          },
          "hideMarketplace": {
            "title": "The hideMarketplace is setting for hide marketplace.\nex)BODY_HIDE_MARKETPLACE: true",
            "type": "boolean"
          }
        },
        "description": "WORK-IN-PROGRESS: bodyInvoiceLayout resource definition."
      },
      "ripplefooterInvoiceLayout": {
        "type": "object",
        "properties": {
          "attention": {
            "title": "The attention is name of attention.\nex)FT_ATTENTION: null",
            "type": "string"
          },
          "invoiceBank": {
            "title": "The invoiceBank is setting for invoice bank.\nex)FT_INVOICE_BANK: true",
            "type": "boolean"
          },
          "invoiceBankContent": {
            "title": "The invoiceBankContent is information of invoice bank content.\nex)FT_INVOICE_BANK_CONTENT: \"振込手数料はご負担ください。\"",
            "type": "string"
          },
          "invoiceMemo": {
            "title": "The invoiceMemo is setting for invoice memo.\nex)FT_INVOICE_MEMO: true",
            "type": "boolean"
          },
          "invoiceRemarks": {
            "title": "The invoiceRemarks is setting for invoice remarks.\nex)FT_INVOICE_REMARKS: true",
            "type": "boolean"
          },
          "invoiceDiscountZero": {
            "title": "The invoiceDiscountZero is setting for invoice discount.\nex)FT_INVOICE_DISCOUNT_ZERO: true",
            "type": "boolean"
          }
        },
        "description": "WORK-IN-PROGRESS: footerInvoiceLayout resource definition."
      },
      "rippleheaderInvoiceLayout": {
        "type": "object",
        "properties": {
          "billingAddress": {
            "title": "The billingAddress is information of billing address.\nex)HEAD_BILLINGADDRESS: billing\"",
            "type": "string"
          },
          "billingGroupName": {
            "title": "The billingGroupName is setting for billing group name.\nex)HEAD_BILLINGGROUPNAME: true",
            "type": "boolean"
          },
          "billingGroupStaff": {
            "title": "The billingGroupStaff is setting for billing froup staff.\nex)HEAD_BILLINGGROUPSTAFF: true",
            "type": "boolean"
          },
          "companyAddress": {
            "title": "The companyAddress is setting for company address.\nex)HEAD_COMPANY_ADDRESS: true",
            "type": "boolean"
          },
          "companyName": {
            "title": "The companyName is setting for company name.\nex)HEAD_COMPANY_NAME: true",
            "type": "boolean"
          },
          "invoiceDate": {
            "title": "The invoiceDate is setting for invoice date.\nex)HEAD_INVOICE_DATE: true",
            "type": "boolean"
          },
          "invoiceDue": {
            "title": "The invoiceDue is setting for invoice due.\nex)HEAD_INVOICE_DUE: true",
            "type": "boolean"
          },
          "invoiceNo": {
            "title": "The invoiceNo is setting for invoice No.\nex)HEAD_INVOICE_NO: true",
            "type": "boolean"
          },
          "invoiceQuantity": {
            "title": "The invoiceQuantity is information of invoice quantity.\nex)HEAD_INVOICE_QUANTITY: \"１ヶ月分\"",
            "type": "string"
          },
          "invoiceSummary": {
            "title": "The invoiceSummary is setting for invoice summary.\nex)HEAD_INVOICE_SUMMARY: true",
            "type": "boolean"
          },
          "invoiceTitle": {
            "title": "The invoiceTitle is information of invoice title.\nex)HEAD_INVOICE_TITLE: \"AWSご利用金額\"",
            "type": "string"
          },
          "issueDateText": {
            "title": "The issueDateText is information of issue date text.\nex)HEAD_ISSUE_DATE_TEXT: \"tested message\"",
            "type": "string"
          },
          "mspInfo": {
            "title": "The mspInfo is setting for msp information.\nex)HEAD_MSPINFO: true",
            "type": "boolean"
          },
          "mspLogo": {
            "title": "The mspLogo is setting for msp logo.\nex)HEAD_MSPLOGO: true",
            "type": "boolean"
          },
          "mspStamp": {
            "title": "The mspStamp is setting for msp stamp.\nex)HEAD_MSPSTAMP: true",
            "type": "boolean"
          },
          "paidText": {
            "title": "The paidText is information of paid text.\nex)HEAD_PAID_TEXT: \"paid message\"",
            "type": "string"
          }
        },
        "description": "WORK-IN-PROGRESS: headerInvoiceLayout resource definition."
      },
      "ripplereportInvoiceLayout": {
        "type": "object",
        "properties": {
          "sectionEnable": {
            "title": "The sectionEnable is setting for section.\nex)REPORT_SECTION_ENABLE: \"{ \\\"ja\\\": true, \\\"en\\\": true }\"",
            "type": "string"
          }
        },
        "description": "WORK-IN-PROGRESS: headerInvoiceLayout resource definition."
      },
      "rippletotalInvoiceLayout": {
        "type": "object",
        "properties": {
          "marketplace": {
            "title": "The totalMarketplace is name of marketplace total usage.\nex)ALL_AWS_MARKETPLACE: \"\"",
            "type": "string"
          },
          "marketplaceFee": {
            "title": "The totalMarketplaceFee is name of marketplace total fee usage.\nex)ALL_AWS_MARKETPLACE_FEES: \"\"",
            "type": "string"
          },
          "vendorTotal": {
            "title": "The vendorTotal is name of vendor total usage.\nex)ALL_AWS_TOTAL: \"\"",
            "type": "string"
          },
          "vendorUsageOnly": {
            "title": "The vendorUsageOnly is name of vendor usage only.\nex)ALL_AWS_USAGEONLY: \"\"",
            "type": "string"
          },
          "vendorlUsage": {
            "title": "The vendorTotalUsage is name of vendor total usage.\nex)ALL_AWS_USAGE: \"AWS利用料\"",
            "type": "string"
          },
          "customUsage": {
            "title": "The customTotalUsage is name of custom total usage.\nex)ALL_CUSTOM_USAGE: \"追加費用合計\"",
            "type": "string"
          },
          "discount": {
            "title": "The discount is name of discount.\nex)ALL_DISCOUNT: \"\"",
            "type": "string"
          },
          "discountDiff": {
            "title": "The discountTotalDiff is name of discount total diff.\nex)ALL_DISCOUNT_DIFF: \"値引後\"",
            "type": "string"
          },
          "subTotal": {
            "title": "The subTotal is name of sub total.\nex)ALL_SUB_TOTAL: \"\"",
            "type": "string"
          },
          "substitutionFee": {
            "title": "The substitutionTotalFee is name of substitution total fee.\nex)ALL_SUBSTITUTION: \"請求代行手数料\"",
            "type": "string"
          },
          "supportFee": {
            "title": "The supportTotalFee is name of support total fee.\nex)ALL_SUPPORT_BUSINESS: \"サポートビジネス費用\"",
            "type": "string"
          },
          "tax": {
            "title": "The tax is name of tax.\nex)ALL_TAX: \"消費税\"",
            "type": "string"
          },
          "taxDiff": {
            "title": "The taxDiff is name of tax diff.\nex)ALL_TAX_DIFF: null",
            "type": "string"
          },
          "taxFree": {
            "title": "The taxFree is name of tax free.\nex)ALL_TAX_FREE: \"\"",
            "type": "string"
          },
          "totalExchangeRate": {
            "title": "The totalExchangeRate is name of total exchange rate.\nex)ALL_TOTAL_EXCHANGE: \"日本円換算後（$1=JPY）\"",
            "type": "string"
          },
          "totalUsage": {
            "title": "The totalUsage is name of total usage.\nex)ALL_USAGE_TOTAL: \"小計\"",
            "type": "string"
          },
          "total": {
            "title": "The total is name of total.\nex)ALL_TOTAL: \"\"",
            "type": "string"
          }
        },
        "description": "WORK-IN-PROGRESS: totalInvoiceLayout resource definition."
      },
      "v1AbcAccount": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          }
        }
      },
      "v1AbcBillingGroup": {
        "type": "object",
        "properties": {
          "arn": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "creationTime": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "primaryAccountId": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "v1AccountAccess": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "The queried target account."
          },
          "accountName": {
            "title": "The account name",
            "type": "string"
          },
          "accountType": {
            "type": "string",
            "description": "The account type. Payer or linked account."
          },
          "payerId": {
            "type": "string",
            "description": "The payer account of the account."
          },
          "roleArn": {
            "type": "string",
            "description": "The role ARN that provides the cross-account access permissions."
          },
          "externalId": {
            "type": "string",
            "description": "The external id for this role."
          },
          "stackId": {
            "type": "string",
            "description": "The id of the CloudFormation stack deployed in the target account."
          },
          "stackRegion": {
            "type": "string",
            "description": "The region where the stack is deployed."
          },
          "templateUrl": {
            "type": "string",
            "description": "The latest template used to deploy the stack."
          },
          "bucketName": {
            "title": "The s3 bucket name",
            "type": "string"
          },
          "prefix": {
            "title": "Report path prefix",
            "type": "string"
          },
          "reportName": {
            "title": "The report name",
            "type": "string"
          },
          "registrationStatus": {
            "$ref": "#/components/schemas/coverRegistrationStatus"
          },
          "status": {
            "type": "string",
            "description": "This can be `latest`, `outdated`, or some error information."
          },
          "lastUpdated": {
            "type": "string",
            "description": "The last updated timestamp, RFC3339 UTC."
          }
        },
        "description": "Response message for GetAccountAccess, CreateAccountAccess rpc."
      },
      "v1AccountInvoiceServiceDiscounts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Service discount id."
          },
          "account": {
            "type": "string",
            "description": "Account id."
          },
          "serviceDiscounts": {
            "$ref": "#/components/schemas/apiripplev1InvoiceServiceDiscounts"
          }
        },
        "description": "Streaming response message for the AccountInvoiceServiceDiscounts rpc."
      },
      "v1AccountOptions": {
        "type": "object",
        "properties": {
          "aws": {
            "$ref": "#/components/schemas/v1RegisterAccounts"
          },
          "gcp": {
            "$ref": "#/components/schemas/v1RegisterAccounts"
          },
          "azure": {
            "$ref": "#/components/schemas/v1RegisterAccounts"
          }
        },
        "description": "Account options definition."
      },
      "v1AccountServiceDiscounts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Service discount id."
          },
          "accountId": {
            "type": "string",
            "description": "Account id."
          }
        }
      },
      "v1AccountServiceDiscountsExport": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/v1ExportData"
          },
          "directLink": {
            "title": "Empty if direct link in request is disabled in request",
            "type": "string"
          }
        },
        "description": "AccountServiceDiscountsExport resource definition.\n\ndata is [blueapi.api.ripple.v1.ExportData]\n\ncontent. Base64 encoded value.\nFor example,\ncontent :`YmlsbGluZ0dyb3VwSWQsYmlsbGluZ0dyb3VwTmFtZSxWZW5kb3IsQWNjb3VudElkLEFjY291bnROYW1lLFNlcnZpY2UgUHJlbWl1bXMmRGlzY291bnRzDQo=`\nDecoding this value by en, get `billingGroupId,billingGroupName,Vendor,AccountId,AccountName,Service Premiums&Discounts`.\ncontent :`6KuL5rGC44Kw44Or44O844OXSUQs6KuL5rGC44Kw44Or44O844OX5ZCNLOODmeODs+ODgOODvCzjgqLjgqvjgqbjg7Pjg4hJRCzjgqLjgqvjgqbjg7Pjg4jlkI0s44K144O844OT44K55Ymy5byV44O75Ymy5aKX6Kit5a6aDQo=`\nDecoding this value by ja, get `請求グループID,請求グループ名,ベンダー,アカウントID,アカウント名,サービス割引・割増設定`.\n\ndownloadedRows. Downloaded content lines.\n\ntotalRows.Total of content lines."
      },
      "v1AccountToAdd": {
        "title": "New message for account details",
        "type": "object",
        "properties": {
          "customerId": {
            "title": "Required. account id of the customer",
            "type": "string"
          },
          "accountId": {
            "title": "Required. Payer account id",
            "type": "string"
          },
          "name": {
            "title": "Required. Descriptive name",
            "type": "string"
          },
          "note": {
            "title": "Optional. Addition description or notes",
            "type": "string"
          }
        }
      },
      "v1AccountUsageDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "serviceCode": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "zone": {
            "type": "string"
          },
          "usageType": {
            "type": "string"
          },
          "instanceType": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "invoiceId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "tags": {
            "type": "string"
          },
          "costCategories": {
            "type": "string"
          },
          "usageAmount": {
            "type": "number",
            "format": "double"
          },
          "trueUnblendedCost": {
            "type": "number",
            "format": "double"
          },
          "unblendedCost": {
            "type": "number",
            "format": "double"
          },
          "effectiveCost": {
            "type": "number",
            "format": "double"
          },
          "amortizedCost": {
            "type": "number",
            "format": "double"
          },
          "publicOnDemandCost": {
            "type": "number",
            "format": "double"
          },
          "unusedAmortizedCost": {
            "type": "number",
            "format": "double"
          },
          "lastUpdate": {
            "type": "string"
          },
          "splitStatus": {
            "type": "string"
          },
          "isAllocated": {
            "type": "boolean"
          },
          "isApplied": {
            "type": "boolean"
          },
          "source": {
            "type": "string"
          }
        },
        "description": "Response message for SimulateAccountCostAllocator rpc."
      },
      "v1ActivateUserRequest": {
        "title": "Request message for ActivateUser",
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "previousPassword": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "description": "Email. For auth0 email validation."
          },
          "isAuth0": {
            "type": "boolean"
          },
          "auth0UserId": {
            "type": "string",
            "description": "Auth0 user Id. For updating of user metadata."
          }
        }
      },
      "v1ActivateUserResponse": {
        "title": "Response message for ActivateUser",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1Activity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "v1AddAccountToBillingGroupRequest": {
        "type": "object",
        "properties": {
          "groupId": {
            "title": "Required. BillingGroupInternalId",
            "type": "string"
          },
          "vendor": {
            "title": "Required. (aws, azure, gcp)",
            "type": "string"
          },
          "accounts": {
            "title": "Required. List of accounts to be added to the billing group",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1AccountToAdd"
            }
          }
        }
      },
      "v1AddBillingGroupCustomFieldRequest": {
        "type": "object",
        "properties": {
          "groupId": {
            "title": "Required. BillingGroupInternalId",
            "type": "string"
          },
          "idToKey": {
            "title": "map of customField id to it's key (description)",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "v1AddFavoriteRequest": {
        "title": "Request message for AddFavorite",
        "type": "object",
        "properties": {
          "viewId": {
            "type": "string",
            "description": "Required. View Id."
          }
        }
      },
      "v1AddFavoriteResponse": {
        "title": "Response message for AddFavorite",
        "type": "object",
        "properties": {
          "viewId": {
            "type": "string"
          }
        }
      },
      "v1AddInfotoMarketplaceRequest": {
        "type": "object",
        "properties": {
          "customerIdentifier": {
            "type": "string"
          }
        }
      },
      "v1AddInfotoMarketplaceResponse": {
        "type": "object"
      },
      "v1AddMpnSettingRequest": {
        "title": "Request message for AddMpnSetting",
        "type": "object",
        "properties": {
          "mpnId": {
            "title": "Partner Id / MPN Id",
            "type": "string"
          }
        }
      },
      "v1AddPartnerCenterCredentialsRequest": {
        "title": "Request message for AddPartnerCenterCredentials",
        "type": "object",
        "properties": {
          "accountId": {
            "title": "The account Id",
            "type": "string"
          },
          "applicationId": {
            "title": "Application Id",
            "type": "string"
          },
          "secretKey": {
            "title": "Secret Key",
            "type": "string"
          }
        }
      },
      "v1AddSideMenuFavoriteResponse": {
        "title": "Response message for AddSideMenuFavorite",
        "type": "object",
        "properties": {
          "viewId": {
            "type": "string"
          }
        }
      },
      "v1AddTagsToBillingGroupRequest": {
        "type": "object",
        "properties": {
          "groupId": {
            "title": "Required. Billing group internal Id",
            "type": "string"
          },
          "vendor": {
            "title": "Required. Vendor (aws, azure, gcp)",
            "type": "string"
          },
          "settings": {
            "title": "Tag settings for different customer accounts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1TagSetting"
            }
          },
          "nonTagSetting": {
            "$ref": "#/components/schemas/v1NonTagSetting"
          }
        }
      },
      "v1AdjustmentEntry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The adjustment entry ID."
          },
          "name": {
            "type": "string",
            "description": "The adjustment entry name."
          },
          "account": {
            "$ref": "#/components/schemas/v1AdjustmentEntryAccountInfo"
          },
          "entry": {
            "$ref": "#/components/schemas/v1AdjustmentEntryInfo"
          },
          "setting": {
            "$ref": "#/components/schemas/v1AdjustmentEntrySetting"
          }
        },
        "description": "AdjustmentEntry resource definition."
      },
      "v1AdjustmentEntryAccountInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The account ID."
          },
          "name": {
            "type": "string",
            "description": "The account name."
          },
          "vendor": {
            "type": "string",
            "description": "The vendor."
          },
          "billingInternalId": {
            "type": "string",
            "description": "The billing internal ID."
          },
          "billingGroupId": {
            "type": "string",
            "description": "The billing group ID."
          },
          "billingGroupName": {
            "type": "string",
            "description": "The billing group name."
          },
          "currency": {
            "type": "string",
            "description": "The billing group currency."
          }
        },
        "description": "AdjustmentEntryAccountInfo resource definition."
      },
      "v1AdjustmentEntryInfo": {
        "type": "object",
        "properties": {
          "calculationType": {
            "type": "string",
            "description": "The calculation type."
          },
          "adjustmentEntryType": {
            "type": "string",
            "description": "The adjustment entry type."
          },
          "description": {
            "type": "string",
            "description": "The adjustment entry description."
          },
          "productCode": {
            "type": "string",
            "description": "The product code."
          },
          "productName": {
            "type": "string",
            "description": "The product name."
          },
          "currency": {
            "type": "string",
            "description": "The currency."
          },
          "amount": {
            "type": "number",
            "description": "The amount.",
            "format": "double"
          },
          "timeInterval": {
            "type": "string",
            "description": "The time interval."
          },
          "usageStart": {
            "type": "string",
            "description": "The usage start."
          }
        },
        "description": "AdjustmentEntryInfo resource definition."
      },
      "v1AdjustmentEntrySetting": {
        "type": "object",
        "properties": {
          "apply": {
            "type": "boolean",
            "description": "Applied to the billing."
          },
          "exchangeRate": {
            "type": "number",
            "description": "The exchange rate applied to the billing.",
            "format": "double"
          },
          "taxFree": {
            "type": "boolean",
            "description": "The tax free applied to the billing."
          },
          "allocateType": {
            "type": "string",
            "description": "The allocate type indicates the type to which an entry has been allocated."
          },
          "splitType": {
            "type": "string",
            "description": "The split type indicates the type to which an entry has been splitted."
          },
          "originalId": {
            "type": "string",
            "description": "The original ID represents the originally allocated or splitted ID."
          },
          "splitted": {
            "type": "boolean",
            "description": "The Splitted indicates whether it has been split."
          },
          "term": {
            "type": "integer",
            "description": "The term indicates the number of years that can be splitted.\nFor 1 year, it is divided into 12 parts.\nFor 3 years, it is divided into 36 parts.",
            "format": "int32"
          }
        },
        "description": "AdjustmentEntrySetting resource definition."
      },
      "v1AllocationItem": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string"
          },
          "month": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "cost": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "Response message wrapper for cost group allocations."
      },
      "v1Allocator": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Required. The type where the adjustments are to be applied. This can support `account`, `costGroup` and `payer`."
          },
          "value": {
            "type": "string",
            "description": "Required. The value for the specified attribute. `accountId` for account, `costGroupId` for cost group, `payerId` for payer and account name regex for account name."
          },
          "formula": {
            "type": "string",
            "description": "Required. The formula to use to compute the value of the allocation on an attribute. If left blank, allocation is based on usage."
          },
          "months": {
            "type": "string",
            "description": "Optional. The number of months the adjustment is to be applied. If set, it will divide the cost equally to the number of months.",
            "format": "int64"
          }
        }
      },
      "v1Announcement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "billingGroups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allBillingGroups": {
            "type": "boolean"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "userStatus": {
            "type": "string"
          },
          "created": {
            "type": "string"
          },
          "updated": {
            "type": "string"
          }
        }
      },
      "v1AnomalyAlertData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "alertEnabled": {
            "type": "boolean"
          },
          "frequency": {
            "type": "string"
          },
          "costGroupId": {
            "$ref": "#/components/schemas/coverAlertCostGroup"
          },
          "channels": {
            "$ref": "#/components/schemas/coverAlertChannels"
          }
        }
      },
      "v1AnomalyData": {
        "title": "Message response for anomaly detection",
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "costGroupId": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "totalCost": {
            "type": "number",
            "format": "float"
          },
          "isAnomaly": {
            "title": "The value will be true if there is an anomaly for a specific account and product",
            "type": "boolean"
          },
          "lowerLimit": {
            "title": "Lower bound. If the total cost is lesser than the lowerlimit it is considered as anomaly",
            "type": "number",
            "format": "float"
          },
          "upperLimit": {
            "title": "Upper bound. If the total cost is greater than the upperlimit it is considered as anomaly",
            "type": "number",
            "format": "float"
          },
          "anomalyCost": {
            "title": "The difference of the total cost and the upperlimit or lowerlimit if it is anomamly, if not anomaly then anomaly cost is 0",
            "type": "number",
            "format": "float"
          },
          "anomalyProbability": {
            "title": "How many percentage does the data is considered anomaly",
            "type": "number",
            "format": "float"
          }
        }
      },
      "v1AssetsSummary": {
        "type": "object",
        "properties": {
          "date": {
            "title": "Format is `yyyy-mm`",
            "type": "string"
          },
          "vendor": {
            "type": "string",
            "description": "Only `aws` is supported for now."
          },
          "totalResources": {
            "title": "Total number of resources",
            "type": "string",
            "format": "int64"
          },
          "totalCost": {
            "type": "number",
            "description": "Total Cost incurred for the resources on specified month.",
            "format": "double"
          }
        }
      },
      "v1AssignCostGroupMemberResponse": {
        "title": "Response message for AssignCostGroupMember",
        "type": "object",
        "properties": {
          "costGroupId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "v1AssignPayerResponse": {
        "title": "Response message for AssignPayer",
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "payerId": {
            "type": "string"
          }
        }
      },
      "v1AssignProjectToTeamRequest": {
        "type": "object",
        "properties": {
          "createNew": {
            "type": "boolean",
            "description": "Indicates whether a new project was created as part of the assignment."
          },
          "projectEmail": {
            "type": "string",
            "description": "Should not be empty if create_new is true."
          },
          "projectName": {
            "type": "string",
            "description": "Should not be empty if create_new is true."
          },
          "teamId": {
            "type": "string"
          },
          "projectIds": {
            "type": "string",
            "description": "Required. Comma-separated list of project IDs to assign to the team."
          }
        }
      },
      "v1AssignProjectToTeamResponse": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "string"
          },
          "teamName": {
            "type": "string"
          },
          "projectIds": {
            "type": "string",
            "description": "Comma-separated list of project IDs that were assigned."
          },
          "projectNames": {
            "type": "string",
            "description": "Comma-separated list of project names that were assigned."
          }
        }
      },
      "v1Attribute": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Filter key."
          },
          "values": {
            "type": "array",
            "description": "Array of filter values.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1AwsDailyRunHistory": {
        "type": "object",
        "properties": {
          "billingInternalId": {
            "type": "string"
          },
          "billingGroupId": {
            "type": "string"
          },
          "month": {
            "type": "string"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1AwsDailyRunHistoryAccount"
            }
          }
        },
        "description": "Streaming response message for the Billing.ListAwsDailyRunHistory rpc."
      },
      "v1AwsDailyRunHistoryAccount": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountHistory"
            }
          }
        }
      },
      "v1BasicInformation": {
        "type": "object",
        "properties": {
          "billingGroupName": {
            "type": "string"
          },
          "billingGroupId": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "addressee": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "prefecture": {
            "type": "string"
          }
        }
      },
      "v1BillingAccountRequest": {
        "title": "Request message for AddBillingAccount",
        "type": "object",
        "properties": {
          "billingId": {
            "type": "string",
            "description": "Required. The billing account id."
          },
          "datasetId": {
            "type": "string",
            "description": "Name of dataset you created."
          },
          "datasetRegion": {
            "type": "string",
            "description": "In creating dataset, It requires you to select a region."
          },
          "projectId": {
            "type": "string",
            "description": "Project Id where the datasetId of BQ can be found."
          },
          "billingName": {
            "type": "string",
            "description": "Optional. Billing Name, this can be set by the users in Octo UI."
          }
        }
      },
      "v1BillingGroup": {
        "type": "object",
        "properties": {
          "billingInternalId": {
            "type": "string",
            "description": "The billing group's internal id."
          },
          "billingGroupId": {
            "type": "string",
            "description": "The billing group id."
          },
          "billingGroupName": {
            "type": "string",
            "description": "The billing group name."
          },
          "companyName": {
            "type": "string",
            "description": "The company’s name."
          },
          "type": {
            "title": "For aws only: `default` or `imported`",
            "type": "string"
          },
          "billingGroupInfo": {
            "$ref": "#/components/schemas/rippleBillingGroupInfo"
          },
          "accountOptions": {
            "$ref": "#/components/schemas/v1AccountOptions"
          },
          "accounts": {
            "title": "List of all accounts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/blueapiapiAccount"
            }
          },
          "tags": {
            "title": "List of all tags",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiCostTag"
            }
          },
          "invoiceSettings": {
            "$ref": "#/components/schemas/v1BillingGroupInvoiceSettings"
          },
          "additionalItems": {
            "$ref": "#/components/schemas/v1BillingGroupAdditionalItems"
          },
          "awsOptions": {
            "$ref": "#/components/schemas/billingv1AwsOptions"
          }
        }
      },
      "v1BillingGroupAccountSupportPlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The account id."
          },
          "name": {
            "type": "string",
            "description": "The account name.",
            "readOnly": true
          },
          "plan": {
            "$ref": "#/components/schemas/v1SupportPlan"
          }
        },
        "description": "Billing Group Account Support Plan resource definition."
      },
      "v1BillingGroupAdditionalItems": {
        "type": "object",
        "properties": {
          "aws": {
            "title": "AWS additional items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiAdditionalItems"
            }
          },
          "azure": {
            "title": "Azure additional items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiAdditionalItems"
            }
          },
          "gcp": {
            "title": "GCP additional items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiAdditionalItems"
            }
          }
        },
        "description": "Additional items for a billing group."
      },
      "v1BillingGroupCustomField": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "customField": {
            "$ref": "#/components/schemas/v1CustomField"
          }
        }
      },
      "v1BillingGroupInvoiceSettings": {
        "type": "object",
        "properties": {
          "aws": {
            "$ref": "#/components/schemas/v1BillingGroupVendoredInvoiceSetting"
          },
          "azure": {
            "$ref": "#/components/schemas/v1BillingGroupVendoredInvoiceSetting"
          },
          "gcp": {
            "$ref": "#/components/schemas/v1BillingGroupVendoredInvoiceSetting"
          }
        },
        "description": "Invoice settings for a billing group."
      },
      "v1BillingGroupSection": {
        "type": "object",
        "properties": {
          "id": {
            "title": "The id. billing group id",
            "type": "string"
          },
          "name": {
            "title": "The name. billing group name",
            "type": "string"
          },
          "yearMonth": {
            "title": "The year-month. format: yyyymm",
            "type": "string"
          },
          "currency": {
            "type": "string",
            "description": "The currency."
          },
          "invoiceCost": {
            "type": "number",
            "description": "The invoice cost.",
            "format": "double"
          },
          "procurementCost": {
            "type": "number",
            "description": "The procurement cost.",
            "format": "double"
          },
          "profitCost": {
            "type": "number",
            "description": "The profit cost.",
            "format": "double"
          }
        },
        "description": "BillingGroupSection resource definition."
      },
      "v1BillingGroupVendoredInvoiceSetting": {
        "type": "object",
        "properties": {
          "calcType": {
            "type": "string"
          },
          "discountRate": {
            "type": "number",
            "format": "double"
          },
          "substitutionFee": {
            "type": "string"
          },
          "substitutionFix": {
            "type": "number",
            "format": "double"
          },
          "substitutionRate": {
            "type": "number",
            "format": "double"
          },
          "supportFee": {
            "type": "string"
          },
          "supportRate": {
            "type": "number",
            "format": "double"
          },
          "supportFix": {
            "type": "number",
            "format": "double"
          },
          "taxRate": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string"
          },
          "discountTargetUsage": {
            "type": "string"
          },
          "substitutionFeeTargetUsage": {
            "type": "string"
          },
          "discountCalcLogic": {
            "type": "string"
          },
          "substitutionFeeCalcTarget": {
            "type": "string"
          },
          "substitutionFeeCalcType": {
            "type": "string"
          },
          "supportAmountTarget": {
            "type": "string"
          },
          "supportFeeCalcTarget": {
            "type": "string"
          }
        },
        "description": "Invoice settings that are vendor-specific for each billing group."
      },
      "v1BudgetAlerts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Budget alert Id."
          },
          "vendor": {
            "type": "string",
            "description": "Vnedor. At the moment, only `aws` is supported."
          },
          "accounts": {
            "type": "array",
            "description": "Lsit of accountId.",
            "items": {
              "$ref": "#/components/schemas/blueapiapiAccount"
            }
          },
          "notification": {
            "$ref": "#/components/schemas/apiBudgetAlertNotificationDetail"
          },
          "daily": {
            "$ref": "#/components/schemas/apiDailyBudgetAlert"
          },
          "dailyRate": {
            "$ref": "#/components/schemas/apiDailyRateIncreaseBudgetAlert"
          },
          "monthly": {
            "$ref": "#/components/schemas/apiMonthlyBudgetAlert"
          }
        },
        "description": "Request message for the BudgetAlerts rpc."
      },
      "v1CalculateCostsRequestAwsOptions": {
        "type": "object",
        "properties": {
          "force": {
            "type": "boolean",
            "description": "Optional. If set to true, discard existing calculation operation(s), if any, and make this as the active/latest one. By default, if there is an ongoing operation during the call, the request will fail."
          },
          "accountsOnly": {
            "type": "boolean",
            "description": "Optional. If set to true, only calculate for account-type billing groups. If both `accountsOnly` and `tagsOnly` are set to true, `accountsOnly` will prevail."
          },
          "tagsOnly": {
            "type": "boolean",
            "description": "Optional. If set to true, only calculate for tags-type billing groups. Discarded when the organization doesn't have any tag-based billing groups configured. If both `accountsOnly` and `tagsOnly` are set to true, `accountsOnly` will prevail."
          }
        }
      },
      "v1CalculationPrerequisite": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "string",
            "description": "The invoice id."
          },
          "payerId": {
            "type": "string",
            "description": "The payer account id."
          },
          "exchangeRate": {
            "type": "number",
            "description": "The exchange rate.",
            "format": "double"
          },
          "unblendedCostInCur": {
            "type": "number",
            "description": "The unblended cost in CUR.",
            "format": "double"
          }
        }
      },
      "v1CalculationsSchedule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The schedule id."
          },
          "schedule": {
            "type": "string",
            "description": "The desired schedule in UTC, using the [cron](https://man7.org/linux/man-pages/man5/crontab.5.html) format."
          },
          "scheduleMacro": {
            "type": "string",
            "description": "The macro that augments `schedule`."
          },
          "targetMonth": {
            "type": "string",
            "description": "The target month for the calculation. Empty means previous month (default)."
          },
          "nextRun": {
            "type": "string",
            "description": "The schedule for the next run in UTC."
          },
          "notificationChannel": {
            "type": "string",
            "description": "The channel id to use for notifications."
          },
          "force": {
            "type": "boolean",
            "description": "If set to true, force calculations to proceed regardless of run status."
          },
          "dryRun": {
            "type": "boolean",
            "description": "If set to true, skips the actual calculations."
          },
          "status": {
            "type": "string",
            "description": "The current state of this schedule. Normally set to \"OK\", or empty if no issues. Otherwise, will contain an error string."
          }
        }
      },
      "v1CalculatorCostModifier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createTime": {
            "type": "string"
          },
          "updateTime": {
            "type": "string"
          },
          "awsOptions": {
            "$ref": "#/components/schemas/v1CalculatorCostModifierAwsOptions"
          },
          "azureOptions": {
            "$ref": "#/components/schemas/v1CalculatorCostModifierAzureOptions"
          }
        }
      },
      "v1CalculatorCostModifierAwsOptions": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Optional. The account to which the modifier is applied. A comma-separated list of accounts is also valid."
          },
          "groupId": {
            "type": "string",
            "description": "Optional. The group to which the modifier is applied. Accepts billing internal ids. A comma-separated list of billing internal ids is also valid."
          },
          "payerId": {
            "type": "string",
            "description": "Optional. The payer id to which the modifier is applied. A comma-separated list of payer ids is also valid."
          },
          "qualifiers": {
            "type": "array",
            "description": "Optional. Conditional qualifiers to further filter the modifier targets. Multiple qualifiers use the logical `or` operator; `qualifiers[0] || qualifiers[1] || qualifiers[n]`.",
            "items": {
              "$ref": "#/components/schemas/v1CalculatorCostModifierAwsOptionsQualifier"
            }
          },
          "modifier": {
            "$ref": "#/components/schemas/v1CalculatorCostModifierAwsOptionsModifier"
          },
          "after": {
            "type": "string",
            "description": "Optional. Specifies the modifier id in which this modifier will be applied after. For example, if you have another modifier `mod1` and you create a new modifier with `after` set to `mod1`, the calculator will apply `mod1` first, then this modifier. If `after` is not set, the application sequence for multiple overlapping modifiers will be by update timestamp, newest to oldest."
          },
          "createNewRow": {
            "type": "boolean",
            "description": "Optional. Default to false. If set to true, the modifier will create a new row in the table with similar data that satisfies the qualifier the only differences is it contains the amount to be subtracted or to be added. If set to false, the modifier will update the cost directly."
          }
        },
        "description": "AWS-specific options definition."
      },
      "v1CalculatorCostModifierAwsOptionsModifier": {
        "type": "object",
        "properties": {
          "formula": {
            "type": "string",
            "description": "Required. Our modifier formula. The final result should be a number. Integers are converted to floating points.\n\nSupported operators are `*`, `/`, `+`, `-`, and `%`. You can use parenthesis `()` to control precedence. Additional supported operators include `==`, `!=`, `!`, `>`, `<`, `>=`, `<=`, and the ternary operator `? :`, or `cond ? expr1 : expr2`.\nExamples:\n `1 + 2 * 3` = 7\n `(1 + 2) * 3` = 9\n `7.8 % 5` = 2.8\n `true ? 1.1 : 2.2` = 1.1\n `1 > 2 ? 1.1 : 2.2` = 2.2\n\nYou can use the `cost` variable to reference the original lineitem cost. For example, if you want to add $10 to the cost, you can use the formula: `cost + 10`. For trueunblended-type billing groups, `cost` refers to the calculated trueunblended cost.\n\nThe `usage` variable refers to the usage amount of a lineitem. For example, if you want to use a different rate of $1.5, you can use the formula: `usage * 1.5`.\n\nThe `unblendedcost` variable refers to the lineitem's unblended cost as indicated in the CUR. Note that the `unblendedcost` variable is different than the `cost` variable, although there are cases where the two are equal.\n\nThe `ondemandrate` variable refers to the lineitem's public ondemand rate as indicated in the CUR.\n\nYou can check out this [guide](https://alphauslabs.github.io/docs/guides/aws-cost-mods/) for more examples."
          },
          "descriptionModifier": {
            "$ref": "#/components/schemas/v1CalculatorCostModifierAwsOptionsModifierDescriptionModifier"
          }
        }
      },
      "v1CalculatorCostModifierAwsOptionsModifierDescriptionModifier": {
        "type": "object",
        "properties": {
          "prefix": {
            "type": "string",
            "description": "Optional. Add a prefix to the description."
          },
          "suffix": {
            "type": "string",
            "description": "Optional. Add a suffix to the description."
          },
          "replace": {
            "type": "string",
            "description": "Optional. Replace the description with the input."
          },
          "replaceMatch": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Replace matching occurences with the input. The key part is the regular expression matcher based on https://github.com/google/re2, while the value is the replacement. The order of replacement is not guaranteed.\n\nYou can use the `{{ondemandrate}}` variable in the replacement value part to reference the public ondemand rate indicated in the CUR."
          }
        }
      },
      "v1CalculatorCostModifierAwsOptionsQualifier": {
        "type": "object",
        "properties": {
          "and": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "description": "A map of \"key:value\" attribute filters. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you like your modifiers to apply to `productCode:AmazonEC2`, set to `{\"productCode\":\"eq:AmazonEC2\"}` or `{\"productCode\":\"AmazonEC2\"}`. You can also use a regular expression like `{\"productCode\":\"re:AmazonEC2|AmazonRDS\"}`, which means apply to all AmazonEC2 or AmazonRDS lineitems. Or reverse regexp, such as `{\"productCode\":\"!re:^AmazonEC2$\"}`, which means apply to all items except `AmazonEC2`. Valid keys are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `description`, and `resourceId`."
      },
      "v1CalculatorCostModifierAzureOptions": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Optional. The group to which the modifier is applied. Accepts billing internal ids. A comma-separated list of billing internal ids is also valid."
          },
          "payerId": {
            "type": "string",
            "description": "Optional. The payer id (a.k.a Azure billing id) to which the modifier is applied. A comma-separated list of payer ids is also valid."
          },
          "customerId": {
            "type": "string",
            "description": "Optional. The Azure customer id to which the modifier is applied. A comma-separated list of customers is also valid."
          },
          "subscriptionId": {
            "type": "string",
            "description": "Optional. The Azure subscription id to which the modifier is applied. A comma-separated list of subscriptions is also valid."
          },
          "entitlementId": {
            "type": "string",
            "description": "Optional. The Azure entitlement id to which the modifier is applied. A comma-separated list of entitlements is also valid."
          },
          "qualifiers": {
            "type": "array",
            "description": "Optional. Conditional qualifiers to further filter the modifier targets. Multiple qualifiers use the logical `or` operator; `qualifiers[0] || qualifiers[1] || qualifiers[n]`.",
            "items": {
              "$ref": "#/components/schemas/v1CalculatorCostModifierAzureOptionsQualifier"
            }
          },
          "modifier": {
            "$ref": "#/components/schemas/v1CalculatorCostModifierAzureOptionsModifier"
          },
          "after": {
            "type": "string",
            "description": "Optional. Specifies the modifier id in which this modifier will be applied after. For example, if you have another modifier `mod1` and you create a new modifier with `after` set to `mod1`, the calculator will apply `mod1` first, then this modifier. If `after` is not set, the application sequence for multiple overlapping modifiers will be by update timestamp, newest to oldest."
          }
        },
        "description": "Azure-specific options definition."
      },
      "v1CalculatorCostModifierAzureOptionsModifier": {
        "type": "object",
        "properties": {
          "formula": {
            "type": "string",
            "description": "Required. Our modifier formula. The final result should be a number. Integers are converted to floating points.\n\nSupported operators are `*`, `/`, `+`, `-`, and `%`. You can use parenthesis `()` to control precedence. Additional supported operators include `==`, `!=`, `!`, `>`, `<`, `>=`, `<=`, and the ternary operator `? :`, or `cond ? expr1 : expr2`.\nExamples:\n `1 + 2 * 3` = 7\n `(1 + 2) * 3` = 9\n `7.8 % 5` = 2.8\n `true ? 1.1 : 2.2` = 1.1\n `1 > 2 ? 1.1 : 2.2` = 2.2\n\nYou can use the `cost` variable to reference the original lineitem cost. For example, if you want to add $10 to the cost, you can use the formula: `cost + 10`. For trueunblended-type billing groups, `cost` refers to the calculated trueunblended cost.\n\nThe `quantity` variable refers to the billable quantity amount of a lineitem. For example, if you want to use a different rate of $1.5, you can use the formula: `quantity * 1.5`.\n\nThe `unitPrice` variable refers to the lineitem's effective unit price as indicated in the Azure invoice.\n\nYou can check out this [guide](https://alphauslabs.github.io/docs/guides/aws-cost-mods/) for more examples."
          },
          "descriptionModifier": {
            "$ref": "#/components/schemas/v1CalculatorCostModifierAzureOptionsModifierDescriptionModifier"
          }
        }
      },
      "v1CalculatorCostModifierAzureOptionsModifierDescriptionModifier": {
        "type": "object",
        "properties": {
          "prefix": {
            "type": "string",
            "description": "Optional. Add a prefix to the description."
          },
          "suffix": {
            "type": "string",
            "description": "Optional. Add a suffix to the description."
          },
          "replace": {
            "type": "string",
            "description": "Optional. Replace the description with the input."
          }
        }
      },
      "v1CalculatorCostModifierAzureOptionsQualifier": {
        "type": "object",
        "properties": {
          "and": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "description": "A map of \"key:value\" attribute filters. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you like your modifiers to apply to `productId:CFQ7TTC0LFLX` (Microsoft 365 E3), set to `{\"productId\":\"eq:CFQ7TTC0LFLX\"}` or `{\"productId\":\"CFQ7TTC0LFLX\"}`. You can also use a regular expression like `{\"productId\":\"re:CFQ7TTC0LFLX|DZH318Z0BQ4L\"}`, which means apply to all `Microsoft 365 E3` or `Virtual Machines Ev3 Series` lineitems. Or reverse regexp, such as `{\"productId\":\"!re:^CFQ7TTC0LFLX$\"}`, which means apply to all items except `Microsoft 365 E3`. Valid keys are `productId`, `productName`, `skuId`, `skuName`, `description`, `category` and `domainName`."
      },
      "v1CheckAccountsResponse": {
        "type": "object",
        "properties": {
          "exists": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "description": "Map of accountIds to boolean values indicating if the account exists."
          }
        }
      },
      "v1CloudWatchMetricsStream": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "The queried target account."
          },
          "externalId": {
            "type": "string",
            "description": "The external id for this role."
          },
          "stackId": {
            "type": "string",
            "description": "The id of the CloudFormation stack deployed in the target account."
          },
          "stackRegion": {
            "type": "string",
            "description": "The region where the stack is deployed."
          },
          "templateUrl": {
            "type": "string",
            "description": "The latest template used to deploy the stack."
          },
          "status": {
            "type": "string",
            "description": "This can be `latest`, `outdated`, or some error information."
          },
          "lastUpdated": {
            "type": "string",
            "description": "The last updated timestamp, RFC3339 UTC."
          }
        },
        "description": "Response message for the Admin.CreateCloudWatchMetricsStream rpc."
      },
      "v1ConfirmGoogleSheetAccessRequest": {
        "type": "object",
        "properties": {
          "sheetUrl": {
            "title": "Required. The URL of the Google Sheet.\nExample: \"https://docs.google.com/spreadsheets/d/1A2B3C4D5E6F7G8H9I0J/edit\"",
            "type": "string"
          }
        }
      },
      "v1ConfirmGoogleSheetAccessResponse": {
        "type": "object",
        "properties": {
          "googleSheetId": {
            "title": "The extracted id from the Google Sheet URL.\nExample: \"1A2B3C4D5E6F7G8H9I0J\"",
            "type": "string"
          },
          "sheetNames": {
            "title": "The name of the sheet within the Google Sheet.\nExample: \"Sheet1\"",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1ContainerCostUsageRequest": {
        "type": "object",
        "properties": {
          "costGroupId": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "metricType": {
            "$ref": "#/components/schemas/ContainerCostUsageRequestMetricType"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "granularity": {
            "$ref": "#/components/schemas/ContainerCostUsageRequestTimeGranularity"
          },
          "groupBys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContainerCostUsageRequestFilterCriteria"
            }
          },
          "serviceType": {
            "$ref": "#/components/schemas/ContainerCostUsageRequestServiceType"
          }
        }
      },
      "v1ContainerCostUsageResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContainerCostUsageResponseGroupedResult"
            }
          },
          "highlights": {
            "$ref": "#/components/schemas/ContainerCostUsageResponseResourceHighlights"
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          },
          "avgEfficiency": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "v1ConvertInvoiceToPdfResponse": {
        "type": "object",
        "properties": {
          "progress": {
            "type": "string"
          },
          "downloadUrl": {
            "title": "returns \"\" when not ready\nreturns the direct download link",
            "type": "string"
          }
        }
      },
      "v1CostAllocatorDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "expiration": {
            "type": "string",
            "format": "int64"
          },
          "startMonth": {
            "type": "string",
            "description": "Optional. The starting month of the allocator to be effective."
          },
          "defaultAccount": {
            "type": "string",
            "description": "Optional. The default account for remaining costs. If not set, will allocate the cost to the original account."
          },
          "criteria": {
            "$ref": "#/components/schemas/coverCombinations"
          },
          "allocator": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1Allocator"
            }
          },
          "createTime": {
            "type": "string"
          },
          "updateTime": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "v1CostAttributeItem": {
        "type": "object",
        "properties": {
          "aws": {
            "$ref": "#/components/schemas/apiawsCostAttribute"
          },
          "azure": {
            "$ref": "#/components/schemas/apiazureCostAttribute"
          }
        },
        "description": "Response message for the Cost.ReadCostAttributes rpc."
      },
      "v1CreateAccessGroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Required. access group name.\n\nWe recommend the name length of 1~60 characters."
          },
          "description": {
            "type": "string",
            "description": "Required. access group description.\n\nWe recommend the description length of 0~150 characters."
          },
          "billingGroups": {
            "type": "array",
            "description": "Required. Billing group to be included in the access group.\n\nYou can only include billing groups with the same calculation type and currency type.\nSpecify the billingInternalIds. For example: [`billingInternalId1`,`billingInternalId2`,`billingInternalId3`]",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Request message for the CreateAccessGroup rpc."
      },
      "v1CreateAccountAccessRequest": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "Required. The target AWS account to validate."
          },
          "fromTerraform": {
            "title": "Optional. Set to true if deployment is done through terraform",
            "type": "boolean"
          }
        },
        "description": "Request message for the CreateAccountAccess rpc."
      },
      "v1CreateAccountAccessStacksetRequest": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "Required. The AWS payer account to validate."
          },
          "region": {
            "type": "string",
            "description": "Required. The region of the stack deployment."
          }
        },
        "description": "Request message for the CreateAccountAccessStackset rpc."
      },
      "v1CreateAccountBudgetResponse": {
        "title": "Response message for CreateAccountBudget",
        "type": "object",
        "properties": {
          "budgetId": {
            "title": "Budget Id",
            "type": "string"
          }
        }
      },
      "v1CreateAccountInvoiceServiceDiscountsResponse": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1AccountServiceDiscounts"
            }
          }
        },
        "description": "Response message for the CreateAccountInvoiceServiceDiscounts rpc."
      },
      "v1CreateAccountRequestAwsOptions": {
        "type": "object",
        "properties": {
          "managementAccountId": {
            "type": "string",
            "description": "Optional. The management account id (formerly known as master, or payer) to which an account belongs to, initially. If the account is moved to another management account, the system is able to detect it and set this value accordingly."
          }
        },
        "description": "AWS-specific options for registering an account."
      },
      "v1CreateAccountRequestGcpOptions": {
        "type": "object",
        "properties": {
          "managementAccountId": {
            "type": "string",
            "description": "Optional."
          },
          "managementBillingId": {
            "type": "string",
            "description": "Optional."
          }
        },
        "description": "GCP-specific options for registering an account."
      },
      "v1CreateAlertRequest": {
        "title": "Request message for CreateAlert",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Required."
          },
          "fixedAmount": {
            "type": "number",
            "description": "At least one in either fixedAmount or percentage.",
            "format": "float"
          },
          "percentage": {
            "type": "number",
            "format": "float"
          },
          "granularity": {
            "type": "string",
            "description": "Optional. daily or monthly. Only 'daily' is supported for now."
          },
          "costGroups": {
            "type": "array",
            "description": "Required. Cost group IDs.",
            "items": {
              "type": "string"
            }
          },
          "channels": {
            "type": "array",
            "description": "Required. Channel IDs.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1CreateAlertResponse": {
        "title": "Response message for CreateAlert",
        "type": "object",
        "properties": {
          "alertData": {
            "$ref": "#/components/schemas/coverAlertData"
          }
        }
      },
      "v1CreateAllocatorRequest": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Optional. The category where the allocator is to be applied. Applicable values are `fee`, `account`, or `savings`. Default value is `fee`."
          },
          "expiration": {
            "type": "string",
            "format": "int64"
          },
          "startMonth": {
            "type": "string",
            "description": "Optional. The starting month of the allocator to be effective."
          },
          "defaultAccount": {
            "type": "string",
            "description": "Optional. The default account for remaining costs. If not set, will allocate the cost to the original account."
          },
          "criteria": {
            "$ref": "#/components/schemas/coverCombinations"
          },
          "allocator": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1Allocator"
            }
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Request message for the CreateAllocator rpc."
      },
      "v1CreateAnnouncementRequest": {
        "type": "object",
        "properties": {
          "label": {
            "title": "Optional. Label description for the announcement",
            "type": "string"
          },
          "type": {
            "title": "Required. Announcement type (eg. \"info\", \"urgent\")",
            "type": "string"
          },
          "contents": {
            "title": "Required. Announcement message (HTML format)",
            "type": "string"
          },
          "billingGroups": {
            "title": "Optional. Group Id that the announcement will apply",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allBillingGroups": {
            "title": "Optional. Apply the announcement to all billing groups",
            "type": "boolean"
          },
          "start": {
            "title": "Required. Start time for the announcement (epoch time)",
            "type": "string",
            "format": "int64"
          },
          "end": {
            "title": "Required. End time for the announcement (epoch time)",
            "type": "string",
            "format": "int64"
          },
          "status": {
            "title": "Required. Announcement status (\"enabled\", \"disabled\")",
            "type": "string"
          }
        }
      },
      "v1CreateAnomalyAlertRequest": {
        "title": "Rquest message for CreateAnomalyAlert",
        "type": "object",
        "properties": {
          "name": {
            "title": "Required. Name of the Anomaly Alert",
            "type": "string"
          },
          "alertEnabled": {
            "title": "Required. Toggle disable and enable status of the alert",
            "type": "boolean"
          },
          "frequency": {
            "title": "Required. How often the user wants to receive alerts. Daily or Weekly",
            "type": "string"
          },
          "costGroupId": {
            "title": "Requried. The Id of the cost group you want to monitor if there is an anomaly",
            "type": "string"
          },
          "notificationChannels": {
            "type": "array",
            "description": "Required. The Channels where you want to send the alerts.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1CreateApiClientRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Required. The descriptive name of the API client to create."
          }
        },
        "description": "Request message for the Iam.CreateApiClient rpc."
      },
      "v1CreateBillingGroupInvoiceServiceDiscountsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Service discount id."
          }
        },
        "description": "Response message for the CreateBillingGroupInvoiceServiceDiscounts rpc."
      },
      "v1CreateBillingGroupMergedRequest": {
        "type": "object",
        "properties": {
          "billingGroupId": {
            "type": "string",
            "description": "Required. The billing group's id."
          },
          "billingGroupName": {
            "type": "string",
            "description": "Required. The billing group's name."
          },
          "companyName": {
            "title": "Required. Company's name",
            "type": "string"
          },
          "billingTitle": {
            "title": "Optional. The title of the billing",
            "type": "string"
          },
          "phoneNumber": {
            "title": "Optional. Company's phone number",
            "type": "string"
          },
          "postalCode": {
            "title": "Optional. Company's postal code",
            "type": "string"
          },
          "address": {
            "title": "Optional. Company's address",
            "type": "string"
          },
          "personal": {
            "title": "Optional. Addressee",
            "type": "string"
          },
          "remarks": {
            "title": "Optional. Any remarks about the billing group",
            "type": "string"
          },
          "projectId": {
            "title": "Optional. Project code",
            "type": "string"
          },
          "language": {
            "title": "Optional. Invoice language",
            "type": "string"
          },
          "displayCost": {
            "title": "Optional. Calculation type, true unblended or unblended",
            "type": "string"
          },
          "exchangeRateType": {
            "title": "Optional. Exchange rate type, payer or billing group",
            "type": "string"
          },
          "accountOptions": {
            "$ref": "#/components/schemas/v1AccountOptions"
          },
          "invoices": {
            "$ref": "#/components/schemas/v1CreateBillingGroupRequestInvoice"
          },
          "awsOptions": {
            "$ref": "#/components/schemas/billingv1AwsOptions"
          },
          "city": {
            "title": "Optional. Company's city",
            "type": "string"
          },
          "prefecture": {
            "title": "Optional. Company's prefecture",
            "type": "string"
          },
          "country": {
            "title": "Optional. Company's country",
            "type": "string"
          },
          "invoiceTemplateId": {
            "title": "Optional. Invoice template ID to associate with the billing group",
            "type": "string"
          },
          "tagSettings": {
            "title": "Optional. Tag settings for the billing group",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1TagSetting"
            }
          },
          "nonTagSetting": {
            "$ref": "#/components/schemas/v1NonTagSetting"
          },
          "vendorAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1VendorAccounts"
            }
          },
          "customFields": {
            "title": "Optional. Custom fields to add to the billing group",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "azureOptions": {
            "$ref": "#/components/schemas/billingv1AzureOptions"
          }
        },
        "description": "Request message for the CreateBillingGroupMerged rpc."
      },
      "v1CreateBillingGroupRequest": {
        "type": "object",
        "properties": {
          "billingGroupId": {
            "type": "string",
            "description": "Required. The billing group's id."
          },
          "billingGroupName": {
            "type": "string",
            "description": "Required. The billing group's name."
          },
          "companyName": {
            "title": "Required. Company’s name",
            "type": "string"
          },
          "billingTitle": {
            "title": "Optional. The title of the billing",
            "type": "string"
          },
          "phoneNumber": {
            "title": "Optional. Company’s phone number",
            "type": "string"
          },
          "postalCode": {
            "title": "Optional. Company’s postal code",
            "type": "string"
          },
          "address": {
            "title": "Optional. Company’s address",
            "type": "string"
          },
          "personal": {
            "title": "Optional. Addressee",
            "type": "string"
          },
          "remarks": {
            "title": "Optional. Any remarks about the billing group",
            "type": "string"
          },
          "projectId": {
            "title": "Optional. Project code",
            "type": "string"
          },
          "language": {
            "title": "Optional. Invoice language",
            "type": "string"
          },
          "displayCost": {
            "title": "Optional. Calculation type, true unblended or unblended",
            "type": "string"
          },
          "exchangeRateType": {
            "title": "Optional. Exchange rate type, payer or billing group",
            "type": "string"
          },
          "accountOptions": {
            "$ref": "#/components/schemas/v1AccountOptions"
          },
          "invoices": {
            "$ref": "#/components/schemas/v1CreateBillingGroupRequestInvoice"
          },
          "awsOptions": {
            "$ref": "#/components/schemas/billingv1AwsOptions"
          },
          "city": {
            "title": "Optional. Company's city",
            "type": "string"
          },
          "prefecture": {
            "title": "Optional. Company's prefecture",
            "type": "string"
          },
          "country": {
            "title": "Optional. Company's country",
            "type": "string"
          }
        },
        "description": "Request message for the Billing.CreateBillingGroup rpc."
      },
      "v1CreateBillingGroupRequestInvoice": {
        "title": "Vendor invoice setttings",
        "type": "object",
        "properties": {
          "aws": {
            "$ref": "#/components/schemas/v1CreateBillingGroupRequestInvoiceVendor"
          },
          "azure": {
            "$ref": "#/components/schemas/v1CreateBillingGroupRequestInvoiceVendor"
          },
          "gcp": {
            "$ref": "#/components/schemas/v1CreateBillingGroupRequestInvoiceVendor"
          }
        }
      },
      "v1CreateBillingGroupRequestInvoiceVendor": {
        "title": "Specific settings per vendor",
        "type": "object",
        "properties": {
          "calcType": {
            "type": "string"
          },
          "discountRate": {
            "type": "number",
            "format": "double"
          },
          "substitutionFee": {
            "type": "string"
          },
          "substitutionFix": {
            "type": "number",
            "format": "double"
          },
          "substitutionRate": {
            "type": "number",
            "format": "double"
          },
          "supportFee": {
            "type": "string"
          },
          "supportRate": {
            "type": "number",
            "format": "double"
          },
          "supportFix": {
            "type": "number",
            "format": "double"
          },
          "taxRate": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string"
          },
          "discountTargetUsage": {
            "type": "string"
          },
          "substitutionFeeTargetUsage": {
            "type": "string"
          },
          "discountCalcLogic": {
            "type": "string"
          },
          "substitutionFeeCalcTarget": {
            "type": "string"
          },
          "substitutionFeeCalcType": {
            "type": "string"
          },
          "supportAmountTarget": {
            "type": "string"
          },
          "supportFeeCalcTarget": {
            "type": "string"
          }
        }
      },
      "v1CreateBudgetAlertsRequest": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string",
            "description": "Required. At the moment, only `aws` is supported."
          },
          "accounts": {
            "type": "array",
            "description": "Required. Lsit of accountId. For example, you set to [\"accountId1\",\"accountId2\",\"accountId3\"].",
            "items": {
              "type": "string"
            }
          },
          "notification": {
            "$ref": "#/components/schemas/apiBudgetAlertNotification"
          },
          "daily": {
            "$ref": "#/components/schemas/apiDailyBudgetAlert"
          },
          "dailyRate": {
            "$ref": "#/components/schemas/apiDailyRateIncreaseBudgetAlert"
          },
          "monthly": {
            "$ref": "#/components/schemas/apiMonthlyBudgetAlert"
          }
        },
        "description": "Request message for the CreateBudgetAlerts rpc."
      },
      "v1CreateBudgetRequest": {
        "type": "object",
        "properties": {
          "budgetData": {
            "$ref": "#/components/schemas/coverBudgetData"
          }
        }
      },
      "v1CreateBudgetResponse": {
        "type": "object",
        "properties": {
          "budgetData": {
            "$ref": "#/components/schemas/coverBudgetData"
          }
        }
      },
      "v1CreateCalculatorCostModifierResponse": {
        "type": "object",
        "properties": {
          "aws": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1CalculatorCostModifier"
            }
          },
          "azure": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1CalculatorCostModifier"
            }
          }
        },
        "description": "Response message for the Cost.CreateCalculatorCostModifier rpc."
      },
      "v1CreateChannelRequest": {
        "title": "Request message for CreateChannel",
        "type": "object",
        "properties": {
          "name": {
            "title": "Required. Either actual email address or slack/msteams channel name",
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Required. email, slack, or msteams."
          },
          "webhookUrl": {
            "type": "string",
            "description": "Optional. Only needed for slack and msteams type."
          }
        }
      },
      "v1CreateChannelResponse": {
        "title": "Response message for CreateChannel",
        "type": "object",
        "properties": {
          "channelData": {
            "$ref": "#/components/schemas/coverChannelData"
          }
        }
      },
      "v1CreateCloudWatchMetricsStreamRequest": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "Required. The target AWS account to validate."
          }
        },
        "description": "Request message for the Admin.CreateCloudWatchMetricsStream rpc."
      },
      "v1CreateCostExplorerAccessRequest": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "Required. The target AWS account to validate."
          }
        },
        "description": "Request message for the Flow.CreateCostExplorerAccess rpc.\nThis endpoint only supports the 'apionly' template type."
      },
      "v1CreateCostExplorerAccessResponse": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "The queried target account."
          },
          "roleArn": {
            "type": "string",
            "description": "The role ARN that provides the cross-account access permissions."
          },
          "externalId": {
            "type": "string",
            "description": "The external id for this role."
          },
          "stackId": {
            "type": "string",
            "description": "The id of the CloudFormation stack deployed in the target account."
          },
          "stackRegion": {
            "type": "string",
            "description": "The region where the stack is deployed."
          },
          "templateUrl": {
            "type": "string",
            "description": "The latest template used to deploy the stack."
          },
          "status": {
            "type": "string",
            "description": "This can be `latest`, `outdated`, or some error information."
          },
          "lastUpdated": {
            "type": "string",
            "description": "The last updated timestamp, RFC3339 UTC."
          }
        },
        "description": "Response message for the Flow.CreateCostExplorerAccess rpc."
      },
      "v1CreateCostFiltersResponse": {
        "type": "object",
        "properties": {
          "filterId": {
            "type": "string",
            "description": "Required. Filter Id."
          }
        },
        "description": "Response message for the CreateCostFilters rpc."
      },
      "v1CreateCostGroupRequest": {
        "title": "Request message for CreateCostGroup",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/coverCostGroupType"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "colorTheme": {
            "type": "string"
          },
          "combinations": {
            "$ref": "#/components/schemas/coverCombinations"
          }
        }
      },
      "v1CreateCostGroupResponse": {
        "title": "Response message for CreateCostGroup",
        "type": "object",
        "properties": {
          "costGroupData": {
            "$ref": "#/components/schemas/coverCostGroupData"
          }
        }
      },
      "v1CreateCustomFieldRequest": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "v1CreateCustomizedBillingServiceRequest": {
        "type": "object",
        "properties": {
          "name": {
            "title": "Required. [blueapi.api.ripple.CustomizedBillingService.name]",
            "type": "string"
          },
          "description": {
            "title": "Optional. [blueapi.api.ripple.CustomizedBillingService.description]",
            "type": "string"
          },
          "config": {
            "$ref": "#/components/schemas/rippleMethodConfig"
          }
        },
        "description": "Request message for the Billing.CreateCustomizedBillingService rpc."
      },
      "v1CreateDefaultCostAccessRequest": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "Required. The target AWS account to validate."
          },
          "curType": {
            "type": "string",
            "description": "Optional. The CUR type. Values should be either 'legacy' or '2.0'. Defaults to 'legacy' if empty."
          }
        },
        "description": "Request message for the Admin.CreateDefaultCostAccess rpc."
      },
      "v1CreateDefaultNotificationChannelRequest": {
        "type": "object",
        "description": "Request message for the Admin.CreateDefaultNotificationChannel rpc."
      },
      "v1CreateDiscountExpirationAlertRequest": {
        "title": "Request message for CreateDiscountExpirationAlert",
        "type": "object",
        "properties": {
          "frequencies": {
            "title": "Required if the alertEnabled is set to true\nSupported values are the following:\n[0, 7, 30, 60, 90]",
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            }
          },
          "costGroups": {
            "title": "Required. Cost Group Id",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "alertEnabled": {
            "type": "boolean",
            "description": "required. Switch in enabling alert."
          },
          "channels": {
            "type": "array",
            "description": "required. Array of notificationChannel Ids from DynamoDB. Existing in ripple.",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "title": "required. Name of alert",
            "type": "string"
          }
        }
      },
      "v1CreateFreeFormatRequest": {
        "title": "BillingGroup FreeFormat: Also known as miscellaneous",
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1FreeFormItem"
            }
          }
        }
      },
      "v1CreateGroupRootUserRequest": {
        "title": "Request message for the Iam.CreateGroupRootUser rpc",
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address of the user being created."
          },
          "password": {
            "title": "The password of the user being created. A value will be generated if not is provided for this field",
            "type": "string"
          },
          "groupId": {
            "type": "string",
            "description": "The ID of the group to which the user will be added. This must either be a billing group ID or an access group ID."
          },
          "groupType": {
            "type": "string",
            "description": "The type of group which is represented by the group ID. Valid values include \"billing_group\" or \"access_group\"."
          },
          "inputType": {
            "type": "string",
            "description": "This value determines whether the password should be auto-generated or if the plaintext value received with the request should be used. A value of \"Auto\" will result in an auto-generated password whereas a value of \"Custom\" will result in the password included with the request being used."
          },
          "plan": {
            "type": "string",
            "description": "The plan associated with the root-user account. Valid values include \"trial\", \"limited3\" and \"limited4\"."
          },
          "emailNotification": {
            "type": "boolean",
            "description": "Whether or not a notification should be sent to the provided email after the user has been created."
          },
          "meta": {
            "$ref": "#/components/schemas/apiFeatureFlags"
          }
        }
      },
      "v1CreateIdentityProviderRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Required. The IdP name."
          },
          "type": {
            "type": "string",
            "description": "Required. Value is `saml`."
          },
          "metadata": {
            "type": "string",
            "description": "Required. The contents of the metadata file from your IdP."
          }
        },
        "description": "Request message for the Iam.CreateIdentityProvider rpc."
      },
      "v1CreateInvoiceServiceDiscountsRequest": {
        "type": "object",
        "properties": {
          "name": {
            "title": "Required. [blueapi.api.ripple.v1.InvoiceServiceDiscounts.name]",
            "type": "string"
          },
          "description": {
            "title": "Optional. [blueapi.api.ripple.v1.InvoiceServiceDiscounts.description]",
            "type": "string"
          },
          "setting": {
            "$ref": "#/components/schemas/v1InvoiceServiceDiscountsSetting"
          }
        },
        "description": "Request message for the Billing.CreateInvoiceServiceDiscounts rpc."
      },
      "v1CreateIpFilterRequest": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Required. The IP input to filter, either blacklist or whitelist. Should be in CIDR format (i.e. `1.2.3.4/32`)."
          },
          "type": {
            "type": "string",
            "description": "Optional. Can be `whitelist` or `blacklist`. Defaults to `blacklist` if empty."
          },
          "rootUser": {
            "type": "string",
            "description": "Optional. If `rootUser` is valid and `subUser` is empty, filter is for this rootuser. If both `rootUser` and `subUser` inputs are empty, filter is at global scope."
          },
          "subUser": {
            "type": "string",
            "description": "Optional. If `subuser` is valid, filter is for this subuser; `rootUser` value is discarded. If both `rootUser` and `subUser` inputs are empty, filter is at global scope."
          }
        },
        "description": "Request message for the Iam.CreateIpFilter rpc."
      },
      "v1CreateMemberRequest": {
        "title": "Request message for CreateMember",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "costgroups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1CreateMemberResponse": {
        "title": "Response message for CreateMember",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1CreateNotificationChannelRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Required. Name of the notification channel."
          },
          "type": {
            "type": "string",
            "description": "Required. Valid values: `email`, `slack`, `msteams`."
          },
          "email": {
            "$ref": "#/components/schemas/apiEmailChannel"
          },
          "slack": {
            "$ref": "#/components/schemas/apiSlackChannel"
          },
          "msteams": {
            "$ref": "#/components/schemas/apiMSTeamsChannel"
          },
          "product": {
            "type": "string",
            "description": "Optional. For Octo use only: `octo`."
          }
        },
        "description": "Request message for the Admin.CreateNotificationChannel rpc."
      },
      "v1CreateNotificationRequest": {
        "type": "object",
        "properties": {
          "notificationType": {
            "type": "string",
            "description": "Required\nValid values:\n`InvoiceCalculationStarted`,\n`InvoiceCalculationFinished`,\n`CurUpdatedAfterInvoice`.\n`AccountBudgetAlert`."
          },
          "channels": {
            "title": "Required",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabled": {
            "title": "Required",
            "type": "boolean"
          },
          "account": {
            "$ref": "#/components/schemas/adminv1NotificationAccount"
          }
        },
        "description": "Request message for the Admin.CreateNotificationTypeChannels rpc."
      },
      "v1CreateOrgRequest": {
        "type": "object",
        "properties": {
          "email": {
            "title": "Required. Organization's email",
            "type": "string"
          },
          "description": {
            "title": "Required. Organization's description or company name",
            "type": "string"
          },
          "password": {
            "type": "string",
            "description": "Optional. User can decide to let the system generates the password."
          },
          "name": {
            "title": "To be used for onboarding profile",
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "usage": {
            "type": "string"
          },
          "intention": {
            "type": "string"
          },
          "isAuth0Signup": {
            "type": "boolean"
          },
          "customerId": {
            "title": "Optional. Customer Id from AWS marketplace",
            "type": "string"
          },
          "locale": {
            "type": "string",
            "description": "Optional. User locale. Default value is en if not supplied."
          },
          "auth0UserId": {
            "type": "string",
            "description": "Optional. Auth0 user id for users registering using social login."
          }
        },
        "description": "Request message for the Organization.CreateOrg rpc."
      },
      "v1CreateOrgResponse": {
        "type": "object",
        "properties": {
          "org": {
            "$ref": "#/components/schemas/rippleOrg"
          },
          "password": {
            "type": "string"
          }
        },
        "description": "Response message for the Organization.CreateOrg rpc."
      },
      "v1CreateOrganizationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "domains": {
            "type": "array",
            "description": "List of domains associated with the organization.",
            "items": {
              "type": "string"
            }
          },
          "timezone": {
            "type": "string"
          }
        }
      },
      "v1CreatePayerAccountRequestAwsOptions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Required. The id of the management account."
          },
          "name": {
            "type": "string",
            "description": "Optional. The name, or description of the management account. This is set to `id` when not specified."
          },
          "bucketName": {
            "type": "string",
            "description": "Required. S3 Bucket name."
          },
          "prefix": {
            "type": "string",
            "description": "Optional. Prefix."
          },
          "reportName": {
            "type": "string",
            "description": "Required. Report name."
          },
          "roleArn": {
            "type": "string",
            "description": "Required. Role ARN for Alphaus to assume for access."
          }
        },
        "description": "See [https://help.alphaus.cloud/en/articles/3612555-ripple-aws-things-you-need-to-prepare-before-starting] for more information.\n\nSee [https://docs.aws.amazon.com/cur/latest/userguide/cur-create.html] for more information. Requirements include: Additional report details = 'Include Resource IDS' enabled, Prefix = non-empty (recommendation only), Time granularity = 'Hourly', File format = 'text/csv'."
      },
      "v1CreateProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "v1CreateProfilingRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "usage": {
            "type": "string"
          },
          "intention": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "linkSource": {
            "type": "string"
          },
          "hasSubscribedUpdates": {
            "type": "boolean"
          }
        }
      },
      "v1CreateProfilingResponse": {
        "type": "object"
      },
      "v1CreateProformaCurRequest": {
        "title": "Request message for Admin.CreateProformaCur rpc",
        "type": "object",
        "properties": {
          "payerId": {
            "type": "string",
            "description": "Required."
          },
          "billingInternalId": {
            "type": "string",
            "description": "Required."
          },
          "reportName": {
            "type": "string",
            "description": "Required."
          },
          "s3BucketName": {
            "title": "Optional. Default value: `alphaus-proforma-cur-export`",
            "type": "string"
          },
          "s3Prefix": {
            "title": "Optional. Default value: `pre`",
            "type": "string"
          },
          "s3Region": {
            "title": "Optional. Default value: `us-east-1`",
            "type": "string"
          }
        }
      },
      "v1CreateProjectRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "v1CreateResellerRequest": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Required. You can set billing internal id or access group id."
          },
          "email": {
            "type": "string",
            "description": "Required."
          },
          "password": {
            "type": "string",
            "description": "Required.\n\nWe recommend a password length of 8~32 characters. If you send 0 characters, a password will be generated automatically."
          },
          "notification": {
            "type": "boolean",
            "description": "Required. If valid, you will be notified via email address."
          },
          "waveConfig": {
            "title": "Optional. Feature Config. If not set config value, use default config",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/rippleResellerConfig"
            }
          },
          "aquaConfig": {
            "title": "Optional. Feature Config. If not set config value, use default config",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/rippleResellerConfig"
            }
          }
        },
        "description": "Request message for the CreateReseller rpc."
      },
      "v1CreateRoleRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Required. The name of the role to create. Role names should have at least 6 characters in length and 32 characters maximum. It should also be alphanumeric. Hyphens and underscores are allowed in between. The regular expression used for validation is `^[A-Za-z0-9][A-Za-z0-9_-]*[A-Za-z0-9]$`."
          },
          "namespace": {
            "type": "string",
            "description": "Required. The namespace where this role will belong."
          },
          "permissions": {
            "type": "array",
            "description": "Required. The list of permissions to attach to this role.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Request message for the Iam.CreateRole rpc."
      },
      "v1CreateSettingsRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Required. The id of the payer."
          },
          "accountScope": {
            "type": "string",
            "description": "Required. Account scope determines if the account is payer or linked account. Valid values are `payer` or `linked`."
          },
          "customization": {
            "type": "string",
            "description": "Required. Customization setting for SP. Valid values are `COMPUTE_SP` or `EC2_INSTANCE_SP`."
          },
          "planTerm": {
            "type": "string",
            "description": "Required. Term of the SP. Valid values are `ONE_YEAR` or `THREE_YEARS`."
          },
          "paymentOption": {
            "type": "string",
            "description": "Required. Payment option for the SP. Valid values are `ALL_UPFRONT`, `PARTIAL_UPFRONT`, or `NO_UPFRONT`."
          },
          "lookBackPeriod": {
            "type": "string",
            "description": "Required. Lookback period for recommendation. Valid values are `SEVEN_DAYS`, `THIRTY_DAYS`, or `SIXTY_DAYS`."
          },
          "instanceFamily": {
            "title": "Optional. If EC2 Instance SP is selected in Customization, request will include list of instance family",
            "type": "string"
          },
          "annualBudget": {
            "type": "number",
            "description": "Optional. Annual budget input for SP.",
            "format": "double"
          },
          "approval": {
            "type": "boolean",
            "description": "Optional. Purchase approval from the payer for the SP. Default value is `false`."
          },
          "payerId": {
            "title": "Required. Payer account ID",
            "type": "string"
          }
        },
        "description": "Request message for the Flow.CreateSettings rpc."
      },
      "v1CreateSettingsResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          }
        },
        "description": "Response message for the Flow.CreateSettings rpc."
      },
      "v1CreateSharedResourcesRequest": {
        "type": "object",
        "properties": {
          "sharedResourceName": {
            "type": "string"
          },
          "sharedResourcesCombinations": {
            "$ref": "#/components/schemas/coverResourcesCombinations"
          },
          "distribution": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "description": "List the unit items and their corresponding percentages."
          },
          "allocated": {
            "type": "number",
            "format": "double"
          },
          "unallocated": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "v1CreateSharedResourcesResponse": {
        "type": "object",
        "properties": {
          "sharedResources": {
            "$ref": "#/components/schemas/coverSharedResourcesCombination"
          }
        }
      },
      "v1CreateTeamRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "v1CreateUnitFromSuggestedRequest": {
        "type": "object",
        "properties": {
          "suggestedUnitIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1CreateUnitFromSuggestedResponse": {
        "type": "object",
        "properties": {
          "unitCostIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1CreateUnitMetricRequest": {
        "type": "object",
        "properties": {
          "metricName": {
            "title": "Required. Unit Metric Name",
            "type": "string"
          },
          "aggregationMethod": {
            "type": "string"
          },
          "dataSource": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "costgroupId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sourceInfo": {
            "$ref": "#/components/schemas/coverSourceInfo"
          }
        }
      },
      "v1CreateUnitMetricResponse": {
        "type": "object",
        "properties": {
          "unitMetric": {
            "$ref": "#/components/schemas/coverUnitMetric"
          }
        }
      },
      "v1CreateUnitTypeRequest": {
        "type": "object",
        "properties": {
          "unitName": {
            "type": "string"
          },
          "unitItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverUnitItem"
            }
          },
          "sharedResources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverSharedResourcesCombination"
            }
          },
          "description": {
            "type": "string"
          }
        }
      },
      "v1CreateUnitTypeResponse": {
        "type": "object",
        "properties": {
          "unitCostData": {
            "$ref": "#/components/schemas/coverUnitCostData"
          }
        }
      },
      "v1CreateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Required. Min: 4, max: 18, allowed characters: letters, numbers, `_` (underscore), `.` (period) and `-` (hyphen) characters."
          },
          "password": {
            "type": "string",
            "description": "Required. Minimum of 8 characters."
          },
          "email": {
            "type": "string",
            "description": "Optional. Email address of the subuser."
          },
          "nickName": {
            "type": "string",
            "description": "Optional. Nickname or description. It is set to 'name' if empty."
          }
        },
        "description": "Request message for the Iam.CreateUser rpc."
      },
      "v1CreateUserRoleMappingRequest": {
        "type": "object",
        "properties": {
          "subUser": {
            "type": "string",
            "description": "Optional. The subuser to map the roles. Defaults to caller if not set."
          },
          "roles": {
            "type": "array",
            "description": "Required. The roles to map to the user. Limited to 5 items.",
            "items": {
              "$ref": "#/components/schemas/v1MapRole"
            }
          }
        },
        "description": "Request message for the Iam.CreateUserRoleMapping rpc."
      },
      "v1CreateUserRoleMappingResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "failed": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Response message for the Iam.CreateUserRoleMapping rpc."
      },
      "v1CreateViewRequest": {
        "title": "Request message for CreateView",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isPrivate": {
            "type": "boolean"
          },
          "isEditable": {
            "type": "boolean"
          },
          "icon": {
            "type": "string"
          },
          "reportType": {
            "type": "string"
          },
          "colorTheme": {
            "type": "string"
          },
          "reportPeriod": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "v1CreateViewResponse": {
        "title": "Response message for CreateView",
        "type": "object",
        "properties": {
          "viewData": {
            "$ref": "#/components/schemas/coverViewData"
          }
        }
      },
      "v1Credit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "creditAmount": {
            "type": "number",
            "format": "double"
          },
          "term": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created": {
            "type": "string"
          },
          "initialFee": {
            "type": "number",
            "format": "double"
          },
          "creditBalance": {
            "type": "number",
            "format": "double"
          },
          "applied": {
            "type": "boolean"
          }
        }
      },
      "v1CsvSetting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "col": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CsvSettingColumn"
            }
          }
        }
      },
      "v1CustomField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the custom field, automatically generated and immutable."
          },
          "key": {
            "title": "Descriptive name of the custom field",
            "type": "string"
          },
          "description": {
            "title": "Detailed description of the custom field",
            "type": "string"
          }
        }
      },
      "v1DataAccess": {
        "title": "Message Response for GetDataAccess. For Azure and GCP",
        "type": "object",
        "properties": {
          "target": {
            "title": "Billing Id for GCP, Account Id for Azure",
            "type": "string"
          },
          "orgId": {
            "title": "Org Id",
            "type": "string"
          },
          "gcpOptions": {
            "$ref": "#/components/schemas/coverGcpOptions"
          },
          "azureOptions": {
            "$ref": "#/components/schemas/apicoverAzureOptions"
          },
          "awsOptions": {
            "$ref": "#/components/schemas/apicoverAwsOptions"
          },
          "accountType": {
            "title": "Account type, linked or payer",
            "type": "string"
          },
          "lastUpdate": {
            "title": "Last Update",
            "type": "string"
          },
          "createTime": {
            "title": "Time Created",
            "type": "string"
          },
          "vendor": {
            "type": "string"
          }
        }
      },
      "v1DefaultCostAccess": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "The queried target account."
          },
          "roleArn": {
            "type": "string",
            "description": "The role ARN that provides the cross-account access permissions."
          },
          "externalId": {
            "type": "string",
            "description": "The external id for this role."
          },
          "stackId": {
            "type": "string",
            "description": "The id of the CloudFormation stack deployed in the target account."
          },
          "stackRegion": {
            "type": "string",
            "description": "The region where the stack is deployed."
          },
          "templateUrl": {
            "type": "string",
            "description": "The latest template used to deploy the stack."
          },
          "status": {
            "type": "string",
            "description": "This can be `latest`, `outdated`, or some error information."
          },
          "lastUpdated": {
            "type": "string",
            "description": "The last updated timestamp, RFC3339 UTC."
          }
        },
        "description": "Response message for the Admin.GetDefaultCostAccess, Admin.CreateDefaultCostAccess rpc."
      },
      "v1DeleteAccountAccessResponse": {
        "type": "object",
        "properties": {
          "targetId": {
            "type": "string"
          }
        },
        "description": "Response message for the DeleteAccountAccess rpc."
      },
      "v1DeleteAlertResponse": {
        "title": "Response message for DeleteAlert",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "v1DeleteBudgetResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "v1DeleteChannelResponse": {
        "title": "Response message for DeleteChannel",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "v1DeleteCostGroupResponse": {
        "title": "Response message for DeleteCostGroup",
        "type": "object",
        "properties": {
          "costGroupId": {
            "type": "string"
          }
        }
      },
      "v1DeleteMemberResponse": {
        "title": "Response message for DeleteMember",
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          }
        }
      },
      "v1DeleteSharedResourcesResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "v1DeleteUnitMetricResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "v1DeleteUnitTypeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "v1DeleteViewResponse": {
        "title": "Response message for DeleteView",
        "type": "object",
        "properties": {
          "viewId": {
            "type": "string"
          }
        }
      },
      "v1DiscountExpiryAlertData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "alertEnabled": {
            "type": "boolean"
          },
          "frequencies": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            }
          },
          "costGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverAlertCostGroup"
            }
          },
          "details": {
            "type": "string"
          },
          "channels": {
            "$ref": "#/components/schemas/coverAlertChannels"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "v1ExchangeRates": {
        "type": "object",
        "properties": {
          "month": {
            "type": "string"
          },
          "exchangeRate": {
            "type": "number",
            "format": "float"
          },
          "date": {
            "type": "string"
          }
        }
      },
      "v1ExecuteOptimizationRequest": {
        "type": "object",
        "properties": {
          "recommendationId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "v1ExecuteOptimizationResponse": {
        "type": "object",
        "properties": {
          "awsOption": {
            "$ref": "#/components/schemas/ExecuteOptimizationResponseAWSOption"
          },
          "gcpOption": {
            "$ref": "#/components/schemas/ExecuteOptimizationResponseGCPOption"
          },
          "azureCspOption": {
            "$ref": "#/components/schemas/ExecuteOptimizationResponseAzureCSPOption"
          }
        }
      },
      "v1ExportAccountInvoiceServiceDiscountsRequest": {
        "required": [
          "format"
        ],
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "description": "Required. At the moment, `CSV` is supported."
          },
          "language": {
            "type": "string",
            "description": "Optional. At the moment, `ja`,`en` is supported.\n\nUsually the language of the user information is used, \nbut it may be a different language due to cahce.\nIn that case, you can use this option to change the language of CSV."
          },
          "directLink": {
            "title": "Returns a directLink if set to true",
            "type": "boolean"
          }
        },
        "description": "Request message for the ExportAccountInvoiceServiceDiscounts rpc."
      },
      "v1ExportAuditLogsRequest": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "description": "Required. At the moment, `CSV`,`JSON` is supported."
          },
          "startTime": {
            "type": "string",
            "description": "Required. The UTC date to start data from. If not set, the first day of the current year will be used. Format: `yyyymmdd`."
          },
          "endTime": {
            "type": "string",
            "description": "Required. The UTC date to end data from. If not set, the first day of the current year will be used. Format: `yyyymmdd`."
          }
        },
        "description": "Request message for the ExportAuditLogs rpc."
      },
      "v1ExportBillingGroupCsvResponse": {
        "type": "object",
        "properties": {
          "downloadLink": {
            "title": "csv direct download link\nexpires in 10 minutes",
            "type": "string"
          }
        },
        "description": "Response message for the ExportBillingGroupCsv rpc."
      },
      "v1ExportBillingGroupInvoiceServiceDiscountsRequest": {
        "required": [
          "format"
        ],
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "description": "Required. At the moment, `CSV` is supported."
          },
          "language": {
            "type": "string",
            "description": "Optional. At the moment, `ja`,`en` is supported.\n\nUsually the language of the user information is used, \nbut it may be a different language due to cahce.\nIn that case, you can use this option to change the language of CSV."
          },
          "directLink": {
            "title": "Returns a directLink if set to true",
            "type": "boolean"
          }
        },
        "description": "Request message for the ExportBillingGroupInvoiceServiceDiscounts rpc."
      },
      "v1ExportCostFiltersFileResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Required. URL of exported file."
          }
        },
        "description": "Response message for the ExportCostFiltersFile rpc."
      },
      "v1ExportData": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Base64 encoded value."
          },
          "downloadedRows": {
            "type": "string",
            "description": "Downloaded content lines.",
            "format": "int64"
          },
          "totalRows": {
            "type": "string",
            "description": "Total of content lines.",
            "format": "int64"
          }
        },
        "description": "ExportData resource definition."
      },
      "v1ExportInvoiceFileResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Required. URL of exported file.\n\ncsv columns set `group vendor resourceId resourceName type serviceName currency cost`"
          }
        },
        "description": "Response message for the ExportInvoiceFile rpc."
      },
      "v1ExportInvoiceSettingCsvResponse": {
        "type": "object",
        "properties": {
          "downloadLink": {
            "title": "csv direct download link\nexpires in 10 minutes",
            "type": "string"
          }
        },
        "description": "Response message for the ExportBillingGroupCsv rpc."
      },
      "v1ExportServiceDiscountsRequest": {
        "required": [
          "format"
        ],
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "description": "Required. At the moment, `CSV` is supported."
          },
          "language": {
            "type": "string",
            "description": "Optional. At the moment, `ja`,`en` is supported.\n\nUsually the language of the user information is used, \nbut it may be a different language due to cahce.\nIn that case, you can use this option to change the language of CSV."
          }
        },
        "description": "Request message for the ExportServiceDiscounts rpc."
      },
      "v1FeatureSetting": {
        "title": "For rpc UpdateWaveFeature",
        "type": "object",
        "properties": {
          "featureId": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean"
          }
        }
      },
      "v1FeeItem": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string"
          },
          "month": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "cost": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "Response message wrapper for cost group fees."
      },
      "v1FreeFormItem": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "unitCost": {
            "type": "string",
            "format": "int64"
          },
          "total": {
            "type": "string",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "v1GenerateOrganizationCodeRequest": {
        "type": "object"
      },
      "v1GenerateOrganizationCodeResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          }
        }
      },
      "v1GetAICostAndUsageRequest": {
        "type": "object",
        "properties": {
          "costGroupId": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "granularity": {
            "$ref": "#/components/schemas/GetAICostAndUsageRequestGranularity"
          },
          "groupBys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAICostAndUsageRequestFilter"
            }
          }
        }
      },
      "v1GetAICostAndUsageResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1GetAICostAndUsageResponseResult"
            }
          }
        }
      },
      "v1GetAICostAndUsageResponseCost": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "v1GetAICostAndUsageResponseResult": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAICostAndUsageResponseMetric"
            }
          }
        }
      },
      "v1GetAccessGroupResponse": {
        "type": "object",
        "properties": {
          "accessGroup": {
            "$ref": "#/components/schemas/billingv1AccessGroup"
          }
        },
        "description": "Response message for the Billing.GetAccessGroup rpc."
      },
      "v1GetAccountAccessTemplateUrlResponse": {
        "type": "object",
        "properties": {
          "launchUrl": {
            "type": "string",
            "description": "The CloudFormation launch url. Open it in your browser."
          },
          "templateUrl": {
            "type": "string",
            "description": "The latest CloudFormation template. The version is included in the filename."
          },
          "stackName": {
            "type": "string",
            "description": "The default stack name used. Can be modified."
          },
          "principal": {
            "type": "string",
            "description": "The AWS account that will receive the access. Do not change."
          },
          "externalId": {
            "type": "string",
            "description": "The external id for this role. Do not change."
          }
        },
        "description": "Response message for the GetAccountAccessTemplateUrlResponse rpc."
      },
      "v1GetAccountBudgetResponse": {
        "title": "Response message for GetAccountBudget",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/blueapiapiBudget"
          }
        }
      },
      "v1GetAccountGroupResponse": {
        "type": "object",
        "properties": {
          "acctGroup": {
            "$ref": "#/components/schemas/apiAccountGroup"
          }
        },
        "description": "Response message for the Admin.GetAccountGroup rpc."
      },
      "v1GetAccountsResponse": {
        "title": "Response message for GetAccounts",
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1GetAlertDetailsResponse": {
        "title": "Response message for GetAlertDetails",
        "type": "object",
        "properties": {
          "alertData": {
            "$ref": "#/components/schemas/coverAlertData"
          }
        }
      },
      "v1GetAlertsResponse": {
        "title": "Response message for GetAlerts",
        "type": "object",
        "properties": {
          "alertData": {
            "$ref": "#/components/schemas/coverAlertData"
          }
        }
      },
      "v1GetAllocationAttributesResponse": {
        "type": "object",
        "properties": {
          "attribute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllocationAttributesResponseAllocationAttribute"
            }
          }
        },
        "description": "Response message for the GetAllocationAttributes rpc."
      },
      "v1GetAnomalyinCostGroupRequest": {
        "title": "Request message for getting anomaly",
        "type": "object",
        "properties": {
          "costGroupId": {
            "type": "string"
          },
          "startDate": {
            "title": "Start date for detecting anomalies. Valid format: YYYYMMDD",
            "type": "string"
          },
          "endDate": {
            "title": "End date for detection anomalies. Valid format: YYYYMMDD",
            "type": "string"
          }
        }
      },
      "v1GetAssetsSummaryResponse": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1AssetsSummary"
            }
          },
          "recommendationSummary": {
            "title": "Format: JSON String",
            "type": "string"
          }
        }
      },
      "v1GetBillingGroupAccountSupportPlanResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The billing internal id."
          },
          "vendor": {
            "type": "string",
            "description": "At the moment, `aws` is supported."
          },
          "enabled": {
            "type": "boolean",
            "description": "The enabled indicates whether the account support plan is enabled or disabled."
          },
          "setting": {
            "type": "array",
            "description": "The support plan setting. [blueapi.api.ripple.v1.BillingGroupAccountSupportPlan].",
            "items": {
              "$ref": "#/components/schemas/v1BillingGroupAccountSupportPlan"
            }
          }
        },
        "description": "Response message for the GetBillingGroupAccountSupportPlan rpc."
      },
      "v1GetBillingGroupAnnouncementsResponse": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "announcements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1Announcement"
            }
          }
        }
      },
      "v1GetBillingGroupInvoiceServiceDiscountsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Service discount id",
            "type": "string"
          }
        }
      },
      "v1GetBillingGroupResponse": {
        "type": "object",
        "properties": {
          "billingGroup": {
            "$ref": "#/components/schemas/v1BillingGroup"
          }
        },
        "description": "Response message for the Billing.GetBillingGroup rpc."
      },
      "v1GetBillingSettingResponse": {
        "type": "object",
        "properties": {
          "yearMonth": {
            "type": "array",
            "description": "List of available yearmonth.",
            "items": {
              "$ref": "#/components/schemas/rippleYearMonth"
            }
          },
          "roundingMethod": {
            "$ref": "#/components/schemas/rippleRounding"
          },
          "exportRoundingMethod": {
            "$ref": "#/components/schemas/rippleRounding"
          },
          "invoiceLayout": {
            "$ref": "#/components/schemas/rippleInvoiceLayout"
          },
          "invoiceDueDate": {
            "$ref": "#/components/schemas/rippleDueDate"
          },
          "supportCurrency": {
            "type": "array",
            "description": "List of available currency.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Response message for the GetBillingSetting rpc."
      },
      "v1GetBreakevenPointResponse": {
        "title": "Response message for GetBreakevenPoint",
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          },
          "awsCostBreakeven": {
            "$ref": "#/components/schemas/awsAwsCostBreakeven"
          }
        }
      },
      "v1GetBudgetResponse": {
        "type": "object",
        "properties": {
          "budgetData": {
            "$ref": "#/components/schemas/coverBudgetData"
          }
        }
      },
      "v1GetCalculatorConfigResponse": {
        "type": "object",
        "properties": {
          "aws": {
            "$ref": "#/components/schemas/awsCalculatorConfig"
          }
        },
        "description": "Response message for the Cost.GetCalculatorConfig rpc."
      },
      "v1GetCategoriesResponse": {
        "type": "object",
        "properties": {
          "category": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverCategory"
            }
          }
        }
      },
      "v1GetChannelDetailsResponse": {
        "title": "Response message for GetChannelDetails",
        "type": "object",
        "properties": {
          "channelData": {
            "$ref": "#/components/schemas/coverChannelData"
          }
        }
      },
      "v1GetChannelsRequest": {
        "title": "Request message for GetChannels",
        "type": "object",
        "properties": {
          "type": {
            "title": "Optional. Use email, slack, or msteams to filter the type of channels\nOtherwise, it returns all channels",
            "type": "string"
          }
        }
      },
      "v1GetChannelsResponse": {
        "title": "Response message for GetChannels",
        "type": "object",
        "properties": {
          "channelData": {
            "$ref": "#/components/schemas/coverChannelData"
          }
        }
      },
      "v1GetCloudWatchMetricsStreamTemplateUrlResponse": {
        "type": "object",
        "properties": {
          "launchUrl": {
            "type": "string",
            "description": "The CloudFormation launch url. Open it in your browser."
          },
          "templateUrl": {
            "type": "string",
            "description": "The latest CloudFormation template. The version is included in the filename."
          },
          "stackName": {
            "type": "string",
            "description": "The default stack name used. Can be modified."
          },
          "externalId": {
            "type": "string",
            "description": "The external id for this role. Do not change."
          }
        },
        "description": "Response message for the Admin.GetCloudWatchMetricsStreamTemplateUrl rpc."
      },
      "v1GetCloudwatchMetadataResponse": {
        "type": "object",
        "properties": {
          "namespaces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metrics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dimensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetCloudwatchMetadataResponseDimension"
            }
          }
        }
      },
      "v1GetCostAttributesResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "The cost attributes.",
            "items": {
              "$ref": "#/components/schemas/costv1CostAttribute"
            }
          }
        },
        "description": "Response message for the Cost.GetCostAttributes rpc."
      },
      "v1GetCostExplorerAccessTemplateUrlResponse": {
        "type": "object",
        "properties": {
          "launchUrl": {
            "type": "string",
            "description": "The CloudFormation launch url. Open it in your browser."
          },
          "templateUrl": {
            "type": "string",
            "description": "The latest CloudFormation template. The version is included in the filename."
          },
          "stackName": {
            "type": "string",
            "description": "The default stack name used. Can be modified."
          },
          "principal": {
            "type": "string",
            "description": "The AWS account that will receive the access. Do not change."
          },
          "externalId": {
            "type": "string",
            "description": "The external id for this role. Do not change."
          }
        },
        "description": "Response message for the Flow.GetCostExplorerAccessTemplateUrl rpc."
      },
      "v1GetCostGroupAllocationRequest": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Required. The category to display on the cost group. Supports `fee` or `savings`."
          },
          "costGroupId": {
            "type": "string",
            "description": "Required. Cost Group Id."
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        },
        "description": "Request message for the GetCostGroupAllocation rpc."
      },
      "v1GetCostGroupAttributeRequest": {
        "title": "Request message for GetCostGroupAttribute",
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string"
          },
          "attributeType": {
            "type": "string"
          },
          "costGroupId": {
            "type": "string"
          },
          "existingCombinations": {
            "type": "array",
            "description": "Optional, This is for Unit Cost. When present, the api will return all attributes except the combination in this item.",
            "items": {
              "$ref": "#/components/schemas/coverCombinations"
            }
          },
          "currentCombination": {
            "$ref": "#/components/schemas/coverCombinations"
          }
        }
      },
      "v1GetCostGroupAttributeResponse": {
        "title": "Response message for GetCostGroupAttribute",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apicoverResult"
            }
          },
          "tagData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apicoverTagData"
            }
          }
        }
      },
      "v1GetCostGroupDetailsResponse": {
        "title": "Response message for GetCostGroupDetails",
        "type": "object",
        "properties": {
          "costGroupData": {
            "$ref": "#/components/schemas/coverCostGroupData"
          }
        }
      },
      "v1GetCostGroupFeeRequest": {
        "type": "object",
        "properties": {
          "costGroupId": {
            "type": "string",
            "description": "Required. Cost Group Id."
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          }
        },
        "description": "Request message for the GetCostGroupFee rpc."
      },
      "v1GetCostGroupsResponse": {
        "title": "Response message for GetCostGroups",
        "type": "object",
        "properties": {
          "costGroupData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverCostGroupData"
            }
          }
        }
      },
      "v1GetCostReductionResponse": {
        "title": "Response message for GetCostReduction",
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          },
          "awsCostReductions": {
            "$ref": "#/components/schemas/awsAwsCostReductions"
          }
        }
      },
      "v1GetCostUsageRequest": {
        "type": "object",
        "properties": {
          "costGroupId": {
            "type": "string",
            "description": "Required. Cost Group Id."
          },
          "startTime": {
            "type": "string",
            "description": "Optional. If not set, the first day of the current month will be used. Format: `yyyymmdd`."
          },
          "endTime": {
            "type": "string",
            "description": "Optional. If not set, current date will be used. Format: `yyyymmdd`."
          },
          "groupByMonth": {
            "type": "boolean",
            "description": "Optional. If set to true, return data grouped by month within the date range. \nIf you want data that is grouped per account per month, set this to `true`, then set `groupByColumns` to `none`. \nYou can also use `groupByColumns` while setting this to true."
          },
          "limit": {
            "type": "string",
            "description": "Optional. If set, returns only the services or accounts with the highest cost or usage\nDefault value is 0.",
            "format": "int64"
          },
          "category": {
            "type": "string",
            "description": "Optional. Valid values are `cost` and `usage`. \nDefault value is `cost`. Used only when limit is not 0."
          },
          "groupBy": {
            "type": "string",
            "description": "Optional. Valid values are `service` and `account`. Only `service` is supported for now \nDefault value is `service`. Used only when limit is not 0."
          },
          "includeZeroCost": {
            "type": "boolean",
            "description": "Optional. If set to true, return all available data including the data with zero cost.\nDefault value is `false` which means that only data with non-zero cost are returned."
          },
          "awsOptions": {
            "$ref": "#/components/schemas/v1GetCostUsageRequestAwsOptions"
          },
          "azureOptions": {
            "$ref": "#/components/schemas/v1GetCostUsageRequestAzureOptions"
          },
          "gcpOptions": {
            "$ref": "#/components/schemas/v1GetCostUsageRequestGcpOptions"
          },
          "azurecspOptions": {
            "$ref": "#/components/schemas/v1GetCostUsageRequestAzureCspOptions"
          },
          "customOptions": {
            "$ref": "#/components/schemas/v1GetCostUsageRequestCustomOptions"
          },
          "includeForecast": {
            "title": "Optional. If set to true, include cost forecast",
            "type": "boolean"
          },
          "currency": {
            "type": "string",
            "description": "Optional. If not set, default value is `USD`."
          }
        }
      },
      "v1GetCostUsageRequestAwsOptions": {
        "type": "object",
        "properties": {
          "groupByColumns": {
            "type": "string",
            "description": "Optional. A comma-separated list of columns to aggregate the data into. \nValid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, and `resourceId`. \nA special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and region data, you can set this field to `productCode,region`. \nYour input sequence doesn't matter (although the sequence above is recommended) as the actual sequence is already fixed in the return data (see the definition in https://github.com/alphauslabs/blueapi/blob/main/api/aws/cost.proto), which is generic to specific, top to bottom. Invalid values are discarded. Excluded columns will be empty."
          },
          "groupAccounts": {
            "type": "boolean",
            "description": "Optional. If set to true, group all input accounts into one."
          },
          "filters": {
            "type": "array",
            "description": "Optional. A list of filtering options. See [ReadCostsRequestOptionsFilters] for more information on each filter item. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestOptionsFilters"
            }
          },
          "tagFilters": {
            "type": "array",
            "description": "Optional. A list of filtering options specific for tags. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc. Discarded when `groupByColumns` field is set or if `groupByMonth` is true.",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestOptionsFilters"
            }
          },
          "tagKey": {
            "type": "string",
            "description": "Optional. Tag key, only used when groupBy is set to `tag`."
          }
        }
      },
      "v1GetCostUsageRequestAzureCspOptions": {
        "type": "object",
        "properties": {
          "groupByColumns": {
            "type": "string",
            "description": "Optional. A comma-separated list of columns to aggregate the data into. \nA special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and location data, you can set this field to `serviceName,location`."
          },
          "groupAccounts": {
            "type": "boolean",
            "description": "Optional. If set to true, group all input projects into one."
          },
          "filters": {
            "type": "array",
            "description": "Optional. A list of filtering options. See [ReadCostsRequestOptionsFilters] for more information on each filter item. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestOptionsFilters"
            }
          },
          "tagFilters": {
            "type": "array",
            "description": "Optional. A list of filtering options specific for tags. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestOptionsFilters"
            }
          },
          "tagKey": {
            "type": "string",
            "description": "Optional. Tag key, only used when groupBy is set to `tag`."
          }
        }
      },
      "v1GetCostUsageRequestAzureOptions": {
        "type": "object",
        "properties": {
          "groupByColumns": {
            "type": "string",
            "description": "Optional. A comma-separated list of columns to aggregate the data into. \nValid values are `accountId`, `serviceName`, `serviceTier`, `location`, `product`, `partNumber`, `resourceGuid`, `offerId`, `consumedService`, `departmentId`, `departmentName`, `resourceGroup`, `enrollment`, `additionalInfo`\nA special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and location data, you can set this field to `serviceName,location`."
          },
          "groupAccounts": {
            "type": "boolean",
            "description": "Optional. If set to true, group all input subscription into one."
          },
          "filters": {
            "type": "array",
            "description": "Optional. A list of filtering options. See [ReadCostsRequestOptionsFilters] for more information on each filter item. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestOptionsFilters"
            }
          },
          "tagFilters": {
            "type": "array",
            "description": "Optional. A list of filtering options specific for tags. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestOptionsFilters"
            }
          }
        }
      },
      "v1GetCostUsageRequestCustomOptions": {
        "type": "object",
        "properties": {
          "groupByColumns": {
            "type": "string",
            "description": "Optional. A comma-separated list of columns to aggregate the data into. \nA special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and location data, you can set this field to `serviceName,location`."
          },
          "groupAccounts": {
            "type": "boolean",
            "description": "Optional. If set to true, group all input projects into one."
          },
          "filters": {
            "type": "array",
            "description": "Optional. A list of filtering options. See [ReadCostsRequestOptionsFilters] for more information on each filter item. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestOptionsFilters"
            }
          },
          "tagFilters": {
            "type": "array",
            "description": "Optional. A list of filtering options specific for tags. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestOptionsFilters"
            }
          },
          "labelFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestOptionsFilters"
            }
          },
          "projectLabelFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestOptionsFilters"
            }
          },
          "tagKey": {
            "type": "string",
            "description": "Optional. Tag key, only used when groupBy is set to `tag`."
          }
        }
      },
      "v1GetCostUsageRequestGcpOptions": {
        "type": "object",
        "properties": {
          "groupByColumns": {
            "type": "string",
            "description": "Optional. A comma-separated list of columns to aggregate the data into. \nA special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and location data, you can set this field to `serviceName,location`."
          },
          "groupAccounts": {
            "type": "boolean",
            "description": "Optional. If set to true, group all input projects into one."
          },
          "filters": {
            "type": "array",
            "description": "Optional. A list of filtering options. See [ReadCostsRequestOptionsFilters] for more information on each filter item. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestOptionsFilters"
            }
          },
          "tagFilters": {
            "type": "array",
            "description": "Optional. A list of filtering options specific for tags. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestOptionsFilters"
            }
          },
          "labelFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestOptionsFilters"
            }
          },
          "projectLabelFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestOptionsFilters"
            }
          },
          "tagKey": {
            "type": "string",
            "description": "Optional. Tag key, only used when groupBy is set to `tag`."
          }
        }
      },
      "v1GetCoverageOndemandResponse": {
        "title": "Response message for GetCoverageOndemand",
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          },
          "ondemandData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiOndemandData"
            }
          }
        }
      },
      "v1GetCoverageOptionsResponse": {
        "title": "Response message for GetCoverageOptions",
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          },
          "optionsData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiOptionsData"
            }
          }
        }
      },
      "v1GetCurrentViewResponse": {
        "title": "Response message for GetCurrentView",
        "type": "object",
        "properties": {
          "viewData": {
            "$ref": "#/components/schemas/coverViewData"
          }
        }
      },
      "v1GetCustomerSubscriptionStatusResponse": {
        "type": "object",
        "properties": {
          "dateRegistered": {
            "type": "string"
          },
          "subscriptionExpiry": {
            "type": "string"
          },
          "daysLeft": {
            "type": "integer",
            "format": "int32"
          },
          "isSubscribed": {
            "type": "boolean"
          },
          "isExpired": {
            "type": "boolean"
          },
          "plan": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "paymentOption": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          },
          "credit": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "v1GetCustomizedBillingServiceBillingGroupResponse": {
        "required": [
          "chargingTarget",
          "id",
          "vendor"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Required. [blueapi.api.ripple.CustomizedBillingService.id]",
            "type": "string"
          },
          "vendor": {
            "type": "string",
            "description": "Required. vendor that applied to the CustomizedBillingService　config."
          },
          "chargingTarget": {
            "$ref": "#/components/schemas/rippleChargingTarget"
          },
          "accounts": {
            "type": "array",
            "description": "Optional. accounts that applied to the CustomizedBillingService　config.",
            "items": {
              "$ref": "#/components/schemas/blueapiapiAccount"
            }
          }
        },
        "description": "Response message for the Billing.GetCustomizedBillingServiceBillingGroup rpc.\n\nIf there is no account information, it indicates that it is applied to BillingGroup."
      },
      "v1GetDailyUsageCostDetailsRequest": {
        "type": "object",
        "properties": {
          "payerId": {
            "type": "string",
            "description": "Required. The id of the payer to fetch savings plan details for."
          },
          "startDate": {
            "type": "string",
            "description": "Required. The start date of the range for the savings plan details."
          },
          "endDate": {
            "type": "string",
            "description": "Required. The end date of the range for the savings plan details."
          }
        },
        "description": "Request message for the Flow.GetDailyUsageCostDetailsRequest rpc."
      },
      "v1GetDailyUsageCostDetailsResponse": {
        "type": "object",
        "properties": {
          "payerId": {
            "type": "string",
            "description": "The payer account ID for which the savings plan details are fetched."
          },
          "monthlyOnDemandCost": {
            "type": "number",
            "description": "Actual monthly on-demand cost for the payer account.",
            "format": "double"
          },
          "monthlyEffectiveCost": {
            "type": "number",
            "description": "Actual monthly effective cost after applying Savings Plans.",
            "format": "double"
          },
          "monthlyTotalSavings": {
            "type": "number",
            "description": "Actual total monthly savings from Savings Plan usage.",
            "format": "double"
          },
          "spDetails": {
            "$ref": "#/components/schemas/v1SpDetails"
          },
          "usageCostDetails": {
            "title": "Daily Savings Plan usage and cost details",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1UsageCostDetails"
            }
          }
        },
        "description": "Response message for the Flow.GetDailyUsageCostDetailsResponse rpc."
      },
      "v1GetDefaultCostAccessTemplateUrlResponse": {
        "type": "object",
        "properties": {
          "launchUrl": {
            "type": "string",
            "description": "The CloudFormation launch url. Open it in your browser."
          },
          "templateUrl": {
            "type": "string",
            "description": "The latest CloudFormation template. The version is included in the filename."
          },
          "stackName": {
            "type": "string",
            "description": "The default stack name used. Can be modified."
          },
          "principal": {
            "type": "string",
            "description": "The AWS account that will receive the access. Do not change."
          },
          "externalId": {
            "type": "string",
            "description": "The external id for this role. Do not change."
          }
        },
        "description": "Response message for the Admin.GetDefaultCostAccessTemplateUrl rpc."
      },
      "v1GetDiscountRecommendationsRequest": {
        "title": "Request message for GetDiscountRecomemendations",
        "type": "object",
        "properties": {
          "costGroupId": {
            "type": "string",
            "description": "Required."
          },
          "awsInputs": {
            "$ref": "#/components/schemas/coverAwsInputs"
          },
          "azureInputs": {
            "$ref": "#/components/schemas/coverAzureInputs"
          },
          "gcpInputs": {
            "$ref": "#/components/schemas/coverGcpInputs"
          }
        }
      },
      "v1GetDiscountRecommendationsResponse": {
        "title": "Response message for GetDiscountRecommendations",
        "type": "object",
        "properties": {
          "awsRecommendations": {
            "$ref": "#/components/schemas/coverAwsDiscountRecommendations"
          },
          "azureRecommendations": {
            "$ref": "#/components/schemas/coverAzureDiscountRecommendations"
          },
          "gcpRecommendations": {
            "$ref": "#/components/schemas/coverGcpDiscountRecommendations"
          }
        }
      },
      "v1GetExecutionStatusResponse": {
        "type": "object",
        "properties": {
          "recommendationId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "v1GetExportRISPRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Required. For AWS, \"ri\" or \"sp\"."
          },
          "language": {
            "type": "string",
            "description": "Usually the language of the user information is used, \nbut it may be a different language due to cahce.\nIn that case, you can use this option to change the language of CSV."
          },
          "includeExpired": {
            "title": "Required. Include expired",
            "type": "boolean"
          }
        }
      },
      "v1GetExportRISPResponse": {
        "type": "object",
        "properties": {
          "downloadLink": {
            "title": "csv direct download link\nexpires in 10 minutes",
            "type": "string"
          }
        },
        "description": "Request message for the ExportBillingGroupInvoiceServiceDiscounts rpc."
      },
      "v1GetFavoriteViewsResponse": {
        "title": "Response message for GetFavoriteViews",
        "type": "object",
        "properties": {
          "favorites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverFavorites"
            }
          }
        }
      },
      "v1GetForecastsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/apiBillingGroupForecast"
          }
        },
        "description": "Response message for GetForecasts per billing group."
      },
      "v1GetFreeFormatResponse": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "freeFormat": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1FreeFormItem"
            }
          }
        }
      },
      "v1GetIntegrationStatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1IntegrationStatus"
            }
          }
        }
      },
      "v1GetInvoiceDisplaySettingsResponse": {
        "type": "object",
        "properties": {
          "showRISPUpfrontTimeInterval": {
            "type": "boolean"
          }
        },
        "description": "Response message for GetInvoiceDisplaySettings rpc."
      },
      "v1GetMSPDefaultMetaResponse": {
        "type": "object",
        "properties": {
          "defaultMeta": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1GetMemberCostGroupResponse": {
        "title": "Response message for GetMemberCostGroup",
        "type": "object",
        "properties": {
          "costGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverMemberCostGroup"
            }
          }
        }
      },
      "v1GetMemberDetailsResponse": {
        "title": "Response message for GetMemberDetails",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1GetMembersResponse": {
        "title": "Response message for GetMembers",
        "type": "object",
        "properties": {
          "userData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverUserData"
            }
          }
        }
      },
      "v1GetMonthOnMonthCostForecastResponse": {
        "title": "Response message for GetMonthOnMonthCostForecast",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiMonthOnMonthCostForecast"
            }
          },
          "timestamp": {
            "type": "string"
          }
        }
      },
      "v1GetMonthToDateCostForecastResponse": {
        "title": "Response message for GetMonthToDateCostForecast",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "budget": {
            "type": "number",
            "format": "double"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiMonthToDateCostForecast"
            }
          },
          "timestamp": {
            "type": "string"
          }
        }
      },
      "v1GetMonthlyCostForecastResponse": {
        "title": "Response message for GetMonthlyCostForecast",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiMonthlyCostForecast"
            }
          },
          "timestamp": {
            "type": "string"
          }
        }
      },
      "v1GetOrgFiscalMonthResponse": {
        "type": "object",
        "properties": {
          "fiscalMonth": {
            "type": "string"
          },
          "dateRegistered": {
            "type": "string"
          }
        }
      },
      "v1GetOrgUpdateCurrencyResponse": {
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          },
          "updateCurrency": {
            "type": "string",
            "format": "int64"
          },
          "lastUpdate": {
            "type": "string"
          }
        }
      },
      "v1GetOrganizationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          }
        }
      },
      "v1GetPayerAccountImportHistoryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The queried account id."
          },
          "month": {
            "type": "string",
            "description": "The queried UTC month."
          },
          "timestamps": {
            "title": "List of timestamps in RFC3339 format with the `T` separator. Example: `2019-10-12T07:20:50.52Z`",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Response message for the Cost.GetPayerAccountImportHistory rpc."
      },
      "v1GetPayerProformaReportsResponse": {
        "type": "object",
        "properties": {
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1ProformaReports"
            }
          }
        },
        "description": "Response message for Cost.GetPayerProformaReports rpc."
      },
      "v1GetPayersResponse": {
        "title": "Response message for GetPayers",
        "type": "object",
        "properties": {
          "payers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1GetPricingResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Use token to retrieve next set of pricing items. An empty string means there are no more items to retrieve."
          },
          "pricingData": {
            "type": "array",
            "description": "Array of pricing items details. Maximum number of items returned per call is 1000.",
            "items": {
              "$ref": "#/components/schemas/pricingPricingData"
            }
          }
        },
        "description": "Response message for Pricing.GetPricing rpc."
      },
      "v1GetProjectResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "v1GetRecommendationDetailsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Unique ID of the recommendation details entry",
            "type": "string"
          },
          "currentMonthlyOnDemandSpend": {
            "title": "Projected monthly on-demand spend without Savings Plans, normalized from lookback period",
            "type": "number",
            "format": "double"
          },
          "estimatedMonthlySpend": {
            "title": "Projected total monthly spend after applying the recommended Savings Plan, normalized",
            "type": "number",
            "format": "double"
          },
          "estimatedMonthlySavingsDerived": {
            "title": "Difference between on-demand and post-SP spend, computed from normalized values",
            "type": "number",
            "format": "double"
          },
          "totalDailyCost": {
            "title": "Total current daily cost from usage, before applying any SP recommendation (Derived)",
            "type": "number",
            "format": "double"
          },
          "currentSPCommitment": {
            "title": "Current Savings Plan commitment applied",
            "type": "number",
            "format": "double"
          },
          "estimatedOnDemandCost": {
            "title": "Estimated daily on-demand cost without any Savings Plans",
            "type": "number",
            "format": "double"
          },
          "hourlyCommitment": {
            "title": "Suggested hourly commitment to purchase in USD",
            "type": "number",
            "format": "double"
          },
          "estimatedMonthlySavings": {
            "title": "Projected monthly savings from the recommended savings plan",
            "type": "number",
            "format": "double"
          },
          "estimatedSavings": {
            "title": "Percentage of potential savings from savings plan",
            "type": "number",
            "format": "double"
          },
          "recommendationLevel": {
            "title": "Customization setting for savings plan",
            "type": "string"
          },
          "planType": {
            "type": "string",
            "description": "Savings plan type."
          },
          "planTerm": {
            "type": "string",
            "description": "Savings plan duration."
          },
          "paymentOption": {
            "type": "string",
            "description": "Savings plan payment option."
          },
          "lookBackPeriod": {
            "type": "string",
            "description": "Savings plan lookback period used for analysis."
          },
          "estimatedROI": {
            "type": "number",
            "description": "Savings plan estimated return on investment.",
            "format": "double"
          },
          "estimatedSPCost": {
            "type": "number",
            "description": "Savings plan total projected cost over the term.",
            "format": "double"
          },
          "estimatedTotalCost": {
            "type": "number",
            "description": "Savings plan estimated total cost and including on-demand.",
            "format": "double"
          },
          "lastUpdated": {
            "title": "Savings plan last updated",
            "type": "string"
          }
        }
      },
      "v1GetRecommendationResponse": {
        "type": "object",
        "properties": {
          "recommendationData": {
            "$ref": "#/components/schemas/apicoverAWSRecommendations"
          }
        }
      },
      "v1GetRecommendationV2Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/recommendationRecommendationData"
          }
        }
      },
      "v1GetRecommendationsRequestAwsOptions": {
        "type": "object",
        "properties": {
          "recommendationType": {
            "type": "string",
            "description": "Required. Valid values: 'reservation', 'rightsizing', 'scheduling'. Only 'reservation' is supported for now."
          },
          "type": {
            "title": "For recommendationType = 'reservation'. Optional. Valid values: 'combined', 'individual'\nDefault: 'combined'",
            "type": "string"
          },
          "riServices": {
            "type": "array",
            "description": "For recommendationType = 'reservation'. Optional. List of Services [\"AmazonEC2\", \"AmazonRDS\", \"AmazonElastiCache\", \"AmazonES\", \"AmazonRedshift\"]. Default: Empty list.",
            "items": {
              "type": "string"
            }
          },
          "spServices": {
            "type": "array",
            "description": "For recommendationType = 'reservation'. Optional. List of Services [\"AmazonECS\", \"AmazonEKS\", \"AWSLambda\"]. Default: Empty list.",
            "items": {
              "type": "string"
            }
          },
          "purchaseEC2SavingsPlan": {
            "type": "boolean",
            "description": "For recommendationType = 'reservation'. Optional. If set to \"true\", recommends EC2 Instance Savings Plan that will cover usage not covered by RI. Default: false."
          },
          "ec2SpProductFamily": {
            "type": "string",
            "description": "For recommendationType = 'reservation'. Optional. Valid values: 'EC2Instance', 'Compute'. Default: 'EC2Instance'."
          },
          "term": {
            "type": "string",
            "description": "For recommendationType = 'reservation'. Optional. Valid values: '1yr', '3yr'. Default: '1yr'."
          },
          "offeringClass": {
            "type": "string",
            "description": "For recommendationType = 'reservation'. Optional. Valid values: 'standard', 'convertible'. Default: 'standard'."
          },
          "paymentOption": {
            "type": "string",
            "description": "For recommendationType = 'reservation'. Optional. Valid values: 'allUpfront', 'partialUpfront', 'noUpfront'. Default: 'allUpfront'."
          },
          "coveragePercentage": {
            "type": "number",
            "description": "For recommendationType = 'reservation'. Optional. Percentage of the usage (in NormalizedUnits) to be covered by Reserved Instance or Savings Plan. Default: 100.",
            "format": "double"
          }
        }
      },
      "v1GetRecommendationsResponse": {
        "title": "Request message for GetRecommendations",
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          },
          "awsRecommendations": {
            "$ref": "#/components/schemas/awsAwsRecommendations"
          }
        }
      },
      "v1GetRegionsResponse": {
        "title": "Response message for GetRegions",
        "type": "object",
        "properties": {
          "regions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1GetReportSummaryResponse": {
        "type": "object",
        "properties": {
          "costGroupId": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "executiveSummary": {
            "$ref": "#/components/schemas/coverExecutiveSummary"
          },
          "optimizationRecommendationSummary": {
            "$ref": "#/components/schemas/coverOptimizationRecommendationSummary"
          },
          "savingsSummary": {
            "$ref": "#/components/schemas/coverSavingsSummary"
          }
        }
      },
      "v1GetRightSizingRecommendationResponse": {
        "title": "Response message for GetRightSizingRecommendation",
        "type": "object",
        "properties": {
          "resource": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverResourceData"
            }
          }
        }
      },
      "v1GetServicesResponse": {
        "title": "Response message for GetServices",
        "type": "object",
        "properties": {
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1GetSettingsHistoryResponse": {
        "type": "object",
        "properties": {
          "settingsHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1SettingsHistory"
            }
          }
        },
        "description": "Response message for the Flow.GetSettingsHistory rpc."
      },
      "v1GetSettingsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "accountScope": {
            "type": "string"
          },
          "customization": {
            "type": "string"
          },
          "planTerm": {
            "type": "string"
          },
          "paymentOption": {
            "type": "string"
          },
          "lookBackPeriod": {
            "type": "string"
          },
          "instanceFamily": {
            "type": "string"
          },
          "annualBudget": {
            "type": "number",
            "format": "double"
          },
          "approval": {
            "type": "boolean"
          },
          "lastUpdated": {
            "type": "string"
          },
          "payerId": {
            "type": "string"
          }
        },
        "description": "Response message for fetching previous settings configuration of a user."
      },
      "v1GetSharedResourcesResponse": {
        "type": "object",
        "properties": {
          "sharedResources": {
            "$ref": "#/components/schemas/coverSharedResourcesCombination"
          }
        }
      },
      "v1GetSupportedServicesResponse": {
        "type": "object",
        "properties": {
          "supportedServices": {
            "type": "array",
            "description": "Suported services, regions, and attributes that can be used to specify which pricing data to retrieve from `/{vendor}/pricing`.\nFor usage information, visit https://labs.alphaus.cloud/blueapidocs/#/Pricing/Pricing_GetPricing.",
            "items": {
              "$ref": "#/components/schemas/v1SupportedService"
            }
          }
        },
        "description": "Response message for Pricing.GetSupportedServices rpc."
      },
      "v1GetTagsResponse": {
        "title": "Response message for GetTags",
        "type": "object",
        "properties": {
          "tagData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apicoverTagData"
            }
          }
        }
      },
      "v1GetTeamResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "v1GetUnitMetricResponse": {
        "type": "object",
        "properties": {
          "unitMetric": {
            "$ref": "#/components/schemas/coverUnitMetric"
          }
        }
      },
      "v1GetUnitTypeResponse": {
        "type": "object",
        "properties": {
          "unitCostData": {
            "$ref": "#/components/schemas/coverUnitCostData"
          }
        }
      },
      "v1GetUserDetailsResponse": {
        "title": "Response message for GetUserDetails",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1GetUserProfileResponse": {
        "type": "object",
        "properties": {
          "hasCreatedProfile": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "usage": {
            "type": "string"
          },
          "intention": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "linkSource": {
            "type": "string"
          },
          "hasSubscribedUpdates": {
            "type": "boolean"
          }
        }
      },
      "v1GetUtilizationResponse": {
        "title": "Response message for GetUtilization",
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          },
          "utilizationData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/blueapiapiUtilizationData"
            }
          }
        }
      },
      "v1GetViewsResponse": {
        "title": "Response message for GetViews",
        "type": "object",
        "properties": {
          "viewList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverViewList"
            }
          }
        }
      },
      "v1GetWaveFeaturesResponse": {
        "type": "object",
        "properties": {
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1WaveFeature"
            }
          }
        }
      },
      "v1GroupServiceDiscountsExport": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/v1ExportData"
          },
          "directLink": {
            "title": "Empty if direct link in request is disabled in request",
            "type": "string"
          }
        },
        "description": "GroupServiceDiscountsExport resource definition.\n`Group` refer to `BillingGroup`.\n\ndata is [blueapi.api.ripple.v1.ExportData]\n\ncontent. Base64 encoded value.\nFor example,\ncontent :`YmlsbGluZ0dyb3VwSWQsYmlsbGluZ0dyb3VwTmFtZSxTZXJ2aWNlIFByZW1pdW1zJkRpc2NvdW50cw0K`\nDecoding this value by en, get `billingGroupId,billingGroupName,Service Premiums&Discounts`.\ncontent :`6KuL5rGC44Kw44Or44O844OXSUQs6KuL5rGC44Kw44Or44O844OX5ZCNLOOCteODvOODk+OCueWJsuW8leODu+WJsuWil+ioreWumg0K`\nDecoding this value by ja, get `請求グループID,請求グループ名,サービス割引・割増設定`.\n\ndownloadedRows. Downloaded content lines.\n\ntotalRows.Total of content lines."
      },
      "v1ImportCurFilesRequest": {
        "type": "object",
        "properties": {
          "month": {
            "type": "string",
            "description": "Optional. The UTC month to import. If empty, it defaults to the current month. Format is `yyyymm`. For example, June 2021 will be `202106`."
          },
          "filter": {
            "type": "string",
            "description": "Optional. A comma-separated list of management accounts to import. If empty, all CURs associated with all your management accounts will be imported."
          }
        },
        "description": "Request message for the Cost.ImportCurFiles rpc."
      },
      "v1IntegrationStatus": {
        "type": "object",
        "properties": {
          "type": {
            "title": "\"github\", \"slack\"",
            "type": "string"
          },
          "status": {
            "title": "\"on\", \"off\"",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "teamName": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string"
          }
        }
      },
      "v1InviteMemberRequest": {
        "title": "Request message for InviteMember",
        "type": "object",
        "properties": {
          "email": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isResend": {
            "type": "boolean"
          },
          "inviteAsAdmin": {
            "type": "boolean"
          }
        }
      },
      "v1InviteMemberResponse": {
        "title": "Response message for InviteMember",
        "type": "object",
        "properties": {
          "email": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1InvoiceAdditionalItems": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "v1InvoiceConnectedBillingGroups": {
        "title": "Response message to be used for ListInvoiceTemplateResponse",
        "type": "object",
        "properties": {
          "billingInternalId": {
            "type": "string"
          },
          "billingGroupId": {
            "type": "string"
          },
          "billingGroupName": {
            "type": "string"
          }
        }
      },
      "v1InvoiceServiceDiscountsSetting": {
        "type": "object",
        "properties": {
          "awsDetails": {
            "type": "array",
            "description": "The invoice service discounts setting details.",
            "items": {
              "$ref": "#/components/schemas/v1InvoiceServiceDiscountsSettingDetails"
            }
          },
          "azureDetails": {
            "type": "array",
            "description": "The invoice service discounts setting details.",
            "items": {
              "$ref": "#/components/schemas/v1InvoiceServiceDiscountsSettingDetails"
            }
          },
          "gcpDetails": {
            "type": "array",
            "description": "The invoice service discounts setting details.",
            "items": {
              "$ref": "#/components/schemas/v1InvoiceServiceDiscountsSettingDetails"
            }
          }
        },
        "description": "InvoiceServiceDiscountsSetting resource definition."
      },
      "v1InvoiceServiceDiscountsSettingDetails": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "title": "The vendor service code.\naws: ProductCode\nazure: ServiceCode\ngcp: ServiceName\n`otherServices`: The code to specify other services as a whole, regardless of vendor.\nFor exmaple: Other services set at 1%.\n{\"code\":\"otherServices\", \"value\":0.01}",
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "The vendor service name.",
            "readOnly": true
          },
          "value": {
            "type": "number",
            "description": "Value associated with the set premiums or discounts.",
            "format": "double"
          },
          "calculationScope": {
            "type": "boolean",
            "description": "The calculation scope.\ndefault is `disabled`.\nIf enabled, Usage and any lineitem type including Fee are included in the calculation.\nIf disabled, only the Usage is included in the calculation."
          }
        },
        "description": "InvoiceServiceDiscountsSettingDetails resource definition."
      },
      "v1IpFilter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "IP filter item id. Note that this name is transcient and is not fixed. However, you can use any of its permutations to endpoints that accept it, such as the `DELETE:/iam/v?/ipfilters/{id}` endpoint, without issues."
          },
          "scope": {
            "type": "string",
            "description": "Can be `global`, `rootuser`, or `subuser`."
          },
          "target": {
            "type": "string",
            "description": "The target of the filter. If global scope, this is usually empty. Rootuser name for rootuser scope, and subuser name for subuser scope. For subuser targets, format is `rootuser/subuser`."
          },
          "type": {
            "type": "string",
            "description": "The type of IP filter. It could be `whitelist` or `blacklist`."
          },
          "value": {
            "type": "string",
            "description": "The IP filter value. Should be in CIDR format."
          }
        }
      },
      "v1JoinOrganizationRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Required."
          },
          "email": {
            "type": "string",
            "description": "Required user email."
          },
          "name": {
            "type": "string",
            "description": "Optional user name."
          },
          "social": {
            "title": "Optional \"google\", \"github\"",
            "type": "string"
          }
        }
      },
      "v1ListAccountAccessRequest": {
        "type": "object",
        "description": "Request message for the ListAccountAccess rpc."
      },
      "v1ListAccountGroupsResponse": {
        "type": "object",
        "properties": {
          "accountGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiAccountGroup"
            }
          }
        },
        "description": "Response message for the Admin.ListAccountGroups rpc."
      },
      "v1ListAccountUsageRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        },
        "description": "Request message for the RestoreAccountUsage rpc."
      },
      "v1ListActivitiesRequest": {
        "type": "object"
      },
      "v1ListAssetsFilters": {
        "type": "object",
        "properties": {
          "andFilters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "v1ListAssetsRequest": {
        "type": "object",
        "properties": {
          "costGroupId": {
            "type": "string",
            "description": "Required. Cost Group Id."
          },
          "startMonth": {
            "type": "string",
            "description": "Optional. If not set, current month will be used. Format: `yyyymm`."
          },
          "endMonth": {
            "type": "string",
            "description": "Optional. If not set, current month will be used. Format: `yyyymm`."
          },
          "withRecommendation": {
            "title": "Optional. If true, returns only all assets with recommendation",
            "type": "boolean"
          },
          "awsOptions": {
            "type": "array",
            "description": "Optional. For AWS-specific filter options.",
            "items": {
              "$ref": "#/components/schemas/v1ListAssetsFilters"
            }
          },
          "awsPropertiesOptions": {
            "type": "array",
            "description": "Optional. For AWS-specific properties filter options.",
            "items": {
              "$ref": "#/components/schemas/v1ListAssetsFilters"
            }
          }
        },
        "description": "Request message for the Asset.ListResources rpc."
      },
      "v1ListAwsDailyRunHistoryRequest": {
        "type": "object",
        "properties": {
          "month": {
            "type": "string",
            "description": "Optional. If empty, defaults to current UTC month. Format: yyyymm."
          },
          "groupId": {
            "type": "string",
            "description": "Optional. If not empty, query for this group. At the moment, only `billingInternalId`s are supported."
          }
        },
        "description": "Request message for the Billing.ListAwsCalculationHistory rpc."
      },
      "v1ListBillingGroupCustomFieldRequest": {
        "type": "object",
        "properties": {
          "groupId": {
            "title": "billing group InternalID\nleave empty to get all group id custom field",
            "type": "string"
          }
        }
      },
      "v1ListBillingGroupCustomFieldResponse": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "billingGroupCustomFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1BillingGroupCustomField"
            }
          }
        }
      },
      "v1ListBudgetsRequest": {
        "type": "object",
        "properties": {
          "includeSpendAndForecast": {
            "title": "Optional. Set to true to include monthly spending and forecast within the budget period",
            "type": "boolean"
          },
          "costGroup": {
            "type": "string",
            "description": "Optional. Cost group ID. Return budgets under this specific cost group."
          }
        }
      },
      "v1ListBudgetsResponse": {
        "type": "object",
        "properties": {
          "budgetData": {
            "$ref": "#/components/schemas/coverBudgetData"
          }
        }
      },
      "v1ListCalculationPrerequisitesResponse": {
        "type": "object",
        "properties": {
          "prerequisites": {
            "type": "array",
            "description": "Repeated list of calculation prerequisites.",
            "items": {
              "$ref": "#/components/schemas/v1CalculationPrerequisite"
            }
          }
        }
      },
      "v1ListCalculationsHistoryAwsResponse": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/protosOperation"
            }
          }
        },
        "description": "AWS-specific response message for the Cost.ListCalculationsHistory rpc. Should be compatible with the Operations API."
      },
      "v1ListCalculationsHistoryResponse": {
        "type": "object",
        "properties": {
          "aws": {
            "$ref": "#/components/schemas/v1ListCalculationsHistoryAwsResponse"
          }
        },
        "description": "Response message for the Cost.ListCalculationsHistory rpc."
      },
      "v1ListCalculationsSchedulesResponse": {
        "type": "object",
        "properties": {
          "schedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1CalculationsSchedule"
            }
          }
        },
        "description": "Response message for the Cost.ListCalculationsSchedules rpc."
      },
      "v1ListCalculatorRunningAccountsResponse": {
        "type": "object",
        "properties": {
          "aws": {
            "$ref": "#/components/schemas/ListCalculatorRunningAccountsResponseAwsRunningAccount"
          }
        },
        "description": "Response message for the Cost.ListCalculatorRunningAccounts rpc."
      },
      "v1ListCostFiltersResponse": {
        "type": "object",
        "properties": {
          "costFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/costv1ListCostFilters"
            }
          }
        },
        "description": "Response message for the ListCostFilters rpc."
      },
      "v1ListCustomFieldRequest": {
        "type": "object"
      },
      "v1ListFeesRequest": {
        "type": "object",
        "properties": {
          "month": {
            "type": "string"
          }
        },
        "description": "Request message for the ListFees rpc."
      },
      "v1ListIdentityProvidersResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListIdentityProvidersResponseIdentityProvider"
            }
          }
        },
        "description": "Response message for the Iam.ListIdentityProviders rpc."
      },
      "v1ListIntegrationStatusRequest": {
        "type": "object"
      },
      "v1ListInvoiceRequest": {
        "type": "object",
        "properties": {
          "date": {
            "title": "YYYYMM format (e.g 202412, 202501)",
            "type": "string"
          },
          "vendor": {
            "title": "OPTIONAL: vendor (aws, azure, gcp)",
            "type": "string"
          }
        },
        "description": "Request message for the ListInvoice rpc."
      },
      "v1ListInvoiceResponse": {
        "type": "object",
        "properties": {
          "billingInternalId": {
            "type": "string",
            "description": "The billing internal id."
          },
          "billingGroupId": {
            "type": "string",
            "description": "The billing group id."
          },
          "billingGroupName": {
            "title": "The billing group name. Used as invoice name on ripple v2",
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "invoiceStatus": {
            "title": "Created || Not Created",
            "type": "string"
          },
          "finalizationStatus": {
            "title": "In progress || Done",
            "type": "string"
          },
          "waveStatus": {
            "title": "Published || Not published",
            "type": "string"
          },
          "vendor": {
            "title": "aws, azure, gcp",
            "type": "string"
          },
          "currency": {
            "title": "The currency of the invoice (usd, jpy, ...)",
            "type": "string"
          },
          "billingAmountAws": {
            "title": "Formated in $8,000.12",
            "type": "string"
          },
          "billingAmountAzure": {
            "type": "string"
          },
          "billingAmountGcp": {
            "type": "string"
          },
          "billingAmountTotal": {
            "type": "string"
          },
          "urlId": {
            "type": "string"
          },
          "invoiceSettingsAws": {
            "$ref": "#/components/schemas/billingv1InvoiceSettings"
          },
          "invoiceSettingsAzure": {
            "$ref": "#/components/schemas/billingv1InvoiceSettings"
          },
          "invoiceSettingsGcp": {
            "$ref": "#/components/schemas/billingv1InvoiceSettings"
          }
        },
        "description": "Response message for the ListInvoice rpc."
      },
      "v1ListInvoiceServiceDiscountsRequest": {
        "type": "object",
        "description": "Request message for the ListInvoiceServiceDiscounts rpc."
      },
      "v1ListInvoiceTemplateResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created": {
            "type": "string"
          },
          "updated": {
            "type": "string"
          },
          "numberOfConnected": {
            "type": "integer",
            "format": "int32"
          },
          "connectedBillingGroup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1InvoiceConnectedBillingGroups"
            }
          },
          "invoices": {
            "$ref": "#/components/schemas/v1BillingGroupInvoiceSettings"
          }
        },
        "description": "Response message for ListInvoiceTemplate rpc."
      },
      "v1ListNotificationChannelsResponse": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiNotificationChannel"
            }
          }
        },
        "description": "Response message for the Admin.ListNotificationChannels rpc."
      },
      "v1ListNotificationsResponse": {
        "type": "object",
        "properties": {
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/blueapiapiNotification"
            }
          }
        },
        "description": "Response message for the Admin.ListNotifications rpc."
      },
      "v1ListPermissionsResponse": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiPermission"
            }
          }
        },
        "description": "Response message for the Iam.ListPermissions rpc."
      },
      "v1ListProductsRequest": {
        "type": "object"
      },
      "v1ListProjectToTeamRequest": {
        "type": "object"
      },
      "v1ListProjectToTeamResponse": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string"
          },
          "projectName": {
            "type": "string"
          },
          "teamId": {
            "type": "string"
          },
          "teamName": {
            "type": "string"
          }
        }
      },
      "v1ListProjectsRequest": {
        "type": "object"
      },
      "v1ListRecommendationResponse": {
        "type": "object",
        "properties": {
          "recommendationId": {
            "type": "string"
          },
          "recommendation": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "estimatedMonthlySaving": {
            "type": "number",
            "format": "double"
          },
          "estimatedMonthlyCost": {
            "type": "number",
            "format": "double"
          },
          "scoring": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "optimizationStatus": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "instanceName": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "instanceType": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "commitment": {
            "type": "number",
            "format": "double"
          },
          "spType": {
            "type": "string"
          },
          "numberToPurchase": {
            "type": "string",
            "format": "int64"
          },
          "riType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "dateRecommended": {
            "type": "string"
          },
          "recommendationGroup": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "purchaseOption": {
            "$ref": "#/components/schemas/ListRecommendationResponsePurchaseOption"
          }
        }
      },
      "v1ListRecommendationV2Request": {
        "type": "object",
        "properties": {
          "costgroupId": {
            "type": "string"
          },
          "dateRangeStart": {
            "type": "string"
          },
          "dateRangeEnd": {
            "type": "string"
          },
          "rateSettings": {
            "$ref": "#/components/schemas/ListRecommendationV2RequestRateSettings"
          },
          "currency": {
            "type": "string",
            "description": "Optional. If not set, default value is `USD`."
          }
        }
      },
      "v1ListReportSchedulesRequest": {
        "type": "object"
      },
      "v1ListRolesResponse": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiRole"
            }
          }
        },
        "description": "Response message for the Iam.ListRoles rpc."
      },
      "v1ListSharedResourcesResponse": {
        "type": "object",
        "properties": {
          "sharedResources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverSharedResourcesCombination"
            }
          }
        }
      },
      "v1ListSuggestedUnitsResponse": {
        "type": "object",
        "properties": {
          "suggestedUnits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverSuggestedUnit"
            }
          }
        }
      },
      "v1ListTeamMembersRequest": {
        "type": "object"
      },
      "v1ListTeamsRequest": {
        "type": "object"
      },
      "v1ListUnitMetricsResponse": {
        "type": "object",
        "properties": {
          "unitMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverUnitMetric"
            }
          }
        }
      },
      "v1ListUnitTypesResponse": {
        "type": "object",
        "properties": {
          "unitCostData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverUnitCostData"
            }
          }
        }
      },
      "v1ListUnregisteredAccountsResponse": {
        "title": "Response message for ListUnregisteredAccounts",
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          },
          "unregisteredAccts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1UnregisteredAccts"
            }
          }
        }
      },
      "v1ListUserRoleMappingsResponse": {
        "type": "object",
        "properties": {
          "userRoleMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiUserRoleMapping"
            }
          }
        },
        "description": "Response message for the Iam.ListUserRoleMappings rpc."
      },
      "v1ListWorkflowsRequest": {
        "type": "object"
      },
      "v1MFAUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "v1MFAUsersInfoResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1MFAUser"
            }
          }
        },
        "description": "Response message for the MFAUsersInfoResponse rpc."
      },
      "v1MapRole": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "v1MarkAsExecutedRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1MarkAsExecutedResponse": {
        "type": "object"
      },
      "v1Member": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string"
          },
          "team": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string"
          }
        }
      },
      "v1MergeSuggestedUnitsRequest": {
        "type": "object",
        "properties": {
          "suggestedUnitIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unitItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unitName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "v1MergeSuggestedUnitsResponse": {
        "type": "object",
        "properties": {
          "mergedSuggestedUnits": {
            "$ref": "#/components/schemas/coverSuggestedUnit"
          }
        }
      },
      "v1MergeUnitsRequest": {
        "type": "object",
        "properties": {
          "unitCostIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unitName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "v1MergeUnitsResponse": {
        "type": "object",
        "properties": {
          "mergedUnitCost": {
            "$ref": "#/components/schemas/coverUnitCostData"
          }
        }
      },
      "v1ModifyResourceTypeResponse": {
        "title": "Response message for ModifyResourceType",
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "resourceType": {
            "type": "string"
          },
          "region": {
            "type": "string"
          }
        }
      },
      "v1NonTagGroupSetting": {
        "title": "Individual non-tag group setting for UpdateNonTagGroupToBillingGroup",
        "type": "object",
        "properties": {
          "id": {
            "title": "Required. The non-tag group ID",
            "type": "string"
          },
          "type": {
            "title": "Required. The type of setting (percentage or fixed)",
            "type": "string"
          },
          "amount": {
            "title": "Required. The amount value for either percentage or fixed amount",
            "type": "number",
            "format": "double"
          }
        }
      },
      "v1NonTagSetting": {
        "title": "Non-tag settings for a billing group for AddTagsToBillingGroup",
        "type": "object",
        "properties": {
          "include": {
            "title": "Whether non-tag settings are included",
            "type": "boolean"
          },
          "type": {
            "title": "Type of non-tag setting (\"percentage\" or \"fixed\")",
            "type": "string"
          },
          "amount": {
            "title": "Amount value (percentage or fixed amount)",
            "type": "number",
            "format": "double"
          }
        }
      },
      "v1OnboardOrgRequest": {
        "title": "Request message for OnboardOrg",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          }
        }
      },
      "v1OnboardOrgResponse": {
        "title": "Response message for OnboardOrg",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1OptimizationHistoryResponse": {
        "type": "object",
        "properties": {
          "executedRecommendationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverExecutedRecommendationDetails"
            }
          }
        }
      },
      "v1OverViewOptionSection": {
        "type": "object",
        "properties": {
          "sppDiscountCost": {
            "type": "number",
            "description": "The spp discount cost.",
            "format": "double"
          },
          "edpDiscountCost": {
            "type": "number",
            "description": "The edp discount cost.",
            "format": "double"
          }
        },
        "description": "OverViewOptionSection resource definition."
      },
      "v1OverViewSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id. id:OverViewSection."
          },
          "name": {
            "type": "string",
            "description": "The name. name:OverViewSection."
          },
          "currency": {
            "type": "string",
            "description": "The currency."
          },
          "invoiceCost": {
            "type": "number",
            "description": "The invoice cost.",
            "format": "double"
          },
          "procurementCost": {
            "type": "number",
            "description": "The procurement cost.",
            "format": "double"
          },
          "profitCost": {
            "type": "number",
            "description": "The profit cost.",
            "format": "double"
          },
          "options": {
            "$ref": "#/components/schemas/v1OverViewOptionSection"
          },
          "periodOverPeriod": {
            "$ref": "#/components/schemas/v1PeriodOverPeriodSection"
          },
          "awsSection": {
            "$ref": "#/components/schemas/v1VendorOverViewSection"
          },
          "azureSection": {
            "$ref": "#/components/schemas/v1VendorOverViewSection"
          },
          "gcpSection": {
            "$ref": "#/components/schemas/v1VendorOverViewSection"
          }
        },
        "description": "OverViewSection resource definition."
      },
      "v1PartnerToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "v1PeriodOverPeriodOptionSection": {
        "type": "object",
        "properties": {
          "sppDiscountCost": {
            "type": "number",
            "description": "The spp discount cost.",
            "format": "double"
          },
          "sppDiscountCostPoP": {
            "title": "The spp discount cost Period-over-Period.\nRepresents a comparison of costs over a specified period of time.\ncurrently, supported `Month-over-Month`",
            "type": "number",
            "format": "double"
          },
          "edpDiscountCost": {
            "type": "number",
            "description": "The edp discount cost.",
            "format": "double"
          },
          "edpDiscountCostPoP": {
            "title": "The edp discount cost Period-over-Period.\nRepresents a comparison of costs over a specified period of time.\ncurrently, supported `Month-over-Month`",
            "type": "number",
            "format": "double"
          }
        },
        "description": "PeriodOverPeriodOptionSection resource definition."
      },
      "v1PeriodOverPeriodSection": {
        "type": "object",
        "properties": {
          "invoiceCost": {
            "title": "The invoice cost",
            "type": "number",
            "format": "double"
          },
          "procurementCost": {
            "title": "The procurement cost",
            "type": "number",
            "format": "double"
          },
          "profitCost": {
            "title": "The profit cost",
            "type": "number",
            "format": "double"
          },
          "invoiceCostPoP": {
            "title": "The invoice cost Period-over-Period.\nRepresents a comparison of costs over a specified period of time.\ncurrently, supported `Month-over-Month`",
            "type": "number",
            "format": "double"
          },
          "procurementCostPoP": {
            "title": "The procurement cost Period-over-Period.\nRepresents a comparison of costs over a specified period of time.\ncurrently, supported `Month-over-Month`",
            "type": "number",
            "format": "double"
          },
          "profitCostPoP": {
            "title": "The profit cost Period-over-Period.\nRepresents a comparison of costs over a specified period of time.\ncurrently, supported `Month-over-Month`",
            "type": "number",
            "format": "double"
          },
          "options": {
            "$ref": "#/components/schemas/v1PeriodOverPeriodOptionSection"
          }
        },
        "description": "PeriodOverPeriodSection resource definition."
      },
      "v1Preference": {
        "type": "object"
      },
      "v1PreviewGoogleSheetRequest": {
        "type": "object",
        "properties": {
          "googleSheetId": {
            "title": "Required. The id of the Google Sheet.\nExample: \"1A2B3C4D5E6F7G8H9I0J\"",
            "type": "string"
          },
          "sheetUrl": {
            "type": "string",
            "description": "Example: \"https://docs.google.com/spreadsheets/d/1A2B3C4D5E6F7G8H9I0J/edit\"\nOptional. The URL of the Google Sheet."
          },
          "sheetName": {
            "title": "Required. The name of the sheet within the Google Sheet.\nExample: \"Sheet1\"",
            "type": "string"
          },
          "range": {
            "title": "Required. The range of cells to preview. \nExample: \"A1:Z100\"",
            "type": "string"
          }
        }
      },
      "v1PreviewGoogleSheetResponse": {
        "type": "object",
        "properties": {
          "header": {
            "type": "array",
            "description": "Contains the column headers of the Google Sheet.",
            "items": {
              "type": "string"
            }
          },
          "rowData": {
            "type": "array",
            "description": "Contains the data rows of the Google Sheet.",
            "items": {
              "$ref": "#/components/schemas/coverRowData"
            }
          }
        }
      },
      "v1ProcessAuth0UserRequest": {
        "title": "Request message for AddUserFromAuth0asRoot rpc",
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "subuserId": {
            "type": "string"
          }
        }
      },
      "v1ProcessAuth0UserResponse": {
        "title": "Response message wrapper for adding user from Auth0 as root",
        "type": "object",
        "properties": {
          "isAuthorized": {
            "type": "boolean"
          }
        }
      },
      "v1Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string"
          }
        }
      },
      "v1ProformaCur": {
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          },
          "payerId": {
            "type": "string"
          },
          "billingInternalId": {
            "type": "string"
          },
          "reportName": {
            "type": "string"
          },
          "bucketName": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "timeCreated": {
            "type": "string"
          }
        }
      },
      "v1ProformaReports": {
        "type": "object",
        "properties": {
          "id": {
            "title": "payer account id",
            "type": "string"
          },
          "billingInternalId": {
            "title": "billing group internal id",
            "type": "string"
          },
          "billingGroupName": {
            "title": "billing group name",
            "type": "string"
          },
          "bucketName": {
            "title": "s3 bucket name",
            "type": "string"
          },
          "prefix": {
            "title": "s3 report prefix",
            "type": "string"
          },
          "reportName": {
            "title": "report name",
            "type": "string"
          },
          "roleArn": {
            "title": "role arn",
            "type": "string"
          }
        }
      },
      "v1Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "v1ProxyCreateCompletionRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {}
          }
        },
        "description": "Request message for the ProxyCreateCompletion rpc."
      },
      "v1ProxyCreateCompletionResponse": {
        "type": "object",
        "properties": {
          "line": {
            "type": "string"
          }
        },
        "description": "Response message for the ProxyCreateCompletion rpc."
      },
      "v1PublishViewRequest": {
        "title": "Request message for PublishView",
        "type": "object",
        "properties": {
          "viewId": {
            "type": "string",
            "description": "Required. View Id."
          }
        }
      },
      "v1PublishViewResponse": {
        "title": "Response message for PublishView",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        }
      },
      "v1ReadAdjustmentsRequestAwsOptions": {
        "type": "object",
        "properties": {
          "toCurrency": {
            "type": "string",
            "description": "Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD)."
          }
        }
      },
      "v1ReadBudgetAlertsRequest": {
        "type": "object",
        "properties": {
          "fieldMask": {
            "type": "string",
            "description": "Optional."
          }
        },
        "description": "Request message for the ReadBudgetAlerts rpc."
      },
      "v1ReadCostAttributesRequestAwsOptions": {
        "type": "object",
        "properties": {
          "dimensions": {
            "type": "string",
            "description": "Optional. A comma-separated list of dimensions to query. Valid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, `resourceId`, `tags`, and `costCategories`. Sequence doesn't matter. An empty value implies all attributes will be returned."
          }
        }
      },
      "v1ReadCostAttributesRequestAzureOptions": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "Optional. The Azure customer id to which the modifier is applied. A comma-separated list of customers is also valid."
          },
          "subscriptionId": {
            "type": "string",
            "description": "Optional. The Azure subscription id to which the modifier is applied. A comma-separated list of subscriptions is also valid."
          },
          "entitlementId": {
            "type": "string",
            "description": "Optional. The Azure entitlement id to which the modifier is applied. A comma-separated list of entitlements is also valid."
          }
        }
      },
      "v1ReadCostsRequestAwsOptions": {
        "type": "object",
        "properties": {
          "groupByColumns": {
            "type": "string",
            "description": "Optional. A comma-separated list of columns to aggregate the data into. Valid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, and `resourceId`. A special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and region data, you can set this field to `productCode,region`. Your input sequence doesn't matter (although the sequence above is recommended) as the actual sequence is already fixed in the return data (see the definition in https://github.com/alphauslabs/blueapi/blob/main/api/aws/cost.proto), which is generic to specific, top to bottom. Invalid values are discarded. Excluded columns will be empty."
          },
          "groupByMonth": {
            "type": "boolean",
            "description": "Optional. If set to true, return data grouped by month within the date range. If you want data that is grouped per account per month, set this to `true`, then set `groupByColumns` to `none`. You can also use `groupByColumns` while setting this to true."
          },
          "groupAccounts": {
            "type": "boolean",
            "description": "Optional. If set to true, group all input accounts into one."
          },
          "groupByTagKey": {
            "type": "string",
            "description": "Optional. Required if groupByColumn is set to tag."
          },
          "filters": {
            "type": "array",
            "description": "Optional. A list of filtering options. See [ReadCostsRequestAwsOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestAwsOptionsFilters"
            }
          },
          "tagFilters": {
            "type": "array",
            "description": "Optional. A list of filtering options specific for tags. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc. Discarded when `groupByColumns` field is set or if `groupByMonth` is true.",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestAwsOptionsTagFilters"
            }
          },
          "includeTags": {
            "title": "Optional. If set to true, stream will include resource tags. Discarded when `groupByColumns` field is set to `none`. `IncludeTags` is set to `false` if `groupByColumns` includes `tags` and `GroupByTagKey` has a value",
            "type": "boolean"
          },
          "includeCostCategories": {
            "type": "boolean",
            "description": "Optional. If set to true, stream will include resource cost category information. Discarded when `groupByColumns` field is set to `none`."
          },
          "toCurrency": {
            "type": "string",
            "description": "Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD)."
          },
          "forceLatest": {
            "type": "boolean",
            "description": "Optional. If set to true, always get the up-to-date calculation results. This data isn't necessarily in-sync with your invoice data as AWS could still have updated your CUR files even after you created your invoices. By default, returned data are those that are always in-sync with your invoices.\n\nThis field is discarded for Wave(Pro) users. You will always get the latest data that is in-sync with your invoices."
          },
          "noCache": {
            "type": "boolean",
            "description": "If true, force API to not use cached data."
          },
          "includeAdjustments": {
            "type": "boolean",
            "description": "WORK-IN-PROGRESS: Optional. If set to true, include adjustment entries in the output. Adjustments include fees, discounts, credits, etc. The output here is the same as the ReadAdjustments API."
          }
        },
        "description": "AWS-specific options for ReadCostsRequest."
      },
      "v1ReadCostsRequestAwsOptionsFilters": {
        "type": "object",
        "properties": {
          "andFilters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "description": "A map of \"key:value\" column filters. Dependent on `groupByColumns` and/or `groupByMonth`. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you like to filter `productCode` to return only `AmazonEC2`, set to `{\"productCode\":\"eq:AmazonEC2\"}` or `{\"productCode\":\"AmazonEC2\"}`. You can also use a regular expression like `{\"productCode\":\"re:AmazonEC2|AmazonRDS\"}`, which means return all AmazonEC2 or AmazonRDS lineitems. Or reverse regexp, such as `{\"productCode\":\"!re:^AmazonEC2$\"}`, which means return all items except `AmazonEC2`."
      },
      "v1ReadCostsRequestAwsOptionsTagFilters": {
        "type": "object",
        "properties": {
          "andFilters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "description": "A map of \"key:value\" tag filters. The key indicates the tag key while the value is the filter tag value which can be prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you want to query lineitems with the tag `project:MY_PROJECT`, set to `{\"project\":\"MY_PROJECT\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`."
      },
      "v1ReadCostsRequestAzureOptions": {
        "type": "object",
        "properties": {
          "groupByColumns": {
            "type": "string",
            "description": "Optional. A comma-separated list of columns to aggregate the data into. Valid values are `serviceName`, `productName`, `region`, `chargeType`, `description`, `billableQuantity`, `effectiveUnitPrice`, `timeInterval`, `billingType`, `alternateId` and `domainName`. A special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and region data, you can set this field to `serviceName,region`. Your input sequence doesn't matter (although the sequence above is recommended) as the actual sequence is already fixed in the return data (see the definition in https://github.com/alphauslabs/blueapi/blob/main/api/azure/cost.proto), which is generic to specific, top to bottom. Invalid values are discarded. Excluded columns will be empty."
          },
          "groupByMonth": {
            "type": "boolean",
            "description": "Optional. If set to true, return data grouped by month within the date range. If you want data that is grouped per account per month, set this to `true`. You can also use `groupByColumns` while setting this to true."
          },
          "noCache": {
            "type": "boolean",
            "description": "If true, force API to not use cached data."
          },
          "toCurrency": {
            "type": "string",
            "description": "Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD)."
          }
        },
        "description": "Azure-specific options for ReadCostsRequest."
      },
      "v1ReadCostsRequestGcpOptions": {
        "type": "object",
        "properties": {
          "groupByColumns": {
            "type": "string",
            "description": "Optional. A comma-separated list of columns to aggregate the data into. Valid values are `service`, `sku`, `region`, `zone`, and `usageUnit`. A special value of `none` is also supported, which means query by date or month per account only."
          },
          "groupByMonth": {
            "type": "boolean",
            "description": "Optional. If set to true, return data grouped by month within the date range. If you want data that is grouped per account per month, set this to `true`, then set `groupByColumns` to `none`."
          },
          "groupAccounts": {
            "type": "boolean",
            "description": "Optional. If set to true, group all input accounts into one. Valid only if `groupByMonth` is true."
          },
          "filters": {
            "type": "array",
            "description": "Optional. A list of filtering options. See [ReadCostsRequestGcpOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestGcpOptionsFilters"
            }
          },
          "includeInvoiceMonth": {
            "type": "boolean",
            "description": "Optional. If set to true, stream will include invoice month. Discarded when `groupByColumns` field is set to `none`.\n\nThe last usage occurrence of invoice month based on endTime is set to endTime.\nFor example, (Assumption: Last usage start time 2022-02-01 01:00:00 UTC) If you set to \"endTime:20210131\", automatically set to \"endTime:20220101\". Ignored if the batch calculation for invoice month has not been completed."
          },
          "includeCredits": {
            "type": "boolean",
            "description": "Optional. If set to true, stream will include credits{\"creditsType\",\"creditsName\"}. Discarded when `groupByColumns` field is set to `none`."
          },
          "rounding": {
            "type": "boolean",
            "description": "Optional. If set to true, round the cost data to a rounded format. It will be rounded off in the unit specified by `groupByColumns`."
          },
          "noCache": {
            "type": "boolean",
            "description": "If true, force API to not use cached data."
          }
        },
        "description": "GCP-specific options for ReadCostsRequest."
      },
      "v1ReadCostsRequestGcpOptionsFilters": {
        "type": "object",
        "properties": {
          "andFilters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "description": "A map of \"key:value\" column filters. Dependent on `groupByColumns` and/or `groupByMonth`. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you like to filter `service` to return only `Compute Engine`, set to `{\"service\":\"eq:Compute Engine\"}` or `{\"service\":\"Compute Engine\"}`. You can also use a regular expression like `{\"service\":\"re:Compute Engine|Cloud Storage\"}`, which means return all Compute Engine or Cloud Storage lineitems. Or reverse regexp, such as `{\"service\":\"!re:^Cloud Engine$\"}`, which means return all items except `Cloud Engine`."
      },
      "v1ReadCostsRequestOptionsFilters": {
        "type": "object",
        "properties": {
          "andFilters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "description": "A map of \"key:value\" column filters. Dependent on `groupByColumns` and/or `groupByMonth`. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you like to filter `productCode` to return only `AmazonEC2`, set to `{\"productCode\":\"eq:AmazonEC2\"}` or `{\"productCode\":\"AmazonEC2\"}`. You can also use a regular expression like `{\"productCode\":\"re:AmazonEC2|AmazonRDS\"}`, which means return all AmazonEC2 or AmazonRDS lineitems. Or reverse regexp, such as `{\"productCode\":\"!re:^AmazonEC2$\"}`, which means return all items except `AmazonEC2`."
      },
      "v1ReadCustomizedBillingServicesRequest": {
        "type": "object",
        "properties": {
          "fieldMask": {
            "type": "string",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto"
          }
        },
        "description": "Request message for the Billing.ReadCustomizedBillingServices rpc."
      },
      "v1ReadInvoiceCostsRequest": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "description": "Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`. The oldest supported date is `20240101`."
          },
          "endTime": {
            "type": "string",
            "description": "Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`."
          },
          "toCurrency": {
            "type": "string",
            "description": "Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD)."
          }
        },
        "description": "Request message for the ReadInvoiceCosts rpc."
      },
      "v1ReadInvoiceGroupCostsRequest": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "description": "Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`. The oldest supported date is `20240101`."
          },
          "endTime": {
            "type": "string",
            "description": "Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`."
          },
          "toCurrency": {
            "type": "string",
            "description": "Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD)."
          },
          "limit": {
            "type": "integer",
            "description": "Optional. Number of acquisitions. default:10０.",
            "format": "int32"
          }
        },
        "description": "Request message for the ReadInvoiceGroupCosts rpc."
      },
      "v1ReadInvoiceIdsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "title": "The invoice id",
            "type": "string"
          }
        },
        "description": "Response message for the ReadInvoiceIds rpc."
      },
      "v1ReadInvoiceOverviewsRequest": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "description": "Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`. The oldest supported date is `20240101`."
          },
          "endTime": {
            "type": "string",
            "description": "Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`."
          },
          "toCurrency": {
            "type": "string",
            "description": "Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD)."
          }
        },
        "description": "Request message for the ReadInvoiceOverviews rpc."
      },
      "v1ReadTagCostsRequestAwsOptions": {
        "type": "object",
        "properties": {
          "tagId": {
            "type": "string",
            "description": "Optional. If set, only return data for this tagId."
          },
          "groupByColumns": {
            "type": "string",
            "description": "Optional. A comma-separated list of columns to aggregate the data into. Valid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, and `resourceId`. A special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and region data, you can set this field to `productCode,region`. Your input sequence doesn't matter (although the sequence above is recommended) as the actual sequence is already fixed in the return data (see the definition in https://github.com/alphauslabs/blueapi/blob/main/api/aws/cost.proto), which is generic to specific, top to bottom. Invalid values are discarded. Excluded columns will be empty."
          },
          "groupByMonth": {
            "type": "boolean",
            "description": "Optional. If set to true, return data grouped by month within the date range. If you want data that is grouped per account per month, set this to `true`, then set `groupByColumns` to `none`. You can also use `groupByColumns` while setting this to true."
          },
          "filters": {
            "type": "array",
            "description": "Optional. A list of filtering options. See [ReadCostsRequestAwsOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.",
            "items": {
              "$ref": "#/components/schemas/v1ReadCostsRequestAwsOptionsFilters"
            }
          },
          "tagFilters": {
            "type": "array",
            "description": "Optional. A list of filtering options specific for tags. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc. Discarded when `groupByColumns` field is set or if `groupByMonth` is true.",
            "items": {
              "$ref": "#/components/schemas/v1ReadTagCostsRequestAwsOptionsTagFilters"
            }
          },
          "includeTags": {
            "type": "boolean",
            "description": "Optional. If set to true, stream will include resource tags. Discarded when `groupByColumns` field is set to `none`."
          },
          "includeCostCategories": {
            "type": "boolean",
            "description": "Optional. If set to true, stream will include resource cost category information. Discarded when `groupByColumns` field is set to `none`."
          },
          "toCurrency": {
            "type": "string",
            "description": "Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD)."
          },
          "forceLatest": {
            "type": "boolean",
            "description": "Optional. If set to true, always get the up-to-date calculation results. This data isn't necessarily in-sync with your invoice data as AWS could still have updated your CUR files even after you created your invoices. By default, returned data are those that are always in-sync with your invoices.\n\nThis field is discarded for Wave(Pro) users. You will always get the latest data that is in-sync with your invoices."
          },
          "noCache": {
            "type": "boolean",
            "description": "If true, force API to not use cached data."
          },
          "tagIds": {
            "type": "array",
            "description": "Optional. If set, only return data list tags.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1ReadTagCostsRequestAwsOptionsTagFilters": {
        "type": "object",
        "properties": {
          "andFilters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "description": "A map of \"key:value\" tag filters. The key indicates the tag key while the value is the filter tag value which can be prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.\n\nFor example, if you want to query lineitems with the tag `project:MY_PROJECT`, set to `{\"project\":\"MY_PROJECT\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`."
      },
      "v1RegisterAccounts": {
        "title": "Register Accounts definition",
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Optional.\nIf enabled, any additional accounts will be automatically enrolled into the billing group.\nIf disabled, register the account manually.\n\nFor GCP, Register projectId under the specific Sub billing account.\nFor AWS, Register accountId under the specific payer account into the billing group"
          },
          "accountId": {
            "type": "string",
            "description": "Optional. AccountId to be used for registration into the billing group."
          }
        }
      },
      "v1RegisterDataAccessRequest": {
        "type": "object",
        "properties": {
          "vendor": {
            "title": "Vendor (Azure/GCP)",
            "type": "string"
          },
          "target": {
            "title": "Billing Id for GCP, Account Id for Azure",
            "type": "string"
          },
          "accountType": {
            "title": "Account type (payer/linked)",
            "type": "string"
          },
          "gcpOptions": {
            "$ref": "#/components/schemas/coverGcpOptions"
          },
          "azureOptions": {
            "$ref": "#/components/schemas/apicoverAzureOptions"
          },
          "awsOptions": {
            "$ref": "#/components/schemas/apicoverAwsOptions"
          }
        },
        "description": "Request message for Register Data Access. For azure and gcp."
      },
      "v1RegisterNewUserRequest": {
        "title": "Request message for RegisterNewUser",
        "type": "object",
        "properties": {
          "email": {
            "title": "required email",
            "type": "string"
          },
          "password": {
            "title": "required password",
            "type": "string"
          },
          "name": {
            "title": "required user Name",
            "type": "string"
          },
          "company": {
            "title": "required company name",
            "type": "string"
          },
          "role": {
            "title": "required company role",
            "type": "string"
          },
          "amount": {
            "title": "optional company monthly cloud usage",
            "type": "string"
          },
          "intention": {
            "title": "optional intention",
            "type": "string"
          }
        }
      },
      "v1RegisterNewUserResponse": {
        "type": "object",
        "properties": {
          "isAuthorized": {
            "type": "boolean"
          }
        }
      },
      "v1RemoveCostGroupMemberResponse": {
        "title": "Response message for RemoveCostGroupMember",
        "type": "object",
        "properties": {
          "costGroupId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "v1RemoveFavoriteRequest": {
        "title": "Request message for RemoveFavorite",
        "type": "object",
        "properties": {
          "viewId": {
            "type": "string",
            "description": "Required. View Id."
          }
        }
      },
      "v1RemoveFavoriteResponse": {
        "title": "Response message for RemoveFavorite",
        "type": "object",
        "properties": {
          "viewId": {
            "type": "string"
          }
        }
      },
      "v1RemoveSideMenuFavoriteResponse": {
        "title": "Response message for RemoveSideMenuFavorite",
        "type": "object",
        "properties": {
          "viewId": {
            "type": "string"
          }
        }
      },
      "v1ReportSchedule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "schedule": {
            "type": "string"
          },
          "status": {
            "title": "Supported values: \"on\", \"off\"",
            "type": "string"
          },
          "scheduleCron": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string"
          }
        }
      },
      "v1ResetPasswordRequest": {
        "title": "Request message for ResetPassword",
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Required. UserId."
          }
        }
      },
      "v1ResetPasswordResponse": {
        "title": "Response message for ResetPassword",
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          }
        }
      },
      "v1ResetRipplePasswordRequest": {
        "title": "Request message for resetting ripple password",
        "type": "object",
        "properties": {
          "resetCode": {
            "title": "Required. Reset code from email",
            "type": "string"
          },
          "newPassword": {
            "title": "Required. Atleast 8 characters",
            "type": "string"
          }
        }
      },
      "v1ResetRipplePasswordResponse": {
        "type": "object",
        "properties": {
          "userName": {
            "title": "Ripple account information of the reseted password",
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "v1ResetUserPasswordRequest": {
        "title": "Request message for ResetUserPassword",
        "type": "object",
        "properties": {
          "previousPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "v1ResetUserPasswordResponse": {
        "title": "Response message for ResetUserPassword",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1ResolveAWSMarketplaceTokenForOnboardingRequest": {
        "type": "object",
        "properties": {
          "registrationToken": {
            "type": "string"
          }
        }
      },
      "v1ResolveAWSMarketplaceTokenForOnboardingResponse": {
        "type": "object",
        "properties": {
          "isAllowedToOnboard": {
            "type": "boolean"
          },
          "customerId": {
            "type": "string"
          }
        }
      },
      "v1ResolveCostGroupCombinationsResponse": {
        "type": "object",
        "properties": {
          "costGroupId": {
            "type": "string"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apicoverAccount"
            }
          }
        }
      },
      "v1Resource": {
        "type": "object",
        "properties": {
          "date": {
            "title": "Format is `yyyy-mm`",
            "type": "string"
          },
          "orgId": {
            "title": "Organization ID",
            "type": "string"
          },
          "vendor": {
            "type": "string",
            "description": "Only `aws` is supported for now."
          },
          "account": {
            "title": "Resource owner account",
            "type": "string"
          },
          "service": {
            "type": "string",
            "description": "Only `AmazonEC2` is supported for now."
          },
          "resourceId": {
            "title": "Resource unique identifier",
            "type": "string"
          },
          "resourceType": {
            "title": "Only `AWS::EC2::Instance` is supported for now",
            "type": "string"
          },
          "cost": {
            "type": "number",
            "description": "Cost incurred for the resource on specified month.",
            "format": "double"
          },
          "properties": {
            "title": "Format: JSON String",
            "type": "string"
          },
          "recommendation": {
            "title": "Format: JSON String",
            "type": "string"
          }
        }
      },
      "v1ResourceAccount": {
        "type": "object",
        "properties": {
          "payerId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "registered": {
            "type": "boolean"
          }
        }
      },
      "v1RestoreAccountUsageRequest": {
        "type": "object",
        "properties": {
          "allocationId": {
            "type": "string",
            "description": "Required. The account usage to restore."
          }
        },
        "description": "Request message for the RestoreAccountUsage rpc."
      },
      "v1RestoreFeeRequest": {
        "type": "object",
        "properties": {
          "feeId": {
            "type": "string",
            "description": "Required. The fee to restore."
          }
        },
        "description": "Request message for the RestoreFee rpc."
      },
      "v1RestoreSavingsRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Required. The item to restore."
          }
        },
        "description": "Request message for the RestoreSavings rpc."
      },
      "v1SaveNotificationSettingsRequest": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Required. Enable or disable notifications globally."
          },
          "defaultChannel": {
            "type": "string",
            "description": "Optional. If non-empty, set this notification channel id as the default channel."
          }
        },
        "description": "Request message for the Admin.SaveNotificationSettings rpc."
      },
      "v1SavingsDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "month": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "arn": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "offerClass": {
            "type": "string"
          },
          "ondemand": {
            "type": "number",
            "format": "double"
          },
          "effectiveCost": {
            "type": "number",
            "format": "double"
          },
          "savings": {
            "type": "number",
            "format": "double"
          },
          "splitStatus": {
            "type": "string"
          },
          "isAllocated": {
            "type": "boolean"
          },
          "isApplied": {
            "type": "boolean"
          },
          "source": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string"
          }
        },
        "description": "Response message for ListSavings, RestoreSavings, SimulateSavings rpc."
      },
      "v1SendRipplePasswordResetCodeRequest": {
        "title": "Request message for ripple account password recovery",
        "type": "object",
        "properties": {
          "email": {
            "title": "Required. Ripple account email address",
            "type": "string"
          }
        }
      },
      "v1Service": {
        "type": "object",
        "properties": {
          "serviceCode": {
            "type": "string",
            "description": "The service code."
          },
          "serviceName": {
            "type": "string",
            "description": "The service name."
          }
        },
        "description": "Service resource definition.\nServices of each vendor available for Service Discounts."
      },
      "v1ServiceDiscountsExport": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/v1ExportData"
          }
        },
        "description": "ServiceDiscountsExport resource definition."
      },
      "v1SetCostGroupAnomalyOptionsResponse": {
        "type": "object",
        "properties": {
          "costGroupId": {
            "type": "string"
          },
          "anomalyOptions": {
            "$ref": "#/components/schemas/coverAnomalyOptions"
          }
        }
      },
      "v1SetCostGroupEventIndicatorResponse": {
        "type": "object",
        "properties": {
          "costGroupId": {
            "type": "string"
          },
          "eventIndicator": {
            "$ref": "#/components/schemas/coverEventIndicator"
          }
        }
      },
      "v1SetCustomizedBillingServiceBillingGroupRequestCustomizedBillingServiceBillingSetting": {
        "title": "CustomizedBillingServiceBillingSetting",
        "required": [
          "chargingTarget",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Required. [blueapi.api.ripple.CustomizedBillingService.id]",
            "type": "string"
          },
          "chargingTarget": {
            "$ref": "#/components/schemas/rippleChargingTarget"
          },
          "accounts": {
            "type": "array",
            "description": "Optional. if chargingTarget is BILLINGGROUP, `accounts` is set emptty.\n\nSpecify the accountIds. For example: [`accountId1`,`accountId2`,`accountId3`]",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1SetOrgFiscalMonthRequest": {
        "type": "object",
        "properties": {
          "fiscalMonth": {
            "title": "Required. Fiscal month. Valid inputs are: \"01 - 12\"",
            "type": "string"
          }
        }
      },
      "v1SetOrgFiscalMonthResponse": {
        "type": "object",
        "properties": {
          "fiscalMonth": {
            "type": "string"
          }
        }
      },
      "v1SetOrgUpdateCurrencyRequest": {
        "type": "object",
        "properties": {
          "updateCurrency": {
            "title": "Required. Day of the month. Valid inputs are: \"1 - 31\"",
            "type": "string",
            "format": "int64"
          }
        }
      },
      "v1SetOrgUpdateCurrencyResponse": {
        "type": "object",
        "properties": {
          "updateCurrency": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "v1SettingsHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Payer account ID."
          },
          "accountScope": {
            "type": "string",
            "description": "Account scope determines if the account is payer or linked account."
          },
          "customization": {
            "type": "string",
            "description": "Customization setting for SP."
          },
          "planTerm": {
            "type": "string",
            "description": "Term of the SP."
          },
          "paymentOption": {
            "type": "string",
            "description": "Payment option for the SP."
          },
          "lookBackPeriod": {
            "type": "string",
            "description": "Lookback period for recommendation."
          },
          "instanceFamily": {
            "title": "If EC2 Instance SP is selected in Customization, request will include list of instance family",
            "type": "string"
          },
          "annualBudget": {
            "type": "number",
            "description": "Annual budget input for SP.",
            "format": "double"
          },
          "approval": {
            "type": "boolean",
            "description": "Purchase approval from the payer for the SP."
          },
          "lastUpdated": {
            "type": "string",
            "description": "Last updated timestamp of the settings configuration."
          }
        },
        "description": "Settings history message."
      },
      "v1SpDetails": {
        "type": "object",
        "properties": {
          "payerId": {
            "type": "string",
            "description": "The payer account ID for which the savings plan details are fetched."
          },
          "savingsPlanType": {
            "type": "string",
            "description": "The savings plan type, e.g., `Compute`, `Ec2`."
          },
          "state": {
            "type": "string",
            "description": "The current state of the savings plan, e.g., `ACTIVE`, `EXPIRED`, `PENDING`."
          },
          "startTime": {
            "type": "string",
            "description": "The start time of the savings plan."
          },
          "endTime": {
            "type": "string",
            "description": "The end time of the savings plan."
          },
          "returnableUntil": {
            "type": "string",
            "description": "The date until which the savings plan is returnable, if applicable."
          },
          "currency": {
            "type": "string",
            "description": "The currency in which the savings plan is priced, e.g., `USD`."
          },
          "commitment": {
            "type": "number",
            "description": "The commitment amount per hour for the savings plan in USD.",
            "format": "double"
          },
          "description": {
            "type": "string",
            "description": "A description of the savings plan, including details like the instance family and payment option."
          },
          "paymentOption": {
            "type": "string",
            "description": "The payment option for the savings plan, e.g., `All Upfront`, `Partial Upfront`, `No Upfront`."
          },
          "productTypes": {
            "type": "array",
            "description": "The product types covered by the savings plan, e.g., `EC2`, `Lambda`.",
            "items": {
              "type": "string"
            }
          },
          "ec2InstanceFamily": {
            "type": "array",
            "description": "The EC2 instance families covered by the savings plan, e.g., `m5`, `c5`.",
            "items": {
              "type": "string"
            }
          },
          "recurringPaymentAmount": {
            "type": "number",
            "description": "The periodic (usually monthly) charge to pay over the term of the plan.",
            "format": "double"
          },
          "upfrontPaymentAmount": {
            "type": "number",
            "description": "The total amount paid at the start of the Savings Plan, if applicable.",
            "format": "double"
          },
          "tags": {
            "type": "string",
            "description": "The tag that refers to the one who purchased the Savings Plan."
          }
        },
        "description": "Savings Plan Details to be used in the GetDailyUsageCostDetailsResponse."
      },
      "v1SupportPlan": {
        "type": "string",
        "description": "Describes the overall config of a [blueapi.api.ripple.v1.SupportPlan].\n\n - NO_SUPPORT: no_support\n - AWS_DEVELOPER: aws_developer\n - AWS_BUSINESS: aws_business\n - AWS_ENTERPRISE: aws_enterprise\n - AWS_ENTERPRISE_ON_RAMP: aws_enterprise_on_ramp",
        "default": "NO_SUPPORT",
        "enum": [
          "NO_SUPPORT",
          "AWS_DEVELOPER",
          "AWS_BUSINESS",
          "AWS_ENTERPRISE",
          "AWS_ENTERPRISE_ON_RAMP"
        ]
      },
      "v1SupportedService": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "description": "AWS or Azure services only as of now."
          },
          "regions": {
            "type": "array",
            "description": "Array of regions supported for the specific service.",
            "items": {
              "type": "string"
            }
          },
          "attributes": {
            "type": "array",
            "description": "Array of attributes that can be used as key-value pairs for filtering.",
            "items": {
              "$ref": "#/components/schemas/v1Attribute"
            }
          },
          "columns": {
            "type": "array",
            "description": "Array of column names that can be used to specify what columns should `/{vendor}/pricing` return.\nFor usage information, visit https://labs.alphaus.cloud/blueapidocs/#/Pricing/Pricing_GetPricing.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1TagSetting": {
        "title": "Settings for a specific customer account for AddTagsToBillingGroup",
        "type": "object",
        "properties": {
          "customerId": {
            "title": "Customer ID",
            "type": "string"
          },
          "tags": {
            "title": "Tags associated with this customer",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingv1Tag"
            }
          }
        }
      },
      "v1Tags": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1TagsAddingSetting": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "tagKeys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1Team": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "org": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "v1TerminateResourceResponse": {
        "title": "Response message for TerminateResource",
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "region": {
            "type": "string"
          }
        }
      },
      "v1TestResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          }
        }
      },
      "v1ThirdProfitItemSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id.\n\nThe currently supported thirdProfit items are as follows:\n`Miscellaneous`\n`CustomizedService`\n`AgencyFee`\n`SupportFee`"
          },
          "name": {
            "type": "string",
            "description": "The name.\nA value equivalent to the id will be set."
          },
          "profit": {
            "type": "number",
            "description": "The profit cost.",
            "format": "double"
          }
        },
        "description": "ThirdProfitItemSection resource definition."
      },
      "v1TotalDetailSection": {
        "type": "object",
        "properties": {
          "totalCost": {
            "type": "number",
            "description": "Cost(True unblended or Unblended) used for invoicing.",
            "format": "double"
          },
          "sppDiscount": {
            "type": "number",
            "description": "The spp discount cost.",
            "format": "double"
          },
          "thirdProfitItem": {
            "type": "number",
            "description": "The third profit item cost.",
            "format": "double"
          },
          "trueUnblendedProfitRi": {
            "type": "number",
            "description": "The profit from RI (True Unblended).",
            "format": "double"
          },
          "trueUnblendedProfitSp": {
            "type": "number",
            "description": "The profit from SP (True Unblended).",
            "format": "double"
          }
        },
        "description": "TotalDetailSection resource definition."
      },
      "v1TotalSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id. id:TotalSection."
          },
          "name": {
            "type": "string",
            "description": "The name. name:TotalSection."
          },
          "currency": {
            "type": "string",
            "description": "The currency."
          },
          "yearMonth": {
            "title": "The year-month. format: yyyymm",
            "type": "string"
          },
          "invoiceCost": {
            "type": "number",
            "description": "The invoice cost.",
            "format": "double"
          },
          "procurementCost": {
            "type": "number",
            "description": "The procurement cost.",
            "format": "double"
          },
          "profitCost": {
            "type": "number",
            "description": "The profit cost.",
            "format": "double"
          },
          "totalDeital": {
            "$ref": "#/components/schemas/v1TotalDetailSection"
          },
          "thirdProfitItem": {
            "type": "array",
            "description": "The third profit item.",
            "items": {
              "$ref": "#/components/schemas/v1ThirdProfitItemSection"
            }
          },
          "awsSection": {
            "$ref": "#/components/schemas/v1VendorTotalSection"
          },
          "azureSection": {
            "$ref": "#/components/schemas/v1VendorTotalSection"
          },
          "gcpSection": {
            "$ref": "#/components/schemas/v1VendorTotalSection"
          }
        },
        "description": "TotalSection resource definition."
      },
      "v1TransferOrganizationResponse": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string"
          }
        }
      },
      "v1UndoExecutedRecommendationRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1UndoExecutedRecommendationResponse": {
        "type": "object"
      },
      "v1UnregisteredAccts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the unregistered account."
          },
          "payerId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string"
          }
        }
      },
      "v1UpdateAccountInvoiceServiceDiscountsResponse": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1AccountServiceDiscounts"
            }
          }
        },
        "description": "Response message for the UpdateAccountInvoiceServiceDiscounts rpc."
      },
      "v1UpdateAlertDetailsResponse": {
        "title": "Response message for UpdateAlertDetails",
        "type": "object",
        "properties": {
          "alertData": {
            "$ref": "#/components/schemas/coverAlertData"
          }
        }
      },
      "v1UpdateAnnouncementsStatusRequest": {
        "type": "object",
        "properties": {
          "announcementId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string"
          }
        }
      },
      "v1UpdateBillingGroupAdditionalChargesRequestCustomizedBillingServiceBillingSetting": {
        "title": "CustomizedBillingServiceBillingSetting",
        "required": [
          "chargingTarget",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Required. [blueapi.api.ripple.CustomizedBillingService.id]",
            "type": "string"
          },
          "chargingTarget": {
            "$ref": "#/components/schemas/rippleChargingTarget"
          },
          "accounts": {
            "type": "array",
            "description": "Optional. if chargingTarget is BILLINGGROUP, `accounts` is set emptty.\n\nSpecify the accountIds. For example: [`accountId1`,`accountId2`,`accountId3`]",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1UpdateBillingGroupInvoiceServiceDiscountsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Service discount id."
          }
        },
        "description": "Response message for the UpdateBillingGroupInvoiceServiceDiscounts rpc."
      },
      "v1UpdateBudgetResponse": {
        "type": "object",
        "properties": {
          "budgetData": {
            "$ref": "#/components/schemas/coverBudgetData"
          }
        }
      },
      "v1UpdateChannelDetailsResponse": {
        "title": "Response message for UpdateChannelDetails",
        "type": "object",
        "properties": {
          "channelData": {
            "$ref": "#/components/schemas/coverChannelData"
          }
        }
      },
      "v1UpdateCostFiltersResponse": {
        "type": "object",
        "properties": {
          "filterId": {
            "type": "string",
            "description": "Required. Filter Id."
          }
        },
        "description": "Response message for the UpdateCostFilters rpc."
      },
      "v1UpdateCostGroupColorThemeResponse": {
        "title": "Response message for UpdateCostGroupColorTheme",
        "type": "object",
        "properties": {
          "colorTheme": {
            "type": "string"
          }
        }
      },
      "v1UpdateCostGroupCombinationsResponse": {
        "title": "Response message for UpdateCostGroupCombinations",
        "type": "object",
        "properties": {
          "combinations": {
            "$ref": "#/components/schemas/coverCombinations"
          }
        }
      },
      "v1UpdateCostGroupCreationUIRequest": {
        "type": "object",
        "properties": {
          "useNewCostGroupCreationUI": {
            "type": "boolean"
          }
        }
      },
      "v1UpdateCostGroupCreationUIResponse": {
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1UpdateCostGroupDescriptionResponse": {
        "title": "Response message for UpdateCostGroupDescription",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "v1UpdateCostGroupIconResponse": {
        "title": "Response message for UpdateCostGroupIcon",
        "type": "object",
        "properties": {
          "icon": {
            "type": "string"
          }
        }
      },
      "v1UpdateCostGroupImageResponse": {
        "title": "Response message for UpdateCostGroupImage",
        "type": "object",
        "properties": {
          "image": {
            "type": "string"
          }
        }
      },
      "v1UpdateCostGroupNameResponse": {
        "title": "Response message for UpdateCostGroupName",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "v1UpdateInvoiceDisplaySettingsRequest": {
        "type": "object",
        "properties": {
          "setting": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        },
        "description": "Request message for UpdateInvoiceDisplaySettings rpc."
      },
      "v1UpdateMSPDefaultMetaRequest": {
        "type": "object",
        "properties": {
          "mspId": {
            "type": "string"
          },
          "defaultMeta": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1UpdateMemberPermissionResponse": {
        "title": "Response message for UpdateMemberPermission",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1UpdateMetadataRequest": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "description": "Request message for the Organization.UpdateMetadata rpc."
      },
      "v1UpdatePasswordRequest": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        },
        "description": "Request message for the Organization.UpdatePassword rpc."
      },
      "v1UpdateSettingsResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          }
        }
      },
      "v1UpdateSharedResourcesResponse": {
        "type": "object",
        "properties": {
          "sharedResources": {
            "$ref": "#/components/schemas/coverSharedResourcesCombination"
          }
        }
      },
      "v1UpdateSideMenuStateResponse": {
        "title": "Response message for UpdateSideMenuState",
        "type": "object",
        "properties": {
          "viewId": {
            "type": "string"
          }
        }
      },
      "v1UpdateUnitMetricResponse": {
        "type": "object",
        "properties": {
          "unitMetric": {
            "$ref": "#/components/schemas/coverUnitMetric"
          }
        }
      },
      "v1UpdateUnitTypeResponse": {
        "type": "object",
        "properties": {
          "unitCostData": {
            "$ref": "#/components/schemas/coverUnitCostData"
          }
        }
      },
      "v1UpdateUserAppThemeRequest": {
        "title": "Request message for UpdateUserAppTheme",
        "type": "object",
        "properties": {
          "appTheme": {
            "type": "string"
          }
        }
      },
      "v1UpdateUserAppThemeResponse": {
        "title": "Response message for UpdateUserAppTheme",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1UpdateUserAttributesRequest": {
        "title": "Request message for UpdateUserAttributes",
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "v1UpdateUserAttributesResponse": {
        "title": "Response message for UpdateUserAttributes",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1UpdateUserAvatarRequest": {
        "title": "Request message for UpdateUserAvatar",
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string"
          }
        }
      },
      "v1UpdateUserAvatarResponse": {
        "title": "Response message for UpdateUserAvatar",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1UpdateUserColorThemeRequest": {
        "title": "Request message for UpdateUserColorTheme",
        "type": "object",
        "properties": {
          "colorTheme": {
            "type": "string"
          }
        }
      },
      "v1UpdateUserColorThemeResponse": {
        "title": "Response message for UpdateUserColorTheme",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1UpdateUserEmailRequest": {
        "title": "Request message for UpdateUserEmail",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "v1UpdateUserEmailResponse": {
        "title": "Response message for UpdateUserEmail",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1UpdateUserIconRequest": {
        "title": "Request message for UpdateUserIcon",
        "type": "object",
        "properties": {
          "icon": {
            "type": "string"
          }
        }
      },
      "v1UpdateUserIconResponse": {
        "title": "Response message for UpdateUserIcon",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1UpdateUserLocaleRequest": {
        "title": "Request message for UpdateUserLocale",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string"
          }
        }
      },
      "v1UpdateUserLocaleResponse": {
        "title": "Response message for UpdateUserLocale",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1UpdateUserMainViewRequest": {
        "title": "Request message for UpdateUserMainView",
        "type": "object",
        "properties": {
          "viewId": {
            "type": "string"
          }
        }
      },
      "v1UpdateUserMainViewResponse": {
        "title": "Response message for UpdateUserMainView",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1UpdateUserNameRequest": {
        "title": "Request message for UpdateUserName",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "v1UpdateUserNameResponse": {
        "title": "Response message for UpdateUserName",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1UpdateUserProfileResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "usage": {
            "type": "string"
          },
          "intention": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "linkSource": {
            "type": "string"
          },
          "hasSubscribedUpdates": {
            "type": "boolean"
          }
        }
      },
      "v1UpdateUserRoleMappingRequest": {
        "type": "object",
        "properties": {
          "subUser": {
            "type": "string",
            "description": "Optional. The subuser to map the roles. Defaults to caller if not set."
          },
          "roles": {
            "type": "array",
            "description": "Required. The roles to map to the user. Limited to 5 items. Setting `role` to empty will remove the mapping.",
            "items": {
              "$ref": "#/components/schemas/v1MapRole"
            }
          }
        },
        "description": "Request message for the Iam.UpdateUserRoleMapping rpc."
      },
      "v1UpdateUserRoleMappingResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "failed": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Response message for the Iam.UpdateUserRoleMapping rpc."
      },
      "v1UpdateUserTimezoneRequest": {
        "title": "Request message for UpdateUserTimezone",
        "type": "object",
        "properties": {
          "timeZone": {
            "type": "string"
          },
          "autoTimeZone": {
            "type": "boolean"
          }
        }
      },
      "v1UpdateUserTimezoneResponse": {
        "title": "Response message for UpdateUserTimezone",
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/coverUserData"
          }
        }
      },
      "v1UpdateViewColorThemeResponse": {
        "title": "Response message for UpdateViewColorTheme",
        "type": "object",
        "properties": {
          "viewData": {
            "$ref": "#/components/schemas/coverViewData"
          }
        }
      },
      "v1UpdateViewCurrencyResponse": {
        "title": "Response message for UpdateViewCurrency",
        "type": "object",
        "properties": {
          "viewData": {
            "$ref": "#/components/schemas/coverViewData"
          }
        }
      },
      "v1UpdateViewLayoutResponse": {
        "title": "Response message for UpdateViewLayout",
        "type": "object",
        "properties": {
          "layout": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverViewLayout"
            }
          }
        }
      },
      "v1UpdateViewResponse": {
        "title": "Response message for UpdateView",
        "type": "object",
        "properties": {
          "viewId": {
            "type": "string"
          }
        }
      },
      "v1UpdateViewWidgetResponse": {
        "title": "Response message for UpdateViewWidget",
        "type": "object",
        "properties": {
          "widgetId": {
            "type": "string"
          },
          "widgetData": {
            "$ref": "#/components/schemas/coverWidgetData"
          }
        }
      },
      "v1UpdateWaveFeatureSettingRequest": {
        "type": "object",
        "properties": {
          "lang": {
            "type": "string"
          },
          "featureSetting": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1FeatureSetting"
            }
          }
        }
      },
      "v1UploadChargeCodeRequest": {
        "title": "(WIP): Request message for Upload Charge Code",
        "type": "object",
        "properties": {
          "name": {
            "title": "Required. File name",
            "type": "string",
            "description": "file name"
          },
          "type": {
            "title": "Required. File type",
            "type": "string",
            "description": "file type"
          },
          "file": {
            "title": "Required. Convert file into bytes to transfer file",
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "description": "file in bytes",
            "format": "byte"
          }
        }
      },
      "v1UploadChargeCodeResponse": {
        "title": "(WIP): Response message for Upload Charge Code",
        "type": "object",
        "properties": {
          "name": {
            "title": "File name",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/coverv1Status"
          }
        }
      },
      "v1UsageCostDetails": {
        "type": "object",
        "properties": {
          "currentDate": {
            "type": "string",
            "description": "The specific date this entry represents, corresponding to one day within the requested date range."
          },
          "productCode": {
            "type": "string",
            "description": "The product code for which the usage and cost details are provided."
          },
          "ondemandUsage": {
            "type": "number",
            "description": "Total On-Demand usage in hours for the date.",
            "format": "double"
          },
          "ondemandCost": {
            "type": "number",
            "description": "Total On-Demand cost in USD for the date.",
            "format": "double"
          },
          "reservedUsage": {
            "type": "number",
            "description": "Total Reserved Instance usage in hours for the date.",
            "format": "double"
          },
          "reservedCost": {
            "type": "number",
            "description": "Total Reserved Instance cost in USD for the date.",
            "format": "double"
          },
          "savingsPlanUsageByFlow": {
            "type": "number",
            "description": "Total Savings Plan usage in hours for the date purchased by Flow.",
            "format": "double"
          },
          "savingsPlanCostByFlow": {
            "type": "number",
            "description": "Total Savings Plan cost in USD for the date purchased by Flow.",
            "format": "double"
          },
          "savingsPlanUsageByUser": {
            "type": "number",
            "description": "Total Savings Plan usage in hours for the date purchased by user.",
            "format": "double"
          },
          "savingsPlanCostByUser": {
            "type": "number",
            "description": "Total Savings Plan cost in USD for the date purchased by user.",
            "format": "double"
          },
          "spotUsage": {
            "type": "number",
            "description": "Total Spot Instance usage in hours for the date.",
            "format": "double"
          },
          "spotCost": {
            "type": "number",
            "description": "Total Spot Instance cost in USD for the date.",
            "format": "double"
          },
          "coveragePercentage": {
            "type": "number",
            "description": "Percentage of Savings Plan coverage for the date.",
            "format": "double"
          },
          "utilizationPercentage": {
            "type": "number",
            "description": "Percentage of Savings Plan utilization for the date.",
            "format": "double"
          }
        },
        "description": "Usage and Cost Details to be used in the GetDailyUsageCostDetailsResponse."
      },
      "v1UsageCostsDrift": {
        "type": "object",
        "properties": {
          "billingInternalId": {
            "type": "string"
          },
          "billingGroupId": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "snapshot": {
            "type": "number",
            "description": "The total costs saved in your invoice.",
            "format": "double"
          },
          "current": {
            "type": "number",
            "description": "The current total costs.",
            "format": "double"
          },
          "diff": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "Streaming response message for the Billing.ListUsageCostsDrift rpc."
      },
      "v1ValidateResetPasswordLinkAndChangePasswordRequest": {
        "type": "object",
        "properties": {
          "originalEncodedCode": {
            "type": "string"
          },
          "userInputEncodedCode": {
            "type": "string"
          }
        },
        "description": "Request for message Iam.ValidateVerificationCode rpc."
      },
      "v1ValidateResetPasswordLinkAndChangePasswordResponse": {
        "type": "object",
        "properties": {
          "isPasswordUpdated": {
            "type": "boolean"
          },
          "isResetPasswordLinkValid": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string"
          }
        },
        "description": "Response for message Iam.ValidateVerificationCode rpc."
      },
      "v1VendorAccounts": {
        "title": "Optional. Vendor accounts to add to the billing group",
        "type": "object",
        "properties": {
          "vendor": {
            "title": "Required. (aws, azure, gcp)",
            "type": "string"
          },
          "accounts": {
            "title": "Required. List of accounts to be added to the billing group",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1AccountToAdd"
            }
          }
        }
      },
      "v1VendorOverViewSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id. id:VendorOverViewSection."
          },
          "name": {
            "type": "string",
            "description": "The name. name:VendorOverViewSection."
          },
          "currency": {
            "type": "string",
            "description": "The currency."
          },
          "invoiceCost": {
            "type": "number",
            "description": "The invoice cost.",
            "format": "double"
          },
          "procurementCost": {
            "type": "number",
            "description": "The procurement cost.",
            "format": "double"
          },
          "profitCost": {
            "type": "number",
            "description": "The profit cost.",
            "format": "double"
          },
          "options": {
            "$ref": "#/components/schemas/v1OverViewOptionSection"
          },
          "periodOverPeriod": {
            "$ref": "#/components/schemas/v1PeriodOverPeriodSection"
          }
        },
        "description": "VendorOverViewSection resource definition."
      },
      "v1VendorTotalSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id. id:VendorTotalSection."
          },
          "name": {
            "type": "string",
            "description": "The name. name:VendorTotalSection."
          },
          "currency": {
            "type": "string",
            "description": "The currency."
          },
          "yearMonth": {
            "title": "The year-month. format: yyyymm",
            "type": "string"
          },
          "invoiceCost": {
            "type": "number",
            "description": "The invoice cost.",
            "format": "double"
          },
          "procurementCost": {
            "type": "number",
            "description": "The procurement cost.",
            "format": "double"
          },
          "profitCost": {
            "type": "number",
            "description": "The profit cost.",
            "format": "double"
          },
          "totalDeital": {
            "$ref": "#/components/schemas/v1TotalDetailSection"
          },
          "thirdProfitItem": {
            "type": "array",
            "description": "The yhird profit item.",
            "items": {
              "$ref": "#/components/schemas/v1ThirdProfitItemSection"
            }
          }
        },
        "description": "VendorTotalSection resource definition."
      },
      "v1VerifyAPIAccessResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          }
        }
      },
      "v1VerifyUserForResetPasswordResponse": {
        "type": "object",
        "properties": {
          "doesUserExists": {
            "type": "boolean"
          }
        },
        "description": "Response message for Iam.VerifyUserForResetPassword rpc."
      },
      "v1VerifyUserRequest": {
        "type": "object"
      },
      "v1VerifyUserResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "org": {
            "type": "string"
          },
          "isOwner": {
            "type": "boolean"
          }
        }
      },
      "v1WaveFeature": {
        "title": "for wave features settings data maping",
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "featureId": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "tickStrategy": {
            "type": "string"
          },
          "condition": {
            "type": "string"
          },
          "flag": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1WaveFeature"
            }
          }
        }
      },
      "v1Workflow": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "Allowed values are \"on\" and \"off\"."
          }
        }
      },
      "waveAdjustment": {
        "type": "object",
        "properties": {
          "yearMonth": {
            "title": "Year month",
            "type": "string"
          },
          "feeType": {
            "title": "Fee type",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "productCode": {
            "title": "ProductCode",
            "type": "string"
          },
          "productName": {
            "title": "ProductName",
            "type": "string"
          },
          "usageAccountId": {
            "title": "UsageAccountId",
            "type": "string"
          },
          "currencyCode": {
            "title": "CurrencyCode",
            "type": "string"
          },
          "payerAccountId": {
            "title": "PayerAccountId",
            "type": "string"
          },
          "cost": {
            "title": "Cost",
            "type": "string"
          },
          "timeInterval": {
            "title": "TimeInterval",
            "type": "string"
          },
          "usageStartDate": {
            "title": "UsageStartDate",
            "type": "string"
          }
        },
        "description": "Adjustment resource definition."
      }
    }
  },
  "x-original-swagger-version": "2.0"
}
